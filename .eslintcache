[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/CCCPaint.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/util/toolType.ts":"3","/Users/jinmingliu/work/ccc-react-paint/src/utils.tsx":"4","/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/index.ts":"5","/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts":"6","/Users/jinmingliu/work/ccc-react-paint/src/left-tool/index.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/right/index.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/edit/index.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/canvas/index.tsx":"10","/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/event.ts":"11","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/shape.ts":"12","/Users/jinmingliu/work/ccc-react-paint/src/left-tool/util.tsx":"13","/Users/jinmingliu/work/ccc-react-paint/src/edit/Resize.tsx":"14","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/tool.ts":"15","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/index.ts":"16","/Users/jinmingliu/work/ccc-react-paint/src/util/snapshot/index.ts":"17","/Users/jinmingliu/work/ccc-react-paint/src/right/showShape/index.tsx":"18","/Users/jinmingliu/work/ccc-react-paint/src/right/text/index.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/right/formatColor/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/right/pen/index.tsx":"21","/Users/jinmingliu/work/ccc-react-paint/src/right/earser/index.tsx":"22","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorExtract.ts":"23","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorFill.ts":"24","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/eraser.ts":"25","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/pen.ts":"26","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/Text.ts":"27","/Users/jinmingliu/work/ccc-react-paint/src/right/components/shape/index.tsx":"28","/Users/jinmingliu/work/ccc-react-paint/src/right/components/colorPanel/index.tsx":"29","/Users/jinmingliu/work/ccc-react-paint/src/right/components/slider/index.tsx":"30"},{"size":161,"mtime":1655091758625,"results":"31","hashOfConfig":"32"},{"size":6179,"mtime":1655714192899,"results":"33","hashOfConfig":"32"},{"size":918,"mtime":1655088099573,"results":"34","hashOfConfig":"32"},{"size":1159,"mtime":1655274671522,"results":"35","hashOfConfig":"32"},{"size":2010,"mtime":1654736372870,"results":"36","hashOfConfig":"32"},{"size":1418,"mtime":1655091862026,"results":"37","hashOfConfig":"32"},{"size":3144,"mtime":1655357723767,"results":"38","hashOfConfig":"32"},{"size":1113,"mtime":1655274671520,"results":"39","hashOfConfig":"32"},{"size":1654,"mtime":1655358467217,"results":"40","hashOfConfig":"32"},{"size":12142,"mtime":1655789438228,"results":"41","hashOfConfig":"32"},{"size":136,"mtime":1655087991761,"results":"42","hashOfConfig":"32"},{"size":8172,"mtime":1654736372871,"results":"43","hashOfConfig":"32"},{"size":10537,"mtime":1655274671518,"results":"44","hashOfConfig":"32"},{"size":2397,"mtime":1655358840544,"results":"45","hashOfConfig":"32"},{"size":5097,"mtime":1655784019040,"results":"46","hashOfConfig":"32"},{"size":247,"mtime":1654748643953,"results":"47","hashOfConfig":"32"},{"size":1071,"mtime":1655781636817,"results":"48","hashOfConfig":"32"},{"size":512,"mtime":1655358397568,"results":"49","hashOfConfig":"32"},{"size":3359,"mtime":1655359026356,"results":"50","hashOfConfig":"32"},{"size":1126,"mtime":1655358631165,"results":"51","hashOfConfig":"32"},{"size":854,"mtime":1655358552230,"results":"52","hashOfConfig":"32"},{"size":729,"mtime":1655358536351,"results":"53","hashOfConfig":"32"},{"size":1008,"mtime":1654736372870,"results":"54","hashOfConfig":"32"},{"size":3632,"mtime":1655789361688,"results":"55","hashOfConfig":"32"},{"size":2918,"mtime":1655788536885,"results":"56","hashOfConfig":"32"},{"size":2809,"mtime":1655789369149,"results":"57","hashOfConfig":"32"},{"size":3621,"mtime":1655788201147,"results":"58","hashOfConfig":"32"},{"size":3780,"mtime":1655358336768,"results":"59","hashOfConfig":"32"},{"size":1831,"mtime":1655358580181,"results":"60","hashOfConfig":"32"},{"size":837,"mtime":1655274671520,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"yx3ph1",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/CCCPaint.tsx",["129"],"import React, { Ref, useEffect, useImperativeHandle } from \"react\";\nimport Canvas from \"./canvas\";\nimport {\n  ToolTypeContext,\n  ShapeTypeContext,\n  ShapeOutlineContext,\n  LineWidthContext,\n  ColorContext,\n  FillContext,\n  TextContext,\n  SizeContext,\n  DispatcherContext,\n} from \"./context\";\nimport \"./style.less\";\nimport { useState } from \"react\";\nimport {\n  ColorType,\n  LineWidthType,\n  ShapeOutlineType,\n  ShapeToolType,\n  ToolType,\n} from \"./util/toolType\";\nimport ToolPanel from \"./left-tool\";\nimport Dispatcher from \"./util/dispatcher\";\nimport Right from \"./right\";\nimport Edit from \"./edit\";\nimport { getImageSize } from \"./utils\";\n\ninterface PaintProps {\n  imgSrc?: string;\n  width?: number;\n  height?: number;\n  background?: string;\n  id?: string;\n  cRef?: any;\n}\n\nfunction Paint(props: PaintProps): JSX.Element {\n  const {\n    id = \"test\",\n    imgSrc = \"https://bafybeib43atlw6hxffw7xysnhtznpiey2cqln2akufhixfsequpnfjf5dq.ipfs.dweb.link/orign.png\",\n    width = 500,\n    height = 500,\n    background,\n    cRef,\n  } = props;\n\n  const [toolType, setToolType] = useState<ToolType>(ToolType.PEN);\n  const [shapeType, setShapeType] = useState<ShapeToolType>(ShapeToolType.LINE);\n  const [shapeOutlineType, setShapeOutlineType] = useState<ShapeOutlineType>(\n    ShapeOutlineType.SOLID\n  );\n  const [lineWidthType, setLineWidthType] = useState<LineWidthType>(\n    LineWidthType.LINESIZE\n  );\n  const [lineSize, setLineFontSize] = useState<number>(5);\n  const [fillColor, setFillColor] = useState<string>(\"\");\n  const [size, setSize] = useState({ width, height });\n  const [activeColorType, setActiveColorType] = useState<ColorType>(\n    ColorType.MAIN\n  );\n  const [fontStyle, setFontStyle] = useState({});\n  const [mainColor, setMainColor] = useState<string>(\"black\");\n  const [subColor, setSubColor] = useState<string>(\"white\");\n  const [dispatcher] = useState(new Dispatcher());\n\n  const setColor = (value: string) => {\n    if (activeColorType === ColorType.MAIN) {\n      setMainColor(value);\n    } else {\n      setSubColor(value);\n    }\n  };\n\n  const loadImgSize = async (src: string) => {\n    const size = await getImageSize(src);\n    setSize(size);\n  };\n\n  useEffect(() => {\n    if (imgSrc) {\n      loadImgSize(imgSrc);\n    } else {\n      if (width && height) {\n        setSize({ width, height });\n      }\n    }\n  }, [width, height, imgSrc]);\n\n  useImperativeHandle(cRef, () => ({\n    getCurrentImageData: () => {\n      const canvasElem: any = document.getElementById(`ccc-paint-canvas ${id}`);\n      const imageData = canvasElem.toDataURL(\"image/png\");\n      return imageData;\n    },\n  }));\n\n  return (\n    <ToolTypeContext.Provider\n      value={{\n        type: toolType,\n        setType: (value) => {\n          setToolType(value);\n          setLineFontSize(5);\n        },\n      }}\n    >\n      <ShapeTypeContext.Provider\n        value={{\n          type: shapeType,\n          setType: (type: ShapeToolType) => {\n            setShapeType(type);\n          },\n        }}\n      >\n        <ShapeOutlineContext.Provider\n          value={{ type: shapeOutlineType, setType: setShapeOutlineType }}\n        >\n          <LineWidthContext.Provider\n            value={{\n              type: lineWidthType,\n              lineSize: lineSize,\n              setType: setLineWidthType,\n              setLineSize: setLineFontSize,\n            }}\n          >\n            <DispatcherContext.Provider value={{ dispatcher }}>\n              <ColorContext.Provider\n                value={{\n                  mainColor,\n                  subColor,\n                  activeColor: activeColorType,\n                  setColor,\n                  setActiveColor: setActiveColorType,\n                }}\n              >\n                <SizeContext.Provider value={{ size, onSize: setSize }}>\n                  <FillContext.Provider\n                    value={{\n                      fillColor,\n                      setFillColor,\n                    }}\n                  >\n                    <TextContext.Provider\n                      value={{\n                        fontStyle,\n                        setFont: setFontStyle,\n                      }}\n                    >\n                      <div className=\"ccc\">\n                        <div className=\"ccc-edit\">\n                          <Edit CanvasSize={size} />\n                        </div>\n                        <div className=\"ccc-content\">\n                          <div className=\"ToolPanel\">\n                            <ToolPanel\n                              className=\"toolbar-item\"\n                              fillColor={fillColor}\n                            />\n                          </div>\n                          <div className=\"show-Canvas\">\n                            <Canvas\n                              id={id}\n                              CanvasSize={size}\n                              imgSrc={imgSrc}\n                              background={background}\n                              onSize={setSize}\n                              fillColor={fillColor}\n                              toolType={toolType}\n                              fontStyle={fontStyle}\n                              shapeType={shapeType}\n                              shapeOutlineType={shapeOutlineType}\n                              mainColor={mainColor}\n                              subColor={subColor}\n                              lineSize={lineSize}\n                              lineWidthType={lineWidthType}\n                              setColor={setColor}\n                            />\n                          </div>\n                          <div className=\"show-type\">\n                            <Right toolType={toolType} lineSize={lineSize} />\n                          </div>\n                        </div>\n                      </div>\n                    </TextContext.Provider>\n                  </FillContext.Provider>\n                </SizeContext.Provider>\n              </ColorContext.Provider>\n            </DispatcherContext.Provider>\n          </LineWidthContext.Provider>\n        </ShapeOutlineContext.Provider>\n      </ShapeTypeContext.Provider>\n    </ToolTypeContext.Provider>\n  );\n}\n\nexport default Paint;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/toolType.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/utils.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/left-tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/edit/index.tsx",["130"],"import React from \"react\";\nimport \"./index.less\";\nimport { useContext } from \"react\";\nimport { DispatcherContext } from \"@/context\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { CLEAR_EVENT, REDO_EVENT, UNDO_EVENT } from \"../util/dispatcher/event\";\nimport Resize from \"./Resize\";\nimport { undoIcon, clearIcon } from \"../left-tool/util\";\n\ninterface propsEdit {\n  CanvasSize: {\n    width: number | undefined;\n    height: number | undefined;\n  };\n}\n\nconst OtherOperator = (props: propsEdit) => {\n  const { CanvasSize } = props;\n  const dispatcherContext = useContext(DispatcherContext);\n\n  const clearCanvas = () => {\n    dispatcherContext.dispatcher.dispatch(CLEAR_EVENT);\n  };\n  const undo = () => {\n    dispatcherContext.dispatcher.dispatch(UNDO_EVENT);\n  };\n  const redo = () => {\n    dispatcherContext.dispatcher.dispatch(REDO_EVENT);\n  };\n\n  return (\n    <div className=\"edit-other otherOperator\">\n      <div className=\"operator-content\">\n        <span className=\"showSizeSpan\">\n          {CanvasSize.width}*{CanvasSize.height}\n        </span>\n        <span className=\"operator-resize\">\n          <Resize />\n        </span>\n        <span title=\"Clear All\" className=\"operator-item\">\n          <span onClick={clearCanvas}>{clearIcon}</span>\n        </span>\n        <span title=\"Undo\" className=\"operator-item\">\n          <span onClick={undo}>{undoIcon}</span>\n        </span>\n        <span\n          title=\"Redo\"\n          style={{ transform: \"rotateY(180deg)\" }}\n          className=\"operator-item\"\n        >\n          <span onClick={redo}>{undoIcon}</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherOperator;\n","/Users/jinmingliu/work/ccc-react-paint/src/canvas/index.tsx",["131","132","133","134","135","136","137","138"],"/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/event.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/shape.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/left-tool/util.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/edit/Resize.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/tool.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/snapshot/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/showShape/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/text/index.tsx",["139"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { TextContext, ColorContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Select } from \"antd\";\nimport IntegerStep from \"../components/slider\";\nimport { useMemo } from \"react\";\n\nconst { Option } = Select;\n\ninterface FormatColor {\n  className?: string;\n}\n\nconst textFamily = [\n  \"Barlow-ExtraBold\",\n  \"DIN-AlternateBold\",\n  \"Trebuchet-MSBold\",\n  \"Trebuchet-MS\",\n  \"Poppins-Bold\",\n  \"Poppins-Light\",\n  \"Poppins-Medium\",\n  \"Poppins-Regular\",\n  \"Poppins-SemiBold\",\n];\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const TextToolContext = useContext(TextContext);\n  const colorContext = useContext(ColorContext);\n\n  const fontStyle = useMemo(() => {\n    return TextToolContext.fontStyle;\n  }, [TextToolContext.fontStyle]);\n\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div\n      className={\n        className ? ` ccc-text formatColor ${className}` : \"ccc-text colorpanel\"\n      }\n    >\n      <div className=\"content\">\n        <div className=\"font\">\n          <h3>Font</h3>\n          <Select\n            className=\"ccc-text-family\"\n            onChange={(value: string) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontFamily: value,\n              });\n            }}\n          >\n            {textFamily.map((va) => {\n              return (\n                <Option key={va} value={va}>\n                  {va}\n                </Option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"font\">\n          <h3>Letter Spacing</h3>\n          <IntegerStep\n            min={1}\n            max={8}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                letterSpacing: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Font Size</h3>\n          <IntegerStep\n            min={12}\n            max={72}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontSize: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Line Height</h3>\n          <IntegerStep\n            min={24}\n            max={56}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                lineHeight: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n              TextToolContext.setFont({\n                ...fontStyle,\n                color: \"#\" + color.hex,\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/formatColor/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/pen/index.tsx",["140"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport ColorPanel from \"../components/colorPanel\";\nimport \"./index.less\";\n\ninterface PenType {\n  lineSize: number;\n}\n\nconst ShowPen = (props: PenType) => {\n  const lineWidthContext = useContext(LineWidthContext);\n\n  const { lineSize } = props;\n\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Brush Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n      <ColorPanel type=\"pen\" className=\"toolbar-item\" title=\"Color Panel\" />\n    </div>\n  );\n};\n\nexport default ShowPen;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/earser/index.tsx",["141"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport \"./index.less\";\n\ninterface earserType {\n  lineSize: number;\n}\n\nconst Eraser = (props: earserType) => {\n  const { lineSize } = props;\n  const lineWidthContext = useContext(LineWidthContext);\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Eraser Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorExtract.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorFill.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/eraser.ts",["142"],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/pen.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/Text.ts",["143","144"],"/Users/jinmingliu/work/ccc-react-paint/src/right/components/shape/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/components/colorPanel/index.tsx",["145","146","147","148"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { ColorContext } from \"@/context\";\nimport { ColorType } from \"../../../util/toolType\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getRandomColor } from \"../../../utils\";\n\ninterface ColorPanelProps {\n  className?: string;\n  title?: string;\n  type?: string;\n}\n\nconst activeColorTypeCls = \"active-color-type\";\n\nconst ColorPanel: React.FC<ColorPanelProps> = (props) => {\n  const { className, title, type } = props;\n\n  const [pickerColor, setPickerColor] = useState(\n    createColor(type && type === \"pen\" ? getRandomColor() : \"#000000FF\")\n  );\n  const colorContext = useContext(ColorContext);\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div className={className ? `colorpanel ${className}` : \"colorpanel\"}>\n      <div className=\"content\">\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n            }}\n          />\n        </div>\n        {/* {title && (\n          <div className=\"color-result\">\n            <div\n              onClick={() => colorContext.setActiveColor(ColorType.MAIN)}\n              className={activeColorType === ColorType.MAIN ? `main-color ${activeColorTypeCls}` : \"main-color\"}\n            >\n              <div className=\"color-box1\" style={{ backgroundColor: colorContext.mainColor }} />\n              <div>{title}</div>\n            </div>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPanel;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/components/slider/index.tsx",[],{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":20},{"ruleId":"149","severity":1,"message":"153","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":22},{"ruleId":"149","severity":1,"message":"154","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"155","line":60,"column":5,"nodeType":"151","messageId":"152","endLine":60,"endColumn":11},{"ruleId":"156","severity":1,"message":"157","line":140,"column":21,"nodeType":"158","messageId":"159","endLine":140,"endColumn":31,"suggestions":"160"},{"ruleId":"156","severity":1,"message":"157","line":141,"column":22,"nodeType":"158","messageId":"159","endLine":141,"endColumn":32,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"162","line":229,"column":15,"nodeType":"151","messageId":"152","endLine":229,"endColumn":25},{"ruleId":"149","severity":1,"message":"163","line":247,"column":41,"nodeType":"151","messageId":"152","endLine":247,"endColumn":55},{"ruleId":"149","severity":1,"message":"164","line":251,"column":11,"nodeType":"151","messageId":"152","endLine":251,"endColumn":17},{"ruleId":"149","severity":1,"message":"165","line":262,"column":9,"nodeType":"151","messageId":"152","endLine":262,"endColumn":19},{"ruleId":"149","severity":1,"message":"166","line":40,"column":9,"nodeType":"151","messageId":"152","endLine":40,"endColumn":24},{"ruleId":"149","severity":1,"message":"167","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"167","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"168","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":85,"column":20,"nodeType":"158","messageId":"159","endLine":85,"endColumn":34,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"157","line":85,"column":37,"nodeType":"158","messageId":"159","endLine":85,"endColumn":51,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"168","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"149","severity":1,"message":"171","line":17,"column":7,"nodeType":"151","messageId":"152","endLine":17,"endColumn":25},{"ruleId":"149","severity":1,"message":"172","line":20,"column":22,"nodeType":"151","messageId":"152","endLine":20,"endColumn":27},{"ruleId":"149","severity":1,"message":"166","line":26,"column":9,"nodeType":"151","messageId":"152","endLine":26,"endColumn":24},"@typescript-eslint/no-unused-vars","'Ref' is defined but never used.","Identifier","unusedVar","'MenuOutlined' is defined but never used.","'useMemo' is defined but never used.","'onSize' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["173"],["174"],"'canvasData' is assigned a value but never used.","'height' is defined but never used.","'canvas' is assigned a value but never used.","'canvasPain' is assigned a value but never used.","'activeColorType' is assigned a value but never used.","'FC' is defined but never used.","'ColorType' is defined but never used.",["175"],["176"],"'activeColorTypeCls' is assigned a value but never used.","'title' is assigned a value but never used.",{"messageId":"177","fix":"178","desc":"179"},{"messageId":"177","fix":"180","desc":"179"},{"messageId":"177","fix":"181","desc":"179"},{"messageId":"177","fix":"182","desc":"179"},"suggestOptionalChain",{"range":"183","text":"184"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"185","text":"184"},{"range":"186","text":"184"},{"range":"187","text":"184"},[3511,3512],"?",[3556,3557],[2728,2729],[2745,2746]]