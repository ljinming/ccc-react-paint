[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx":"3","/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx":"4","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx":"5","/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx":"6","/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx":"10","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx":"11","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx":"12","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx":"13","/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx":"14","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts":"15","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx":"16","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts":"17","/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx":"18","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts":"21","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx":"22","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx":"23","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx":"24","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx":"25"},{"size":170,"mtime":1657591847919,"results":"26","hashOfConfig":"27"},{"size":2885,"mtime":1657590689455,"results":"28","hashOfConfig":"27"},{"size":234,"mtime":1657541738793,"results":"29","hashOfConfig":"27"},{"size":1343,"mtime":1657541738787,"results":"30","hashOfConfig":"27"},{"size":1530,"mtime":1657591810435,"results":"31","hashOfConfig":"27"},{"size":4581,"mtime":1657589325542,"results":"32","hashOfConfig":"27"},{"size":1259,"mtime":1657541738793,"results":"33","hashOfConfig":"27"},{"size":8746,"mtime":1657592768849,"results":"34","hashOfConfig":"27"},{"size":1601,"mtime":1657592682756,"results":"35","hashOfConfig":"27"},{"size":5737,"mtime":1657541738792,"results":"36","hashOfConfig":"27"},{"size":1478,"mtime":1657588558987,"results":"37","hashOfConfig":"27"},{"size":759,"mtime":1657588023433,"results":"38","hashOfConfig":"27"},{"size":13685,"mtime":1657541738789,"results":"39","hashOfConfig":"27"},{"size":1177,"mtime":1657541738794,"results":"40","hashOfConfig":"27"},{"size":3956,"mtime":1657541738792,"results":"41","hashOfConfig":"27"},{"size":10497,"mtime":1657592193148,"results":"42","hashOfConfig":"27"},{"size":379,"mtime":1657541738789,"results":"43","hashOfConfig":"27"},{"size":2170,"mtime":1657588607754,"results":"44","hashOfConfig":"27"},{"size":3931,"mtime":1657541738786,"results":"45","hashOfConfig":"27"},{"size":695,"mtime":1657541738781,"results":"46","hashOfConfig":"27"},{"size":430,"mtime":1657587700318,"results":"47","hashOfConfig":"27"},{"size":485,"mtime":1657588184726,"results":"48","hashOfConfig":"27"},{"size":3663,"mtime":1657588111894,"results":"49","hashOfConfig":"27"},{"size":654,"mtime":1657541738783,"results":"50","hashOfConfig":"27"},{"size":1683,"mtime":1657588151944,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1sw6yjp",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx",["111"],"import Header from \"./header\";\nimport Content from \"./content\";\nimport \"./index.less\";\nimport \"./font.css\";\nimport { useState, useEffect, useImperativeHandle } from \"react\";\nimport { Tool } from \"../tool\";\nimport { StrawContext, ToolTypeContext } from \"../context\";\ninterface HomeProps {\n  backgroundColor?: string;\n  width?: number;\n  height?: number;\n  imgSrc?: string;\n  cRef?: any;\n  id?: string;\n}\n\nfunction getImageSize(url: string): Promise<{\n  width: number;\n  height: number;\n}> {\n  return new Promise(function (resolve, reject) {\n    const image = new Image();\n    image.onload = function () {\n      resolve({\n        width: image.width,\n        height: image.height,\n      });\n    };\n    image.onerror = function () {\n      reject(new Error(\"error\"));\n    };\n    image.src = url;\n  });\n}\n\n//https://bafybeie3y4v25vj3owiqc5jxdhpcqld5klixy32fhcfytyfyve7k5ssyv4.ipfs.dweb.link/orign.png\n//\"https://bafybeicgvg3vwtv5c633cjexbykjp75yjt755qhma4o7vgusa4ldvocz44.ipfs.dweb.link/orign.png\",\nexport default (props: HomeProps) => {\n  const pre = `core-paint`;\n  const {\n    imgSrc = \"https://bafybeicgvg3vwtv5c633cjexbykjp75yjt755qhma4o7vgusa4ldvocz44.ipfs.dweb.link/orign.png\",\n    width = 500,\n    height = 500,\n    cRef,\n    id = \"test\",\n  } = props;\n  const [size, setSize] = useState({ width, height });\n  const [tool, setToolType] = useState(\"PEN\");\n  const [strawColor, setStrawColor] = useState(\"\");\n  const [strawFlag, setStrawFlag] = useState(false);\n\n  const loadImgSize = async (src: string) => {\n    const size = await getImageSize(src);\n    setSize(size);\n  };\n\n  useImperativeHandle(cRef, () => ({\n    getCurrentImageData: () => {\n      // const canvasElem: any = document.getElementById(`ccc-paint-canvas ${id}`);\n      // const imageData = canvasElem.toDataURL(\"image/png\");\n      return Tool.canvas.toDataURL();\n    },\n  }));\n\n  useEffect(() => {\n    if (imgSrc) {\n      loadImgSize(imgSrc);\n    } else {\n      if (width && height) {\n        setSize({ width, height });\n      }\n    }\n  }, [width, height, imgSrc]);\n\n  return (\n    <div className={pre}>\n      <ToolTypeContext.Provider\n        value={{\n          select: tool,\n          setSelect: (value: string) => setToolType(value),\n        }}\n      >\n        <StrawContext.Provider\n          value={{\n            strawFlag: false,\n            strawColor: \"\",\n            setStrawColor: (type: string) => {\n              setStrawColor(type);\n            },\n            setStrawFlag: (type: boolean) => {\n              setStrawFlag(type);\n            },\n          }}\n        >\n          <Header pre={pre} />\n          <Content\n            select={tool}\n            pre={pre}\n            straw={{ strawColor, strawFlag }}\n            canvasSize={size}\n            imgSrc={imgSrc}\n            backgroundColor={\"#fff\"}\n          />\n        </StrawContext.Provider>\n      </ToolTypeContext.Provider>\n    </div>\n  );\n};\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx",["112","113","114","115","116","117","118","119","120","121","122"],"//import { store } from \"../Action\";\nimport { fabric } from \"fabric\";\n//import Action from \"@/action\";\nimport { rgbToHex } from \"./colorChange\";\n//import { useContext } from \"react\";\nimport { StrawContext } from \"../context\";\n//const strawContext = useContext(StrawContext);\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface Pencil {\n  lineWidth: number;\n  strokeColor: string;\n}\n\n// 随机color\nexport const getRandomColor = () => {\n  return (\n    \"#\" + (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).substr(-6)\n  );\n};\n\n// strawColor\n\nexport const setStrawColor = (pos: Point) => {\n  const ctx = Tool.canvas.getContext();\n  const color = getPixelColorOnCanvas(pos, ctx);\n  Tool.strawColor = color;\n  Tool.strawFlag = false;\n  // strawContext.setStrawColor(color);\n  // strawContext.setStrawFlag(false);\n  // store.dispatch({\n  //   type: \"paint.straw\",\n  //   payload: { strawColor: color, strawFlag: false },\n  // });\n\n  // Action.emit(\"paint.straw\", { strawColor: color, strawFlag: false });\n};\n//鼠标点颜色\nexport const getPixelColorOnCanvas = (\n  pos: Point,\n  ctx: CanvasRenderingContext2D\n) => {\n  const p = ctx.getImageData(pos.x, pos.y, 1, 1).data;\n  return rgbToHex(p[0], p[1], p[2], p[3]);\n};\n\nexport default class Tool {\n  //选择的工具\n  public toolType: string = \"PEN\";\n\n  // canvas\n  public static canvas: fabric.Canvas;\n  static toolType: string;\n  static img: fabric.Image;\n  static strawColor: string;\n  static strawFlag: boolean;\n  static canvasObj = [];\n\n  static recordTimer: any;\n  static stateArr: any[] = [];\n  static stateIdx: any = 0;\n  static transform: string;\n  static currentScale: number;\n  static ToolStoreList: any[] = [];\n  static imgSrc: string;\n  static nextCanvas: any = [];\n\n  // 撤销 或 还原\n  static tapHistoryBtn(flag: number) {\n    let current;\n    if (this.canvas) {\n      if (flag < 0 && this.ToolStoreList.length < 10) {\n        const tagCanvas = this.ToolStoreList.pop();\n        if (tagCanvas && this.canvas) {\n          this.nextCanvas.push(tagCanvas);\n          current = tagCanvas;\n        }\n      } else if (flag > 0 && this.nextCanvas.length > 0) {\n        //回到撤回前一步\n        const canvasData = this.nextCanvas.pop();\n        if (canvasData) {\n          current = canvasData;\n        }\n      }\n      if (current && this.canvas) {\n        let canvasTool: HTMLCanvasElement | undefined =\n          document.createElement(\"canvas\");\n        canvasTool.width = current.width;\n        canvasTool.height = current.height;\n        canvasTool?.getContext(\"2d\")?.putImageData(current, 0, 0);\n        const url = canvasTool.toDataURL();\n        this.canvas.clear();\n        this.canvas.setBackgroundImage(\n          url,\n          (img: any) => {\n            img.selectable = false;\n            img.evented = false;\n            this.canvas.renderAll();\n          },\n          { crossOrigin: \"anonymous\", scaleX: 0.5, scaleY: 0.5 }\n        );\n        canvasTool = undefined;\n      }\n    }\n\n    // if (this.canvas) {\n    //   if (flag < 0 && this.canvasObj.length < 10) {\n    //     const removeList =\n    //       this.canvas.getObjects().filter((c) => c.width) || [];\n    //     const tagCanvas = removeList[removeList.length - 1];\n    //     this.canvasObj.push(tagCanvas);\n    //     this.canvas.remove(tagCanvas);\n    //   } else if (flag > 0 && this.canvasObj.length > 0) {\n    //     //回到撤回前一步\n    //     const current = this.canvasObj.pop();\n    //     if (current) {\n    //       this.canvas.add(current);\n    //     }\n    //   }\n    // }\n  }\n\n  //清空画布\n  static clearAll() {\n    // 获取画布中的所有对象\n    if (this.canvas) {\n      if (this.ToolStoreList.length > 0) {\n        this.ToolStoreList = [];\n        this.nextCanvas = [];\n        this.canvas.clear();\n        this.canvas.setBackgroundImage(Tool.imgSrc, (img: any) => {\n          img.selectable = false;\n          img.evented = false;\n          this.canvas.renderAll();\n        });\n      }\n    }\n  }\n\n  public onMouseDown(options: any): void {\n    //\n  }\n  public onMouseMove(event: MouseEvent): void {\n    //\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    //\n  }\n\n  public onSelected(event: MouseEvent): void {}\n\n  public onCancelSelected(event: MouseEvent): void {}\n\n  //双击\n  public onDbClick(event: MouseEvent): void {}\n\n  public onTouchStart(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    //\n  }\n\n  public onKeyDown(event: KeyboardEvent): void {\n    //\n  }\n}\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx",["123"],"import Tool, { getPixelColorOnCanvas, Point } from \"./tool\";\n//import \"libs/eraser_brush.mixin.js\"; // 本地地址进行引用即可\n\nclass Eraser extends Tool {\n  color: string | undefined;\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = false;\n\n    Tool.canvas.freeDrawingBrush.color = \"transparent\";\n    // Tool.canvas.freeDrawingBrush = new fabric.EraserBrush(Tool.canvas); // 使用橡皮擦画笔\n    Tool.canvas.isDrawingMode = true;\n    Tool.canvas.freeDrawingBrush.width = 20; // 设置画笔粗细为 20\n  }\n\n  //改变画笔的粗细\n  static setEraserStyle(value: number) {\n    this.canvas!.freeDrawingBrush.width = value;\n  }\n\n  private operateStart = (pointer: Point): void => {\n    const ctx = Tool.canvas.getContext();\n    const color = getPixelColorOnCanvas(pointer, ctx);\n    Tool.canvas.freeDrawingBrush.color = color;\n  };\n\n  public onMouseDown(options: any) {\n    if (Tool.toolType !== \"ERASER\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n    e.preventDefault();\n    Tool.canvas.freeDrawingBrush.color = \"transparent\";\n    const show = {\n      x: absolutePointer.x * 2,\n      y: absolutePointer.y * 2,\n    };\n    this.operateStart(show);\n  }\n}\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx",["124","125"],"/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx",["126","127"],"/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx",["128","129"],"import Tool, { Point, setStrawColor } from \"./tool\";\nimport { parseColorString } from \"./colorChange\";\nimport { fabric } from \"fabric\";\n\n/**\n * 高效率的填充算法\n * 参考地址: http://www.williammalone.com/articles/html5-canvas-javascript-paint-bucket-tool/\n */\nexport const efficentFloodFill = (\n  imageData: ImageData,\n  startX: number,\n  startY: number,\n  fillColor: [number, number, number]\n) => {\n  // 保证 startX 和 startY 是正整数\n  // 经测试，在触屏设备中 startX 和 startY 可能是小数，造成填充功能无法正确填充\n  startX = Math.round(startX);\n  startY = Math.round(startY);\n  const pixelStack: [number, number][] = [\n    [Math.round(startX), Math.round(startY)],\n  ];\n  const canvasWidth = imageData.width,\n    canvasHeight = imageData.height;\n  const startPos = (startY * canvasWidth + startX) * 4;\n  const colorLayer = imageData;\n  const startColor: [number, number, number] = [\n    colorLayer.data[startPos],\n    colorLayer.data[startPos + 1],\n    colorLayer.data[startPos + 2],\n  ];\n  const updatedPoint: Record<string | number, boolean> = {};\n  if (\n    startColor[0] === fillColor[0] &&\n    startColor[1] === fillColor[1] &&\n    startColor[2] === fillColor[2]\n  ) {\n    return undefined;\n  }\n  while (pixelStack.length > 0) {\n    const newPos = pixelStack.pop() as [number, number];\n    const x = newPos[0];\n    let y = newPos[1];\n    let pixelPos = (y * canvasWidth + x) * 4;\n    while (y-- >= 0 && matchColor(colorLayer, pixelPos, startColor)) {\n      pixelPos -= canvasWidth * 4;\n    }\n    pixelPos += canvasWidth * 4;\n    ++y;\n    let reachLeft = false,\n      reachRight = false;\n\n    if (updatedPoint[pixelPos]) {\n      continue;\n    }\n    updatedPoint[pixelPos] = true;\n    // newData.push(pixelPos);\n    while (\n      y++ < canvasHeight - 1 &&\n      matchColor(colorLayer, pixelPos, startColor)\n    ) {\n      fillPixel(colorLayer, pixelPos, fillColor);\n      if (x > 0) {\n        if (matchColor(colorLayer, pixelPos - 4, startColor)) {\n          if (!reachLeft) {\n            pixelStack.push([x - 1, y]);\n            reachLeft = true;\n          }\n        } else if (reachLeft) {\n          reachLeft = false;\n        }\n      }\n\n      if (x < canvasWidth - 1) {\n        if (matchColor(colorLayer, pixelPos + 4, startColor)) {\n          if (!reachRight) {\n            pixelStack.push([x + 1, y]);\n            reachRight = true;\n          }\n        } else if (reachRight) {\n          reachRight = false;\n        }\n      }\n\n      pixelPos += canvasWidth * 4;\n    }\n  }\n  return colorLayer;\n};\n\n/**\n * 判断两个位置的像素颜色是否相同\n */\nconst matchColor = (\n  colorLayer: ImageData,\n  pixelPos: number,\n  color: [number, number, number]\n) => {\n  const r = colorLayer.data[pixelPos];\n  const g = colorLayer.data[pixelPos + 1];\n  const b = colorLayer.data[pixelPos + 2];\n\n  return (\n    Math.abs(r - color[0]) < 30 &&\n    Math.abs(g - color[1]) < 30 &&\n    Math.abs(b - color[2]) < 30\n  );\n};\n\n/**\n * 修改指定ImageData的指定位置像素颜色\n */\nconst fillPixel = (\n  colorLayer: ImageData,\n  pixelPos: number,\n  color: [number, number, number]\n) => {\n  colorLayer.data[pixelPos] = color[0];\n  colorLayer.data[pixelPos + 1] = color[1];\n  colorLayer.data[pixelPos + 2] = color[2];\n\n  return colorLayer;\n};\n\nclass Bucket extends Tool {\n  static color: string = \"transparent\";\n  constructor() {\n    super();\n    this.init();\n  }\n\n  static changeColor = (color: string) => {\n    this.color = color;\n  };\n\n  init() {\n    Tool.canvas.interactive = false;\n    Tool.canvas.isDrawingMode = false;\n  }\n\n  filterChange = async (pos: Point) => {\n    const color = parseColorString(Tool.strawColor || Bucket.color);\n    const showCtx = Tool.canvas.getContext();\n    const colorLayer = efficentFloodFill(\n      showCtx.getImageData(0, 0, showCtx.canvas.width, showCtx.canvas.height),\n      pos.x * 2,\n      pos.y * 2,\n      [color.r, color.g, color.b]\n    );\n    if (colorLayer) {\n      showCtx.putImageData(colorLayer, 0, 0);\n      let canvasBucket: HTMLCanvasElement | undefined =\n        document.createElement(\"canvas\");\n      canvasBucket.width = colorLayer.width;\n      canvasBucket.height = colorLayer.height;\n      canvasBucket?.getContext(\"2d\")?.putImageData(colorLayer, 0, 0);\n      const url = canvasBucket.toDataURL();\n      Tool.canvas.setBackgroundImage(\n        url,\n        (img: any) => {\n          img.selectable = false;\n          img.evented = false;\n          Tool.canvas.renderAll();\n        },\n        { crossOrigin: \"anonymous\", scaleX: 0.5, scaleY: 0.5 }\n      );\n      canvasBucket = undefined;\n    }\n\n    // const filter = new fabric.Image.filters[\"ChangeColorFilter\"]({\n    //   pos,\n    //   fillColor: [color.r, color.g, color.b],\n    // });\n    // Tool.img.filters.push(filter);\n    // //Tool.img.filters.push(new fabric.Image.filters.Grayscale());\n    // Tool.img.applyFilters();\n    // Tool.canvas.renderAll();\n  };\n\n  public onMouseDown(options: any): void {\n    if (Tool.toolType !== \"BUCKET\") {\n      return;\n    }\n    const { e, pointer, absolutePointer } = options;\n    e.preventDefault();\n    if (Tool.strawFlag) {\n      const show = {\n        x: absolutePointer.x * 2,\n        y: absolutePointer.y * 2,\n      };\n      setStrawColor(show);\n      return;\n    }\n    this.filterChange(absolutePointer);\n  }\n  // public onMouseUp(event: MouseEvent): void {\n  //   if (Tool.toolType !== \"BUCKET\") {\n  //     return;\n  //   }\n  //   if (Tool.ToolStoreList.length >= 10) {\n  //     Tool.ToolStoreList.shift();\n  //     Tool.ToolStoreList.push(Tool.canvas.toDataURL());\n  //   } else {\n  //     console.log(\"==4\", Tool.canvas.toDataURL());\n  //     Tool.ToolStoreList.push(Tool.canvas.toDataURL());\n  //   }\n  // }\n}\n\nexport default Bucket;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx",["130"],"//import { store } from \"../../Action\";\nimport { ToolTypeContext } from \"../../context\";\nimport { useContext } from \"react\";\nimport { ToolTypeList } from \"../utils\";\nimport { getToolIcon } from \"../utils/tool\";\nimport { toolItem } from \"../utils/tsType\";\n//import Action from \"@/action\";\n\ninterface ToolProps {\n  prefix: string;\n  select?: string;\n  color?: string;\n}\n\nconst ToolType = (props: ToolProps) => {\n  const { prefix, select, color } = props;\n  const ToolContext = useContext(ToolTypeContext);\n\n  return (\n    <ul className={`${prefix}-tool`}>\n      {ToolTypeList.map((va: toolItem) => {\n        return (\n          <li\n            title={va.title}\n            className={`${\n              select === va.key ? \"tool-item select\" : \"tool-item\"\n            }`}\n            key={va.key}\n            onClick={() => {\n              ToolContext.setSelect(va.key);\n              // store.dispatch({ type: \"paint.tool\", select: va.key });\n              // Action.emit(\"paint.tool\", {\n              //   select: va.key,\n              // });\n            }}\n          >\n            <span style={{ position: \"relative\", display: \"inline-block\" }}>\n              {getToolIcon(va.icon)}\n              {va.key === \"BUCKET\" && (\n                <span\n                  className=\"bucket-icon\"\n                  //style={{ backgroundColor: color }}\n                />\n              )}\n            </span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ToolType;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx",["131"],"import Sider from \"../../components/sliderCard\";\nimport ColorPicker from \"../../components/colorPicker\";\nimport { Pen, Tool } from \"@/tool\";\nimport { strawState } from \"../../type\";\n\nconst Pencil = (props: { straw: strawState }) => {\n  const { straw } = props;\n  const handleChange = (type: string, value: number | string) => {\n    Pen.setPenStyle(type, value);\n  };\n\n  return (\n    <>\n      <Sider\n        title=\"Brush thickness\"\n        options={{ max: 200, min: 1 }}\n        defaultValue={20}\n        onChange={(value: number) => handleChange(\"lineWidth\", value)}\n      />\n      <ColorPicker\n        color={Pen.color}\n        straw={straw}\n        onChange={(color: string) => handleChange(\"color\", color)}\n      />\n    </>\n  );\n};\n\nexport default Pencil;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx",["132"],"import Tool, { getRandomColor, setStrawColor } from \"./tool\";\n\nclass Pen extends Tool {\n  static color: string = getRandomColor();\n  static lineWidth: number = 20;\n  //改变画笔的状态\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    console.log(\"pen init\", Tool.strawColor);\n    if (!Tool.canvas.isDrawingMode) {\n      Tool.canvas.isDrawingMode = true;\n    }\n    Tool.canvas.interactive = false;\n    Tool.canvas.freeDrawingBrush.color = Tool.strawColor || Pen.color;\n    Tool.canvas.freeDrawingBrush.width = Pen.lineWidth;\n  }\n\n  static setPenStyle(type: string, value: any) {\n    Pen[type] = value;\n    if (type === \"lineWidth\") {\n      Tool.canvas.freeDrawingBrush.width = value;\n    } else {\n      Tool.canvas.freeDrawingBrush.color = value;\n    }\n  }\n\n  public onMouseDown = (options: any) => {\n    const { e, pointer, absolutePointer } = options;\n    e.preventDefault();\n    if (Tool.toolType === \"PEN\") {\n      if (Tool.strawFlag) {\n        const show = {\n          x: absolutePointer.x * 2,\n          y: absolutePointer.y * 2,\n        };\n        setStrawColor(show);\n      } else {\n        this.init();\n      }\n    }\n  };\n}\n\nexport default Pen;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx",["133","134","135","136","137","138","139"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx",["140","141"],"import { useState, useEffect, useContext } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { toHexString } from \"../../tool/colorChange\";\nimport \"./index.less\";\nimport { getToolIcon } from \"../../pages/utils/tool\";\n//import Action from \"@/action\";\nimport { RootState, strawState } from \"../../type\";\nimport { Tool } from \"@/tool\";\nimport { StrawContext } from \"../../context\";\ninterface ColorProps {\n  color: string;\n  onChange: (color: string) => void;\n  straw: strawState;\n}\n\nconst ColorPicker = (props: ColorProps) => {\n  const { color, straw, onChange } = props;\n  const [showColor, setColor] = useState(color);\n  const strawContext = useContext(StrawContext);\n\n  // const { straw } = useSelector((state: RootState) => {\n  //   return {\n  //     straw: state[\"paint.straw\"],\n  //   };\n  // }, shallowEqual);\n\n  const handleChange = (color: any, event: any) => {\n    if (Tool.strawColor !== \"\") {\n      Tool.strawColor = \"\";\n    }\n    const hexColor: string = toHexString(color.rgb);\n    setColor(hexColor);\n    onChange(hexColor);\n  };\n\n  useEffect(() => {\n    setColor(straw.strawColor);\n  }, [straw.strawColor]);\n\n  useEffect(() => {\n    setColor(color);\n  }, [color]);\n\n  return (\n    <div className=\"colorBox\">\n      <h3>Color</h3>\n      <SketchPicker\n        className=\"colorBox-picker\"\n        width=\"100%\"\n        disableAlpha={false}\n        color={showColor}\n        onChange={handleChange}\n      />\n      <span\n        className={`straw-color ${straw.strawFlag ? \"selected-straw\" : \"\"}`}\n        onClick={() => {\n          Tool.strawFlag = true;\n          strawContext.setStrawColor(color);\n          strawContext.setStrawFlag(true);\n\n          // store.dispatch({\n          //   type: \"paint.straw\",\n          //   payload: { strawColor: color, strawFlag: true },\n          // });\n          // Action.emit(\"paint.straw\", {\n          //   strawFlag: true,\n          // });\n        }}\n      >\n        {getToolIcon(\"strawIcon\")}\n      </span>\n    </div>\n  );\n};\nfunction mapStateToProps(state: RootState) {\n  return {\n    straw: state.paint.straw,\n  };\n}\n\n//export default connect(mapStateToProps)(ColorPicker);\n\nexport default ColorPicker;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx",[],{"ruleId":"142","severity":1,"message":"143","line":45,"column":5,"nodeType":"144","messageId":"145","endLine":45,"endColumn":7},{"ruleId":"142","severity":1,"message":"146","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":22},{"ruleId":"142","severity":1,"message":"147","line":144,"column":22,"nodeType":"144","messageId":"145","endLine":144,"endColumn":34},{"ruleId":"142","severity":1,"message":"148","line":147,"column":22,"nodeType":"144","messageId":"145","endLine":147,"endColumn":39},{"ruleId":"142","severity":1,"message":"148","line":151,"column":20,"nodeType":"144","messageId":"145","endLine":151,"endColumn":37},{"ruleId":"142","severity":1,"message":"148","line":155,"column":21,"nodeType":"144","messageId":"145","endLine":155,"endColumn":38},{"ruleId":"142","severity":1,"message":"148","line":157,"column":27,"nodeType":"144","messageId":"145","endLine":157,"endColumn":44},{"ruleId":"142","severity":1,"message":"148","line":160,"column":20,"nodeType":"144","messageId":"145","endLine":160,"endColumn":37},{"ruleId":"142","severity":1,"message":"148","line":162,"column":23,"nodeType":"144","messageId":"145","endLine":162,"endColumn":40},{"ruleId":"142","severity":1,"message":"148","line":166,"column":22,"nodeType":"144","messageId":"145","endLine":166,"endColumn":39},{"ruleId":"142","severity":1,"message":"148","line":170,"column":21,"nodeType":"144","messageId":"145","endLine":170,"endColumn":38},{"ruleId":"142","severity":1,"message":"148","line":174,"column":20,"nodeType":"144","messageId":"145","endLine":174,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":22,"column":5,"nodeType":"151","messageId":"152","endLine":22,"endColumn":17,"suggestions":"153"},{"ruleId":"142","severity":1,"message":"154","line":206,"column":13,"nodeType":"144","messageId":"145","endLine":206,"endColumn":22},{"ruleId":"142","severity":1,"message":"147","line":314,"column":27,"nodeType":"144","messageId":"145","endLine":314,"endColumn":39},{"ruleId":"142","severity":1,"message":"147","line":66,"column":21,"nodeType":"144","messageId":"145","endLine":66,"endColumn":33},{"ruleId":"142","severity":1,"message":"147","line":69,"column":27,"nodeType":"144","messageId":"145","endLine":69,"endColumn":39},{"ruleId":"142","severity":1,"message":"155","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":16},{"ruleId":"142","severity":1,"message":"156","line":183,"column":16,"nodeType":"144","messageId":"145","endLine":183,"endColumn":23},{"ruleId":"142","severity":1,"message":"157","line":16,"column":27,"nodeType":"144","messageId":"145","endLine":16,"endColumn":32},{"ruleId":"142","severity":1,"message":"158","line":3,"column":15,"nodeType":"144","messageId":"145","endLine":3,"endColumn":19},{"ruleId":"142","severity":1,"message":"156","line":32,"column":16,"nodeType":"144","messageId":"145","endLine":32,"endColumn":23},{"ruleId":"142","severity":1,"message":"159","line":9,"column":10,"nodeType":"144","messageId":"145","endLine":9,"endColumn":27},{"ruleId":"142","severity":1,"message":"160","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":80,"column":33,"nodeType":"151","messageId":"152","endLine":80,"endColumn":43,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"150","line":250,"column":23,"nodeType":"151","messageId":"152","endLine":250,"endColumn":36,"suggestions":"162"},{"ruleId":"142","severity":1,"message":"163","line":251,"column":31,"nodeType":"144","messageId":"145","endLine":251,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":252,"column":37,"nodeType":"151","messageId":"152","endLine":252,"endColumn":47,"suggestions":"164"},{"ruleId":"149","severity":1,"message":"150","line":319,"column":7,"nodeType":"151","messageId":"152","endLine":319,"endColumn":14,"suggestions":"165"},{"ruleId":"142","severity":1,"message":"148","line":27,"column":37,"nodeType":"144","messageId":"145","endLine":27,"endColumn":47},{"ruleId":"142","severity":1,"message":"166","line":75,"column":10,"nodeType":"144","messageId":"145","endLine":75,"endColumn":25},"@typescript-eslint/no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'StrawContext' is defined but never used.","'options' is defined but never used.","'event' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["167"],"'shapeType' is assigned a value but never used.","'fabric' is defined but never used.","'pointer' is assigned a value but never used.","'color' is assigned a value but never used.","'Tool' is defined but never used.","'efficentFloodFill' is defined but never used.","'ToolType' is defined but never used.",["168"],["169"],"'deltaX' is assigned a value but never used.",["170"],["171"],"'mapStateToProps' is defined but never used.",{"messageId":"172","fix":"173","desc":"174"},{"messageId":"172","fix":"175","desc":"174"},{"messageId":"172","fix":"176","desc":"174"},{"messageId":"172","fix":"177","desc":"174"},{"messageId":"172","fix":"178","desc":"174"},"suggestOptionalChain",{"range":"179","text":"180"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"181","text":"180"},{"range":"182","text":"180"},{"range":"183","text":"180"},{"range":"184","text":"180"},[586,587],"?",[2478,2479],[7251,7252],[7372,7373],[9205,9206]]