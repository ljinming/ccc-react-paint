[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/CCCPaint.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/util/toolType.ts":"3","/Users/jinmingliu/work/ccc-react-paint/src/utils.tsx":"4","/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/index.ts":"5","/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts":"6","/Users/jinmingliu/work/ccc-react-paint/src/left-tool/index.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/right/index.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/edit/index.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/canvas/index.tsx":"10","/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/event.ts":"11","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/shape.ts":"12","/Users/jinmingliu/work/ccc-react-paint/src/left-tool/util.tsx":"13","/Users/jinmingliu/work/ccc-react-paint/src/edit/Resize.tsx":"14","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/tool.ts":"15","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/index.ts":"16","/Users/jinmingliu/work/ccc-react-paint/src/util/snapshot/index.ts":"17","/Users/jinmingliu/work/ccc-react-paint/src/right/showShape/index.tsx":"18","/Users/jinmingliu/work/ccc-react-paint/src/right/text/index.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/right/formatColor/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/right/pen/index.tsx":"21","/Users/jinmingliu/work/ccc-react-paint/src/right/earser/index.tsx":"22","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorExtract.ts":"23","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorFill.ts":"24","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/eraser.ts":"25","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/pen.ts":"26","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/Text.ts":"27","/Users/jinmingliu/work/ccc-react-paint/src/right/components/shape/index.tsx":"28","/Users/jinmingliu/work/ccc-react-paint/src/right/components/colorPanel/index.tsx":"29","/Users/jinmingliu/work/ccc-react-paint/src/right/components/slider/index.tsx":"30"},{"size":161,"mtime":1655091758625,"results":"31","hashOfConfig":"32"},{"size":6179,"mtime":1655714192899,"results":"33","hashOfConfig":"32"},{"size":918,"mtime":1655088099573,"results":"34","hashOfConfig":"32"},{"size":1159,"mtime":1655274671522,"results":"35","hashOfConfig":"32"},{"size":2010,"mtime":1654736372870,"results":"36","hashOfConfig":"32"},{"size":1418,"mtime":1655091862026,"results":"37","hashOfConfig":"32"},{"size":3144,"mtime":1655357723767,"results":"38","hashOfConfig":"32"},{"size":1113,"mtime":1655274671520,"results":"39","hashOfConfig":"32"},{"size":1654,"mtime":1655358467217,"results":"40","hashOfConfig":"32"},{"size":12407,"mtime":1655722699148,"results":"41","hashOfConfig":"32"},{"size":136,"mtime":1655087991761,"results":"42","hashOfConfig":"32"},{"size":8172,"mtime":1654736372871,"results":"43","hashOfConfig":"32"},{"size":10537,"mtime":1655274671518,"results":"44","hashOfConfig":"32"},{"size":2397,"mtime":1655358840544,"results":"45","hashOfConfig":"32"},{"size":5097,"mtime":1655722575352,"results":"46","hashOfConfig":"32"},{"size":247,"mtime":1654748643953,"results":"47","hashOfConfig":"32"},{"size":984,"mtime":1655254761162,"results":"48","hashOfConfig":"32"},{"size":512,"mtime":1655358397568,"results":"49","hashOfConfig":"32"},{"size":3359,"mtime":1655359026356,"results":"50","hashOfConfig":"32"},{"size":1126,"mtime":1655358631165,"results":"51","hashOfConfig":"32"},{"size":854,"mtime":1655358552230,"results":"52","hashOfConfig":"32"},{"size":729,"mtime":1655358536351,"results":"53","hashOfConfig":"32"},{"size":1008,"mtime":1654736372870,"results":"54","hashOfConfig":"32"},{"size":3633,"mtime":1655719426466,"results":"55","hashOfConfig":"32"},{"size":2837,"mtime":1655719583006,"results":"56","hashOfConfig":"32"},{"size":2877,"mtime":1655719009761,"results":"57","hashOfConfig":"32"},{"size":3520,"mtime":1655274671522,"results":"58","hashOfConfig":"32"},{"size":3780,"mtime":1655358336768,"results":"59","hashOfConfig":"32"},{"size":1831,"mtime":1655358580181,"results":"60","hashOfConfig":"32"},{"size":837,"mtime":1655274671520,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ce6qsy",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/CCCPaint.tsx",["130"],"/Users/jinmingliu/work/ccc-react-paint/src/util/toolType.ts",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/utils.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/left-tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/edit/index.tsx",["131"],"import React from \"react\";\nimport \"./index.less\";\nimport { useContext } from \"react\";\nimport { DispatcherContext } from \"@/context\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { CLEAR_EVENT, REDO_EVENT, UNDO_EVENT } from \"../util/dispatcher/event\";\nimport Resize from \"./Resize\";\nimport { undoIcon, clearIcon } from \"../left-tool/util\";\n\ninterface propsEdit {\n  CanvasSize: {\n    width: number | undefined;\n    height: number | undefined;\n  };\n}\n\nconst OtherOperator = (props: propsEdit) => {\n  const { CanvasSize } = props;\n  const dispatcherContext = useContext(DispatcherContext);\n\n  const clearCanvas = () => {\n    dispatcherContext.dispatcher.dispatch(CLEAR_EVENT);\n  };\n  const undo = () => {\n    dispatcherContext.dispatcher.dispatch(UNDO_EVENT);\n  };\n  const redo = () => {\n    dispatcherContext.dispatcher.dispatch(REDO_EVENT);\n  };\n\n  return (\n    <div className=\"edit-other otherOperator\">\n      <div className=\"operator-content\">\n        <span className=\"showSizeSpan\">\n          {CanvasSize.width}*{CanvasSize.height}\n        </span>\n        <span className=\"operator-resize\">\n          <Resize />\n        </span>\n        <span title=\"Clear All\" className=\"operator-item\">\n          <span onClick={clearCanvas}>{clearIcon}</span>\n        </span>\n        <span title=\"Undo\" className=\"operator-item\">\n          <span onClick={undo}>{undoIcon}</span>\n        </span>\n        <span\n          title=\"Redo\"\n          style={{ transform: \"rotateY(180deg)\" }}\n          className=\"operator-item\"\n        >\n          <span onClick={redo}>{undoIcon}</span>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherOperator;\n","/Users/jinmingliu/work/ccc-react-paint/src/canvas/index.tsx",["132","133","134","135","136","137"],"/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/event.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/shape.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/left-tool/util.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/edit/Resize.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/tool.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/snapshot/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/showShape/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/text/index.tsx",["138"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { TextContext, ColorContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Select } from \"antd\";\nimport IntegerStep from \"../components/slider\";\nimport { useMemo } from \"react\";\n\nconst { Option } = Select;\n\ninterface FormatColor {\n  className?: string;\n}\n\nconst textFamily = [\n  \"Barlow-ExtraBold\",\n  \"DIN-AlternateBold\",\n  \"Trebuchet-MSBold\",\n  \"Trebuchet-MS\",\n  \"Poppins-Bold\",\n  \"Poppins-Light\",\n  \"Poppins-Medium\",\n  \"Poppins-Regular\",\n  \"Poppins-SemiBold\",\n];\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const TextToolContext = useContext(TextContext);\n  const colorContext = useContext(ColorContext);\n\n  const fontStyle = useMemo(() => {\n    return TextToolContext.fontStyle;\n  }, [TextToolContext.fontStyle]);\n\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div\n      className={\n        className ? ` ccc-text formatColor ${className}` : \"ccc-text colorpanel\"\n      }\n    >\n      <div className=\"content\">\n        <div className=\"font\">\n          <h3>Font</h3>\n          <Select\n            className=\"ccc-text-family\"\n            onChange={(value: string) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontFamily: value,\n              });\n            }}\n          >\n            {textFamily.map((va) => {\n              return (\n                <Option key={va} value={va}>\n                  {va}\n                </Option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"font\">\n          <h3>Letter Spacing</h3>\n          <IntegerStep\n            min={1}\n            max={8}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                letterSpacing: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Font Size</h3>\n          <IntegerStep\n            min={12}\n            max={72}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontSize: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Line Height</h3>\n          <IntegerStep\n            min={24}\n            max={56}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                lineHeight: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n              TextToolContext.setFont({\n                ...fontStyle,\n                color: \"#\" + color.hex,\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/formatColor/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/pen/index.tsx",["139"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport ColorPanel from \"../components/colorPanel\";\nimport \"./index.less\";\n\ninterface PenType {\n  lineSize: number;\n}\n\nconst ShowPen = (props: PenType) => {\n  const lineWidthContext = useContext(LineWidthContext);\n\n  const { lineSize } = props;\n\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Brush Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n      <ColorPanel type=\"pen\" className=\"toolbar-item\" title=\"Color Panel\" />\n    </div>\n  );\n};\n\nexport default ShowPen;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/earser/index.tsx",["140"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport \"./index.less\";\n\ninterface earserType {\n  lineSize: number;\n}\n\nconst Eraser = (props: earserType) => {\n  const { lineSize } = props;\n  const lineWidthContext = useContext(LineWidthContext);\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Eraser Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorExtract.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorFill.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/eraser.ts",["141"],"import { ColorType } from \"../toolType\";\nimport Tool, { Point, getMousePos, getPixelColorOnCanvas, getTouchPos, hexToRgb, updateImageData } from \"./tool\";\nclass Eraser extends Tool {\n  protected lineWidthBase = 1;\n  private mouseDown = false;\n  private color = \"\";\n  private saveImageData?: ImageData;\n  private previousPos: Point = {\n    x: 0,\n    y: 0\n  };\n  public constructor(lineSize:number) {\n    super();\n    this.lineWidthBase = lineSize;\n    this.color = \"\";\n  }\n  private operateStart(pos: Point) {\n    if (!Tool.ctx) return;\n    this.saveImageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n    this.mouseDown = true;\n    this.color = getPixelColorOnCanvas(Tool.ctx, pos.x -1, pos.y - 1);\n    Tool.ctx.lineWidth = 3 * this.lineWidthBase;\n    Tool.ctx.strokeStyle = this.color;\n    Tool.ctx.lineJoin = \"round\";\n    Tool.ctx.lineCap = \"round\";\n    Tool.ctx.beginPath();\n    this.previousPos = pos;\n  }\n  private operateMove(pos: Point) {\n    if (this.mouseDown) {\n      Tool.ctx.moveTo(this.previousPos.x, this.previousPos.y);\n      const c = 0.5 * (this.previousPos.x + pos.x);\n      const d = 0.5 * (this.previousPos.y + pos.y);\n      Tool.ctx.quadraticCurveTo(c, d, pos.x, pos.y);\n      Tool.ctx.stroke();\n      this.previousPos = pos;\n    }\n  }\n  private operateEnd() {\n    if (this.mouseDown) {\n      Tool.ctx.closePath();\n      this.mouseDown = false;\n      let imageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n      const colorRgb = hexToRgb(this.color);\n      if (colorRgb && this.saveImageData) {\n        imageData = updateImageData(this.saveImageData, imageData, [colorRgb.r, colorRgb.g, colorRgb.b, colorRgb.a]);\n\n        Tool.ctx.putImageData(imageData, 0, 0);\n      }\n    }\n  }\n  public onMouseDown(event: MouseEvent): void {\n    event.preventDefault();\n\n    const mousePos = getMousePos(Tool.ctx.canvas, event);\n\n    this.operateStart(mousePos);\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    event.preventDefault();\n    this.operateEnd();\n  }\n\n  public onMouseMove(event: MouseEvent): void {\n    event.preventDefault();\n    const mousePos = getMousePos(Tool.ctx.canvas, event);\n    this.operateMove(mousePos);\n  }\n\n  public onTouchStart(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n    this.operateStart(touchPos);\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n    this.operateMove(touchPos);\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    this.operateEnd();\n  }\n}\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/pen.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/Text.ts",["142","143"],"import Tool from \"./tool\";\n\n// interface propsInput = {\n//             x?: number,\n//             y?: Number,\n//             maxWidth?:Number\n// }\n\nclass Text extends Tool {\n  private isMouseDown = false;\n  private saveImageData?: ImageData;\n  private _x: number;\n  private _y: number;\n  private textContent: string;\n  private textBox: any;\n  private fontStyle: any;\n  private canvas: any;\n  private canvasText: any;\n  public constructor(fontType: any) {\n    super();\n    this._x = NaN;\n    this._y = NaN;\n    this.textBox = document.getElementById(\"textBox\");\n    this.canvasText = document.getElementById(\"canvas-text\");\n\n    this.textContent = \"\";\n    this.fontStyle = fontType;\n  }\n\n  private drawing(x: number, y: number) {\n    const context = Tool.ctx;\n    if (!context) {\n      return;\n    } else {\n      // 设置画笔的颜色和大小\n      context.fillStyle = \"#000\"; // 填充颜色为红色\n      context.lineWidth = 5; // 指定描边线的宽度\n      context.font = \"10px\";\n      if (context && this.fontStyle) {\n        const { fontSize = \"12px\", fontFamily, color, letterSpacing } = this.fontStyle;\n        context.fillStyle = color || \"#000\";\n        context.font = `${fontSize} ${fontFamily}`;\n        if (context.canvas && letterSpacing) {\n          context.canvas.style.letterSpacing = letterSpacing;\n        }\n      }\n\n      // 写字\n      //   const width = this.canvas.offsetWidth;\n      //   console.log(\"----546\", this.canvas);\n      //   const height = this.canvas.offsetHeight;\n      //   const tempImg = new Image();\n      //   tempImg.width = width;\n      //   tempImg.height = height;\n      //   tempImg.onload = function () {\n      //     // 把img绘制在canvas画布上\n      //     context.drawImage(tempImg, 0, 0, width, height);\n      //   };\n      //   (tempImg.src =\n      //     'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\"><foreignObject width=\"' +\n      //     width +\n      //     '\" height=\"' +\n      //     height +\n      //     '\"><body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;font:' +\n      //     context.font +\n      //     ';\">' +\n      //     this.textContent),\n      //     +\"</body></foreignObject></svg>\";\n      context.fillText(this.textContent, parseInt(this.textBox.style.left), parseInt(this.textBox.style.top));\n      // this.wrapText(this.textContent, parseInt(this.textBox.style.left), parseInt(this.textBox.style.top));\n    }\n  }\n\n  public onMouseDown(event: MouseEvent): void {\n    // 鼠标按下位置保存\n\n    event.preventDefault();\n    if (this.isMouseDown) {\n      this.textContent = this.textBox.value;\n      this.isMouseDown = false;\n      this.textBox.style[\"z-index\"] = -1;\n      this.canvasText.style[\"z-index\"] = -1;\n      this.textBox.style.visibility = \"hidden\";\n      this.drawing(this._x, this._y);\n      this.textBox.value = \"\";\n    } else if (!this.isMouseDown) {\n      this._x = event.offsetX; // 鼠标按下时保存当前位置，为起始位置\n      this._y = event.offsetY;\n      this.isMouseDown = true;\n      this.textBox.value = \"\";\n      if (typeof this.fontStyle === \"object\") {\n        Object.keys(this.fontStyle).forEach((va) => {\n          this.textBox.style[va] = this.fontStyle[va];\n        });\n      }\n      this.canvasText.style[\"z-index\"] = 5;\n      this.textBox.style[\"z-index\"] = 6;\n      this.textBox.style.visibility = \"visible\";\n      this.textBox.style.left = this._x - 4 + \"px\";\n      this.textBox.style.top = this._y - 2 + \"px\";\n    }\n  }\n}\n\nexport default Text;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/components/shape/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/components/colorPanel/index.tsx",["144","145","146","147"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { ColorContext } from \"@/context\";\nimport { ColorType } from \"../../../util/toolType\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getRandomColor } from \"../../../utils\";\n\ninterface ColorPanelProps {\n  className?: string;\n  title?: string;\n  type?: string;\n}\n\nconst activeColorTypeCls = \"active-color-type\";\n\nconst ColorPanel: React.FC<ColorPanelProps> = (props) => {\n  const { className, title, type } = props;\n\n  const [pickerColor, setPickerColor] = useState(\n    createColor(type && type === \"pen\" ? getRandomColor() : \"#000000FF\")\n  );\n  const colorContext = useContext(ColorContext);\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div className={className ? `colorpanel ${className}` : \"colorpanel\"}>\n      <div className=\"content\">\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n            }}\n          />\n        </div>\n        {/* {title && (\n          <div className=\"color-result\">\n            <div\n              onClick={() => colorContext.setActiveColor(ColorType.MAIN)}\n              className={activeColorType === ColorType.MAIN ? `main-color ${activeColorTypeCls}` : \"main-color\"}\n            >\n              <div className=\"color-box1\" style={{ backgroundColor: colorContext.mainColor }} />\n              <div>{title}</div>\n            </div>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPanel;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/components/slider/index.tsx",[],{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":20},{"ruleId":"148","severity":1,"message":"152","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":22},{"ruleId":"148","severity":1,"message":"153","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"154","line":62,"column":5,"nodeType":"150","messageId":"151","endLine":62,"endColumn":11},{"ruleId":"155","severity":1,"message":"156","line":142,"column":21,"nodeType":"157","messageId":"158","endLine":142,"endColumn":31,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"156","line":143,"column":22,"nodeType":"157","messageId":"158","endLine":143,"endColumn":32,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":231,"column":15,"nodeType":"150","messageId":"151","endLine":231,"endColumn":25},{"ruleId":"148","severity":1,"message":"162","line":277,"column":9,"nodeType":"150","messageId":"151","endLine":277,"endColumn":19},{"ruleId":"148","severity":1,"message":"163","line":40,"column":9,"nodeType":"150","messageId":"151","endLine":40,"endColumn":24},{"ruleId":"148","severity":1,"message":"164","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},{"ruleId":"148","severity":1,"message":"164","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},{"ruleId":"148","severity":1,"message":"165","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},{"ruleId":"148","severity":1,"message":"166","line":30,"column":19,"nodeType":"150","messageId":"151","endLine":30,"endColumn":28},{"ruleId":"148","severity":1,"message":"167","line":30,"column":30,"nodeType":"150","messageId":"151","endLine":30,"endColumn":39},{"ruleId":"148","severity":1,"message":"165","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":19},{"ruleId":"148","severity":1,"message":"168","line":17,"column":7,"nodeType":"150","messageId":"151","endLine":17,"endColumn":25},{"ruleId":"148","severity":1,"message":"169","line":20,"column":22,"nodeType":"150","messageId":"151","endLine":20,"endColumn":27},{"ruleId":"148","severity":1,"message":"163","line":26,"column":9,"nodeType":"150","messageId":"151","endLine":26,"endColumn":24},"@typescript-eslint/no-unused-vars","'Ref' is defined but never used.","Identifier","unusedVar","'MenuOutlined' is defined but never used.","'useMemo' is defined but never used.","'onSize' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["170"],["171"],"'canvasData' is assigned a value but never used.","'canvasPain' is assigned a value but never used.","'activeColorType' is assigned a value but never used.","'FC' is defined but never used.","'ColorType' is defined but never used.","'x' is defined but never used.","'y' is defined but never used.","'activeColorTypeCls' is assigned a value but never used.","'title' is assigned a value but never used.",{"messageId":"172","fix":"173","desc":"174"},{"messageId":"172","fix":"175","desc":"174"},"suggestOptionalChain",{"range":"176","text":"177"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"178","text":"177"},[3532,3533],"?",[3577,3578]]