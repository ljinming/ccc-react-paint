[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx":"3","/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx":"4","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx":"5","/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx":"6","/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx":"10","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx":"11","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx":"12","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx":"13","/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx":"14","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts":"15","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx":"16","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts":"17","/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx":"18","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx":"21","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx":"22","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx":"23","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx":"24","/Users/jinmingliu/work/ccc-react-paint/src/Action.tsx":"25"},{"size":170,"mtime":1657603653315,"results":"26","hashOfConfig":"27"},{"size":1983,"mtime":1657595605137,"results":"28","hashOfConfig":"27"},{"size":234,"mtime":1657541738793,"results":"29","hashOfConfig":"27"},{"size":1343,"mtime":1657541738787,"results":"30","hashOfConfig":"27"},{"size":1859,"mtime":1657596945367,"results":"31","hashOfConfig":"27"},{"size":4754,"mtime":1657603617663,"results":"32","hashOfConfig":"27"},{"size":1259,"mtime":1657541738793,"results":"33","hashOfConfig":"27"},{"size":8713,"mtime":1657594501728,"results":"34","hashOfConfig":"27"},{"size":1567,"mtime":1657594501727,"results":"35","hashOfConfig":"27"},{"size":5737,"mtime":1657541738792,"results":"36","hashOfConfig":"27"},{"size":1292,"mtime":1657595008357,"results":"37","hashOfConfig":"27"},{"size":641,"mtime":1657594501723,"results":"38","hashOfConfig":"27"},{"size":13685,"mtime":1657541738789,"results":"39","hashOfConfig":"27"},{"size":1177,"mtime":1657541738794,"results":"40","hashOfConfig":"27"},{"size":3956,"mtime":1657541738792,"results":"41","hashOfConfig":"27"},{"size":11074,"mtime":1657603606479,"results":"42","hashOfConfig":"27"},{"size":379,"mtime":1657594974814,"results":"43","hashOfConfig":"27"},{"size":2047,"mtime":1657594536567,"results":"44","hashOfConfig":"27"},{"size":3931,"mtime":1657541738786,"results":"45","hashOfConfig":"27"},{"size":695,"mtime":1657541738781,"results":"46","hashOfConfig":"27"},{"size":367,"mtime":1657594560497,"results":"47","hashOfConfig":"27"},{"size":3545,"mtime":1657594501723,"results":"48","hashOfConfig":"27"},{"size":654,"mtime":1657541738783,"results":"49","hashOfConfig":"27"},{"size":1565,"mtime":1657594501724,"results":"50","hashOfConfig":"27"},{"size":478,"mtime":1657594501718,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sw6yjp",{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx",["112","113"],"import { connect, useSelector, shallowEqual } from \"react-redux\";\nimport ToolType from \"./ToolType\";\nimport \"./index.less\";\nimport FabricJSCanvas from \"./canvas\";\nimport { RootState } from \"../../type\";\nimport Pencil from \"./Pencil\";\nimport Shape from \"./Shape\";\nimport Eraser from \"./Eraser\";\nimport Text from \"./Text\";\nimport FillColor from \"./FillColor\";\nimport { useState } from \"react\";\ninterface ContentProps {\n  pre: string;\n  //tool: string;\n  backgroundColor: string;\n  imgSrc?: string;\n  id: string;\n  canvasSize: {\n    width: number;\n    height: number;\n  };\n  // straw : {\n  //   strawFlag: boolean;\n  //   strawColor: string;\n  // };\n}\n\nconst Content = (props: ContentProps) => {\n  const { pre, imgSrc, id, backgroundColor, canvasSize } = props;\n  //const [fillColor, setFillColor] = useState(board.fillColor);\n\n  const { tool, straw } = useSelector((state: RootState) => {\n    return {\n      tool: state[\"paint.tool\"].select,\n      straw: state[\"paint.straw\"],\n    };\n  }, shallowEqual);\n\n  const renderRight = () => {\n    let right = <>test</>;\n    switch (tool) {\n      case \"PEN\":\n        return <Pencil />;\n      case \"SHAPE\":\n        return <Shape />;\n      case \"ERASER\":\n        return <Eraser />;\n      case \"TEXT\":\n        return <Text />;\n      case \"BUCKET\":\n        return <FillColor />;\n      default:\n        break;\n    }\n    return right;\n  };\n\n  return (\n    <div className={`${pre}-content`}>\n      <ToolType prefix={`${pre}-content`} select={tool} />\n      <div className={`${pre}-content-canvas`}>\n        <FabricJSCanvas\n          canvasSize={canvasSize}\n          tool={tool}\n          imgSrc={imgSrc}\n          id={id}\n          straw={straw}\n          backgroundColor={backgroundColor}\n        />\n      </div>\n      <div className={`${pre}-content-right`}>{renderRight()}</div>\n    </div>\n  );\n};\n\nexport default Content;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx",["114","115","116","117","118","119","120","121","122","123"],"/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx",["124"],"import Tool, { getPixelColorOnCanvas, Point } from \"./tool\";\n//import \"libs/eraser_brush.mixin.js\"; // 本地地址进行引用即可\n\nclass Eraser extends Tool {\n  color: string | undefined;\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = false;\n\n    Tool.canvas.freeDrawingBrush.color = \"transparent\";\n    // Tool.canvas.freeDrawingBrush = new fabric.EraserBrush(Tool.canvas); // 使用橡皮擦画笔\n    Tool.canvas.isDrawingMode = true;\n    Tool.canvas.freeDrawingBrush.width = 20; // 设置画笔粗细为 20\n  }\n\n  //改变画笔的粗细\n  static setEraserStyle(value: number) {\n    this.canvas!.freeDrawingBrush.width = value;\n  }\n\n  private operateStart = (pointer: Point): void => {\n    const ctx = Tool.canvas.getContext();\n    const color = getPixelColorOnCanvas(pointer, ctx);\n    Tool.canvas.freeDrawingBrush.color = color;\n  };\n\n  public onMouseDown(options: any) {\n    if (Tool.toolType !== \"ERASER\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n    e.preventDefault();\n    Tool.canvas.freeDrawingBrush.color = \"transparent\";\n    const show = {\n      x: absolutePointer.x * 2,\n      y: absolutePointer.y * 2,\n    };\n    this.operateStart(show);\n  }\n}\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx",["125","126"],"import Tool, { setStrawColor } from \"./tool\";\nimport { fabric } from \"fabric\";\nimport { Point } from \"./tool\";\n\nclass Shape extends Tool {\n  private shapeCurrent: any;\n  downPoints: Point;\n  upPoints: Point | undefined;\n  static shapeObject: Record<string, string> = {\n    shapeType: \"LINE\",\n    border: \"SOLID\",\n    color: \"#000\",\n  };\n  static selected: boolean = false;\n  static selectedList: any[];\n  constructor() {\n    super();\n    this.shapeCurrent = undefined;\n    this.downPoints = {\n      x: 0,\n      y: 0,\n    };\n    this.upPoints = {\n      x: 0,\n      y: 0,\n    };\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = true;\n    Tool.canvas.isDrawingMode = false;\n  }\n\n  static changeShapeType(type: string, value: string) {\n    this.shapeObject[type] = value;\n    const { border } = Shape.shapeObject;\n\n    if (this.selected && this.selectedList.length > 0) {\n      this.selectedList.forEach((va) => {\n        if (type === \"color\") {\n          if (border === \"FILL\") {\n            va.set(\"fill\", value);\n            va.set(\"stroke\", value);\n          } else {\n            va.set(\"stroke\", value);\n          }\n        } else if (type === \"border\") {\n          va.set(\"strokeDashArray\", value === \"DOTTED\" ? [3, 3] : [0, 0]);\n        }\n      });\n      Tool.canvas.requestRenderAll();\n    }\n  }\n\n  createShape = (pointer: Point) => {\n    const { shapeType, border, color } = Shape.shapeObject;\n    const options: Record<string, string | number | number[]> = {\n      strokeDashArray: border === \"DOTTED\" ? [3, 3] : [0, 0],\n      stroke: Tool.strawColor || color, // 笔触颜色\n    };\n    if (border === \"FILL\") {\n      options.fill = Tool.strawColor || color;\n    }\n    switch (shapeType) {\n      case \"LINE\":\n        this.shapeCurrent = new fabric.Line(\n          [\n            pointer.x,\n            pointer.y, // 起始点坐标\n            pointer.x,\n            pointer.y, // 结束点坐标\n          ],\n          options\n        );\n        break;\n      case \"RECT\":\n        // 创建矩形\n        // 矩形参数计算\n        let top = Math.min(pointer.y, pointer.y);\n        let left = Math.min(pointer.x, pointer.x);\n        let width = Math.abs(pointer.x - pointer.x);\n        let height = Math.abs(pointer.y - pointer.y);\n        // 矩形对象\n        this.shapeCurrent = new fabric.Rect({\n          top,\n          left,\n          width,\n          height,\n          fill: \"transparent\",\n          strokeWidth: 1,\n          ...options,\n        });\n        break;\n      case \"CIRCLE\":\n        this.shapeCurrent = new fabric.Circle({\n          top: pointer.y,\n          left: pointer.x,\n          radius: 0,\n          fill: \"transparent\",\n          ...options,\n        });\n        break;\n      case \"TRIANGLE\":\n        this.shapeCurrent = new fabric.Triangle({\n          top: pointer.y,\n          left: pointer.x,\n          width: 0,\n          height: 0,\n          fill: \"transparent\",\n          ...options,\n        });\n        break;\n      case \"RHOMBUS\": //多边形\n        this.shapeCurrent = new fabric.Polygon(\n          [\n            { x: pointer.x, y: pointer.y },\n            { x: pointer.x, y: pointer.y },\n          ],\n          {\n            fill: \"transparent\",\n            objectCaching: false,\n            ...options,\n          }\n        );\n        break;\n    }\n\n    Tool.canvas.add(this.shapeCurrent);\n  };\n\n  changeShape = (pointer: Point) => {\n    const { shapeType } = Shape.shapeObject;\n    switch (shapeType) {\n      case \"LINE\":\n        if (this.shapeCurrent) {\n          this.shapeCurrent.set(\"x2\", pointer.x);\n          this.shapeCurrent.set(\"y2\", pointer.y);\n        }\n        break;\n      case \"RECT\":\n        if (this.shapeCurrent) {\n          this.shapeCurrent.set(\n            \"width\",\n            Math.abs(this.downPoints.x - pointer.x)\n          );\n          this.shapeCurrent.set(\n            \"height\",\n            Math.abs(this.downPoints.y - pointer.y)\n          );\n        }\n        break;\n      case \"CIRCLE\":\n        {\n          const radius =\n            Math.min(\n              Math.abs(this.downPoints.x - pointer.x),\n              Math.abs(this.downPoints.y - pointer.y)\n            ) / 2;\n          const top =\n            pointer.y > this.downPoints.y\n              ? this.downPoints.y\n              : this.downPoints.y - radius * 2;\n          const left =\n            pointer.x > this.downPoints.x\n              ? this.downPoints.x\n              : this.downPoints.x - radius * 2;\n\n          this.shapeCurrent.set(\"radius\", radius);\n          this.shapeCurrent.set(\"top\", top);\n          this.shapeCurrent.set(\"left\", left);\n        }\n        break;\n      case \"TRIANGLE\":\n        {\n          const width = Math.abs(this.downPoints.x - pointer.x);\n          const height = Math.abs(this.downPoints.y - pointer.y);\n          const top = Math.min(this.downPoints.y, pointer.y);\n          const left = Math.min(this.downPoints.x, pointer.x);\n          this.shapeCurrent.set(\"width\", width);\n          this.shapeCurrent.set(\"height\", height);\n          this.shapeCurrent.set(\"top\", top);\n          this.shapeCurrent.set(\"left\", left);\n        }\n        break;\n      case \"RHOMBUS\": //多边形\n        let points = this.shapeCurrent.points;\n        points.push({\n          x: pointer.x,\n          y: pointer.y,\n        });\n        break;\n    }\n    Tool.canvas.requestRenderAll();\n  };\n\n  // 多边形橡皮带\n  changePolygonBelt(pointer: Point) {\n    let points = this.shapeCurrent.points;\n    points[points.length - 1].x = pointer.x;\n    points[points.length - 1].y = pointer.y;\n    Tool.canvas.requestRenderAll();\n  }\n  // 完成多边形绘制\n  finishPolygon(pointer: Point) {\n    const { shapeType, border, color } = Shape.shapeObject;\n    const options = {\n      strokeDashArray: border === \"SOLID\" ? [0, 0] : [3, 3],\n      stroke: Tool.strawColor || color, // 笔触颜色\n    };\n    let points = this.shapeCurrent.points;\n    if (points[points.length - 1]) {\n      points[points.length - 1].x = pointer.x;\n      points[points.length - 1].y = pointer.y;\n    }\n\n    points.pop();\n    points.pop();\n    Tool.canvas.remove(this.shapeCurrent);\n    if (points.length > 1) {\n      let polygon = new fabric.Polygon(points, {\n        fill: \"transparent\",\n        ...options,\n      });\n\n      Tool.canvas.add(polygon);\n    }\n\n    this.shapeCurrent = null;\n    Tool.canvas.requestRenderAll();\n  }\n\n  onMouseDown(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n\n    this.downPoints = absolutePointer; //鼠标按下的位置\n    if (Tool.strawFlag) {\n      const show = {\n        x: absolutePointer.x * 2,\n        y: absolutePointer.y * 2,\n      };\n      setStrawColor(show);\n      return;\n    }\n    const { shapeType } = Shape.shapeObject;\n    e.preventDefault();\n    if (!Shape.selected) {\n      if (shapeType === \"RHOMBUS\") {\n        if (!this.shapeCurrent) {\n          this.createShape(absolutePointer);\n        } else {\n          this.changeShape(absolutePointer);\n        }\n      } else if (!this.shapeCurrent) {\n        this.createShape(absolutePointer);\n      }\n    }\n  }\n\n  public onMouseMove(options: any): void {\n    if (Tool.toolType === \"SHAPE\") {\n      const { e, absolutePointer } = options;\n      e.preventDefault();\n      const { shapeType } = Shape.shapeObject;\n      e.preventDefault();\n      if (this.shapeCurrent) {\n        if (shapeType === \"RHOMBUS\") {\n          this.changePolygonBelt(absolutePointer);\n        } else {\n          this.changeShape(absolutePointer);\n        }\n      }\n    }\n  }\n\n  public onMouseUp(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n    const { shapeType } = Shape.shapeObject;\n    e.preventDefault();\n    if (shapeType !== \"RHOMBUS\") {\n      this.upPoints = absolutePointer;\n      if (JSON.stringify(this.downPoints) === JSON.stringify(this.upPoints)) {\n        Tool.canvas.remove(this.shapeCurrent);\n      }\n      this.shapeCurrent = undefined;\n    }\n  }\n\n  public onDbClick(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    const { shapeType } = Shape.shapeObject;\n    const { e, absolutePointer } = options;\n    e.preventDefault();\n    if (shapeType === \"RHOMBUS\" && this.shapeCurrent) {\n      this.finishPolygon(absolutePointer);\n    }\n  }\n\n  public onSelected(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    Shape.selected = true;\n    Shape.selectedList = options.selected;\n  }\n  public onCancelSelected(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    Shape.selected = false;\n    Shape.selectedList = [];\n  }\n}\n\nexport default Shape;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx",["127","128"],"import { fabric } from \"fabric\";\nimport Tool, { Point, setStrawColor } from \"./tool\";\n\nclass CanvasText extends Tool {\n  textObject: any;\n  static textStyle: any;\n  selected: boolean;\n  constructor() {\n    super();\n    this.selected = false;\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = true;\n  }\n\n  static changeTextStyle(type: any, value: any) {\n    CanvasText.textStyle = { ...CanvasText.textStyle, [type]: value };\n  }\n\n  initText(points: Point) {\n    const newObj = {\n      ...CanvasText.textStyle,\n    };\n    if (Tool.strawColor) {\n      newObj.fill = Tool.strawColor;\n    }\n    this.textObject = new fabric.Textbox(\"\", {\n      left: points.x,\n      top: points.y,\n      width: 150,\n      fontSize: 72,\n      ...newObj,\n      moveCursor: \"pointer\",\n    });\n    Tool.canvas.add(this.textObject);\n    this.textObject.enterEditing();\n  }\n\n  onMouseDown = (options: any) => {\n    if (Tool.toolType !== \"TEXT\") {\n      return;\n    }\n    const { e, pointer, absolutePointer } = options;\n    e.preventDefault();\n    if (Tool.strawFlag) {\n      const show = {\n        x: pointer.x * 2,\n        y: pointer.y * 2,\n      };\n      setStrawColor(show);\n      return;\n    }\n    if (!this.selected) {\n      if (!this.textObject) {\n        this.initText(absolutePointer);\n      } else {\n        this.textObject.exitEditing();\n        this.textObject = null;\n      }\n    }\n  };\n\n  public onSelected(options: any): void {\n    this.selected = true;\n  }\n  public onCancelSelected(options: any): void {\n    this.selected = false;\n  }\n}\n\nexport default CanvasText;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx",["129","130"],"import Tool, { Point, setStrawColor } from \"./tool\";\nimport { parseColorString } from \"./colorChange\";\nimport { fabric } from \"fabric\";\n\n/**\n * 高效率的填充算法\n * 参考地址: http://www.williammalone.com/articles/html5-canvas-javascript-paint-bucket-tool/\n */\nexport const efficentFloodFill = (\n  imageData: ImageData,\n  startX: number,\n  startY: number,\n  fillColor: [number, number, number]\n) => {\n  // 保证 startX 和 startY 是正整数\n  // 经测试，在触屏设备中 startX 和 startY 可能是小数，造成填充功能无法正确填充\n  startX = Math.round(startX);\n  startY = Math.round(startY);\n  const pixelStack: [number, number][] = [\n    [Math.round(startX), Math.round(startY)],\n  ];\n  const canvasWidth = imageData.width,\n    canvasHeight = imageData.height;\n  const startPos = (startY * canvasWidth + startX) * 4;\n  const colorLayer = imageData;\n  const startColor: [number, number, number] = [\n    colorLayer.data[startPos],\n    colorLayer.data[startPos + 1],\n    colorLayer.data[startPos + 2],\n  ];\n  const updatedPoint: Record<string | number, boolean> = {};\n  if (\n    startColor[0] === fillColor[0] &&\n    startColor[1] === fillColor[1] &&\n    startColor[2] === fillColor[2]\n  ) {\n    return undefined;\n  }\n  while (pixelStack.length > 0) {\n    const newPos = pixelStack.pop() as [number, number];\n    const x = newPos[0];\n    let y = newPos[1];\n    let pixelPos = (y * canvasWidth + x) * 4;\n    while (y-- >= 0 && matchColor(colorLayer, pixelPos, startColor)) {\n      pixelPos -= canvasWidth * 4;\n    }\n    pixelPos += canvasWidth * 4;\n    ++y;\n    let reachLeft = false,\n      reachRight = false;\n\n    if (updatedPoint[pixelPos]) {\n      continue;\n    }\n    updatedPoint[pixelPos] = true;\n    // newData.push(pixelPos);\n    while (\n      y++ < canvasHeight - 1 &&\n      matchColor(colorLayer, pixelPos, startColor)\n    ) {\n      fillPixel(colorLayer, pixelPos, fillColor);\n      if (x > 0) {\n        if (matchColor(colorLayer, pixelPos - 4, startColor)) {\n          if (!reachLeft) {\n            pixelStack.push([x - 1, y]);\n            reachLeft = true;\n          }\n        } else if (reachLeft) {\n          reachLeft = false;\n        }\n      }\n\n      if (x < canvasWidth - 1) {\n        if (matchColor(colorLayer, pixelPos + 4, startColor)) {\n          if (!reachRight) {\n            pixelStack.push([x + 1, y]);\n            reachRight = true;\n          }\n        } else if (reachRight) {\n          reachRight = false;\n        }\n      }\n\n      pixelPos += canvasWidth * 4;\n    }\n  }\n  return colorLayer;\n};\n\n/**\n * 判断两个位置的像素颜色是否相同\n */\nconst matchColor = (\n  colorLayer: ImageData,\n  pixelPos: number,\n  color: [number, number, number]\n) => {\n  const r = colorLayer.data[pixelPos];\n  const g = colorLayer.data[pixelPos + 1];\n  const b = colorLayer.data[pixelPos + 2];\n\n  return (\n    Math.abs(r - color[0]) < 30 &&\n    Math.abs(g - color[1]) < 30 &&\n    Math.abs(b - color[2]) < 30\n  );\n};\n\n/**\n * 修改指定ImageData的指定位置像素颜色\n */\nconst fillPixel = (\n  colorLayer: ImageData,\n  pixelPos: number,\n  color: [number, number, number]\n) => {\n  colorLayer.data[pixelPos] = color[0];\n  colorLayer.data[pixelPos + 1] = color[1];\n  colorLayer.data[pixelPos + 2] = color[2];\n\n  return colorLayer;\n};\n\nclass Bucket extends Tool {\n  static color: string = \"transparent\";\n  constructor() {\n    super();\n    this.init();\n  }\n\n  static changeColor = (color: string) => {\n    this.color = color;\n  };\n\n  init() {\n    Tool.canvas.interactive = false;\n    Tool.canvas.isDrawingMode = false;\n  }\n\n  filterChange = async (pos: Point) => {\n    const color = parseColorString(Tool.strawColor || Bucket.color);\n    const showCtx = Tool.canvas.getContext();\n    const colorLayer = efficentFloodFill(\n      showCtx.getImageData(0, 0, showCtx.canvas.width, showCtx.canvas.height),\n      pos.x * 2,\n      pos.y * 2,\n      [color.r, color.g, color.b]\n    );\n    if (colorLayer) {\n      showCtx.putImageData(colorLayer, 0, 0);\n      let canvasBucket: HTMLCanvasElement | undefined =\n        document.createElement(\"canvas\");\n      canvasBucket.width = colorLayer.width;\n      canvasBucket.height = colorLayer.height;\n      canvasBucket?.getContext(\"2d\")?.putImageData(colorLayer, 0, 0);\n      const url = canvasBucket.toDataURL();\n      Tool.canvas.setBackgroundImage(\n        url,\n        (img: any) => {\n          img.selectable = false;\n          img.evented = false;\n          Tool.canvas.renderAll();\n        },\n        { crossOrigin: \"anonymous\", scaleX: 0.5, scaleY: 0.5 }\n      );\n      canvasBucket = undefined;\n    }\n\n    // const filter = new fabric.Image.filters[\"ChangeColorFilter\"]({\n    //   pos,\n    //   fillColor: [color.r, color.g, color.b],\n    // });\n    // Tool.img.filters.push(filter);\n    // //Tool.img.filters.push(new fabric.Image.filters.Grayscale());\n    // Tool.img.applyFilters();\n    // Tool.canvas.renderAll();\n  };\n\n  public onMouseDown(options: any): void {\n    if (Tool.toolType !== \"BUCKET\") {\n      return;\n    }\n    const { e, pointer, absolutePointer } = options;\n    e.preventDefault();\n    if (Tool.strawFlag) {\n      const show = {\n        x: absolutePointer.x * 2,\n        y: absolutePointer.y * 2,\n      };\n      setStrawColor(show);\n      return;\n    }\n    this.filterChange(absolutePointer);\n  }\n  // public onMouseUp(event: MouseEvent): void {\n  //   if (Tool.toolType !== \"BUCKET\") {\n  //     return;\n  //   }\n  //   if (Tool.ToolStoreList.length >= 10) {\n  //     Tool.ToolStoreList.shift();\n  //     Tool.ToolStoreList.push(Tool.canvas.toDataURL());\n  //   } else {\n  //     console.log(\"==4\", Tool.canvas.toDataURL());\n  //     Tool.ToolStoreList.push(Tool.canvas.toDataURL());\n  //   }\n  // }\n}\n\nexport default Bucket;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx",["131"],"import { store } from \"../../Action\";\nimport { ToolTypeList } from \"../utils\";\nimport { getToolIcon } from \"../utils/tool\";\nimport { toolItem } from \"../utils/tsType\";\n//import Action from \"@/action\";\n\ninterface ToolProps {\n  prefix: string;\n  select?: string;\n  color?: string;\n}\n\nconst ToolType = (props: ToolProps) => {\n  const { prefix, select, color } = props;\n\n  return (\n    <ul className={`${prefix}-tool`}>\n      {ToolTypeList.map((va: toolItem) => {\n        return (\n          <li\n            title={va.title}\n            className={`${\n              select === va.key ? \"tool-item select\" : \"tool-item\"\n            }`}\n            key={va.key}\n            onClick={() => {\n              store.dispatch({ type: \"paint.tool\", select: va.key });\n              // Action.emit(\"paint.tool\", {\n              //   select: va.key,\n              // });\n            }}\n          >\n            <span style={{ position: \"relative\", display: \"inline-block\" }}>\n              {getToolIcon(va.icon)}\n              {va.key === \"BUCKET\" && (\n                <span\n                  className=\"bucket-icon\"\n                  //style={{ backgroundColor: color }}\n                />\n              )}\n            </span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ToolType;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx",["132"],"import Sider from \"../../components/sliderCard\";\nimport ColorPicker from \"../../components/colorPicker\";\nimport { Pen, Tool } from \"@/tool\";\n\nconst Pencil = () => {\n  const handleChange = (type: string, value: number | string) => {\n    Pen.setPenStyle(type, value);\n  };\n\n  return (\n    <>\n      <Sider\n        title=\"Brush thickness\"\n        options={{ max: 200, min: 1 }}\n        defaultValue={20}\n        onChange={(value: number) => handleChange(\"lineWidth\", value)}\n      />\n      <ColorPicker\n        color={Pen.color}\n        onChange={(color: string) => handleChange(\"color\", color)}\n      />\n    </>\n  );\n};\n\nexport default Pencil;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx",["133"],"import Tool, { getRandomColor, setStrawColor } from \"./tool\";\n\nclass Pen extends Tool {\n  static color: string = getRandomColor();\n  static lineWidth: number = 20;\n  //改变画笔的状态\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    console.log(\"pen init\", Tool.strawColor);\n    if (!Tool.canvas.isDrawingMode) {\n      Tool.canvas.isDrawingMode = true;\n    }\n    Tool.canvas.interactive = false;\n    Tool.canvas.freeDrawingBrush.color = Tool.strawColor || Pen.color;\n    Tool.canvas.freeDrawingBrush.width = Pen.lineWidth;\n  }\n\n  static setPenStyle(type: string, value: any) {\n    Pen[type] = value;\n    if (type === \"lineWidth\") {\n      Tool.canvas.freeDrawingBrush.width = value;\n    } else {\n      Tool.canvas.freeDrawingBrush.color = value;\n    }\n  }\n\n  public onMouseDown = (options: any) => {\n    const { e, pointer, absolutePointer } = options;\n    e.preventDefault();\n    if (Tool.toolType === \"PEN\") {\n      if (Tool.strawFlag) {\n        const show = {\n          x: absolutePointer.x * 2,\n          y: absolutePointer.y * 2,\n        };\n        setStrawColor(show);\n      } else {\n        this.init();\n      }\n    }\n  };\n}\n\nexport default Pen;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx",["134","135","136","137","138","139"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx",["140","141","142","143"],"import { useState, useEffect } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { toHexString } from \"../../tool/colorChange\";\nimport \"./index.less\";\nimport { getToolIcon } from \"../../pages/utils/tool\";\n//import Action from \"@/action\";\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\nimport { RootState, StrawState } from \"../../type\";\nimport { Tool } from \"@/tool\";\nimport { store } from \"../../Action\";\n\ninterface ColorProps {\n  color: string;\n  onChange: (color: string) => void;\n  //straw: StrawState;\n}\n\nconst ColorPicker = (props: ColorProps) => {\n  const { color, onChange } = props;\n  const [showColor, setColor] = useState(color);\n\n  const { straw } = useSelector((state: RootState) => {\n    return {\n      straw: state[\"paint.straw\"],\n    };\n  }, shallowEqual);\n\n  const handleChange = (color: any, event: any) => {\n    if (Tool.strawColor !== \"\") {\n      Tool.strawColor = \"\";\n    }\n    const hexColor: string = toHexString(color.rgb);\n    setColor(hexColor);\n    onChange(hexColor);\n  };\n\n  useEffect(() => {\n    setColor(straw.strawColor);\n  }, [straw.strawColor]);\n\n  useEffect(() => {\n    setColor(color);\n  }, [color]);\n\n  return (\n    <div className=\"colorBox\">\n      <h3>Color</h3>\n      <SketchPicker\n        className=\"colorBox-picker\"\n        width=\"100%\"\n        disableAlpha={false}\n        color={showColor}\n        onChange={handleChange}\n      />\n      <span\n        className={`straw-color ${straw.strawFlag ? \"selected-straw\" : \"\"}`}\n        onClick={() => {\n          Tool.strawFlag = true;\n          store.dispatch({\n            type: \"paint.straw\",\n            payload: { strawColor: color, strawFlag: true },\n          });\n          // Action.emit(\"paint.straw\", {\n          //   strawFlag: true,\n          // });\n        }}\n      >\n        {getToolIcon(\"strawIcon\")}\n      </span>\n    </div>\n  );\n};\nfunction mapStateToProps(state: RootState) {\n  return {\n    straw: state.paint.straw,\n  };\n}\n\n//export default connect(mapStateToProps)(ColorPicker);\n\nexport default ColorPicker;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/Action.tsx",[],{"ruleId":"144","severity":1,"message":"145","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":17},{"ruleId":"144","severity":1,"message":"148","line":11,"column":10,"nodeType":"146","messageId":"147","endLine":11,"endColumn":18},{"ruleId":"144","severity":1,"message":"149","line":154,"column":22,"nodeType":"146","messageId":"147","endLine":154,"endColumn":34},{"ruleId":"144","severity":1,"message":"150","line":157,"column":22,"nodeType":"146","messageId":"147","endLine":157,"endColumn":39},{"ruleId":"144","severity":1,"message":"150","line":161,"column":20,"nodeType":"146","messageId":"147","endLine":161,"endColumn":37},{"ruleId":"144","severity":1,"message":"150","line":165,"column":21,"nodeType":"146","messageId":"147","endLine":165,"endColumn":38},{"ruleId":"144","severity":1,"message":"150","line":167,"column":27,"nodeType":"146","messageId":"147","endLine":167,"endColumn":44},{"ruleId":"144","severity":1,"message":"150","line":170,"column":20,"nodeType":"146","messageId":"147","endLine":170,"endColumn":37},{"ruleId":"144","severity":1,"message":"150","line":172,"column":23,"nodeType":"146","messageId":"147","endLine":172,"endColumn":40},{"ruleId":"144","severity":1,"message":"150","line":176,"column":22,"nodeType":"146","messageId":"147","endLine":176,"endColumn":39},{"ruleId":"144","severity":1,"message":"150","line":180,"column":21,"nodeType":"146","messageId":"147","endLine":180,"endColumn":38},{"ruleId":"144","severity":1,"message":"150","line":184,"column":20,"nodeType":"146","messageId":"147","endLine":184,"endColumn":40},{"ruleId":"151","severity":1,"message":"152","line":22,"column":5,"nodeType":"153","messageId":"154","endLine":22,"endColumn":17,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"156","line":206,"column":13,"nodeType":"146","messageId":"147","endLine":206,"endColumn":22},{"ruleId":"144","severity":1,"message":"149","line":314,"column":27,"nodeType":"146","messageId":"147","endLine":314,"endColumn":39},{"ruleId":"144","severity":1,"message":"149","line":65,"column":21,"nodeType":"146","messageId":"147","endLine":65,"endColumn":33},{"ruleId":"144","severity":1,"message":"149","line":68,"column":27,"nodeType":"146","messageId":"147","endLine":68,"endColumn":39},{"ruleId":"144","severity":1,"message":"157","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":16},{"ruleId":"144","severity":1,"message":"158","line":183,"column":16,"nodeType":"146","messageId":"147","endLine":183,"endColumn":23},{"ruleId":"144","severity":1,"message":"159","line":14,"column":27,"nodeType":"146","messageId":"147","endLine":14,"endColumn":32},{"ruleId":"144","severity":1,"message":"160","line":3,"column":15,"nodeType":"146","messageId":"147","endLine":3,"endColumn":19},{"ruleId":"144","severity":1,"message":"158","line":32,"column":16,"nodeType":"146","messageId":"147","endLine":32,"endColumn":23},{"ruleId":"144","severity":1,"message":"161","line":8,"column":10,"nodeType":"146","messageId":"147","endLine":8,"endColumn":27},{"ruleId":"151","severity":1,"message":"152","line":78,"column":33,"nodeType":"153","messageId":"154","endLine":78,"endColumn":43,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"152","line":250,"column":23,"nodeType":"153","messageId":"154","endLine":250,"endColumn":36,"suggestions":"163"},{"ruleId":"144","severity":1,"message":"164","line":251,"column":31,"nodeType":"146","messageId":"147","endLine":251,"endColumn":37},{"ruleId":"151","severity":1,"message":"152","line":252,"column":37,"nodeType":"153","messageId":"154","endLine":252,"endColumn":47,"suggestions":"165"},{"ruleId":"151","severity":1,"message":"152","line":319,"column":7,"nodeType":"153","messageId":"154","endLine":319,"endColumn":14,"suggestions":"166"},{"ruleId":"144","severity":1,"message":"145","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":17},{"ruleId":"144","severity":1,"message":"167","line":8,"column":21,"nodeType":"146","messageId":"147","endLine":8,"endColumn":31},{"ruleId":"144","severity":1,"message":"150","line":28,"column":37,"nodeType":"146","messageId":"147","endLine":28,"endColumn":47},{"ruleId":"144","severity":1,"message":"168","line":73,"column":10,"nodeType":"146","messageId":"147","endLine":73,"endColumn":25},"@typescript-eslint/no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'options' is defined but never used.","'event' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["169"],"'shapeType' is assigned a value but never used.","'fabric' is defined but never used.","'pointer' is assigned a value but never used.","'color' is assigned a value but never used.","'Tool' is defined but never used.","'efficentFloodFill' is defined but never used.",["170"],["171"],"'deltaX' is assigned a value but never used.",["172"],["173"],"'StrawState' is defined but never used.","'mapStateToProps' is defined but never used.",{"messageId":"174","fix":"175","desc":"176"},{"messageId":"174","fix":"177","desc":"176"},{"messageId":"174","fix":"178","desc":"176"},{"messageId":"174","fix":"179","desc":"176"},{"messageId":"174","fix":"180","desc":"176"},"suggestOptionalChain",{"range":"181","text":"182"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"183","text":"182"},{"range":"184","text":"182"},{"range":"185","text":"182"},{"range":"186","text":"182"},[586,587],"?",[2441,2442],[7305,7306],[7426,7427],[9259,9260]]