[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/CCCPaint.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/util/toolType.ts":"3","/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts":"4","/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/index.ts":"5","/Users/jinmingliu/work/ccc-react-paint/src/canvas/index.tsx":"6","/Users/jinmingliu/work/ccc-react-paint/src/left-tool/index.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/right/index.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/edit/index.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/event.ts":"10","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/shape.ts":"11","/Users/jinmingliu/work/ccc-react-paint/src/left-tool/util.tsx":"12","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/tool.ts":"13","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/index.ts":"14","/Users/jinmingliu/work/ccc-react-paint/src/util/snapshot/index.ts":"15","/Users/jinmingliu/work/ccc-react-paint/src/right/showShape/index.tsx":"16","/Users/jinmingliu/work/ccc-react-paint/src/right/pen/index.tsx":"17","/Users/jinmingliu/work/ccc-react-paint/src/right/formatColor/index.tsx":"18","/Users/jinmingliu/work/ccc-react-paint/src/right/earser/index.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/right/text/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/pen.ts":"21","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/eraser.ts":"22","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorFill.ts":"23","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorExtract.ts":"24","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/Text.ts":"25","/Users/jinmingliu/work/ccc-react-paint/src/right/components/colorPanel/index.tsx":"26","/Users/jinmingliu/work/ccc-react-paint/src/right/components/shape/index.tsx":"27","/Users/jinmingliu/work/ccc-react-paint/src/right/components/slider/index.tsx":"28","/Users/jinmingliu/work/ccc-react-paint/src/utils.tsx":"29"},{"size":161,"mtime":1655091758625,"results":"30","hashOfConfig":"31"},{"size":5560,"mtime":1655792357195,"results":"32","hashOfConfig":"31"},{"size":918,"mtime":1655088099573,"results":"33","hashOfConfig":"31"},{"size":1418,"mtime":1655091862026,"results":"34","hashOfConfig":"31"},{"size":2010,"mtime":1654736372870,"results":"35","hashOfConfig":"31"},{"size":13197,"mtime":1655875197942,"results":"36","hashOfConfig":"31"},{"size":3144,"mtime":1655357723767,"results":"37","hashOfConfig":"31"},{"size":1113,"mtime":1655274671520,"results":"38","hashOfConfig":"31"},{"size":1631,"mtime":1655792417588,"results":"39","hashOfConfig":"31"},{"size":136,"mtime":1655087991761,"results":"40","hashOfConfig":"31"},{"size":8172,"mtime":1654736372871,"results":"41","hashOfConfig":"31"},{"size":10537,"mtime":1655274671518,"results":"42","hashOfConfig":"31"},{"size":5075,"mtime":1655875208108,"results":"43","hashOfConfig":"31"},{"size":247,"mtime":1654748643953,"results":"44","hashOfConfig":"31"},{"size":988,"mtime":1655875211750,"results":"45","hashOfConfig":"31"},{"size":512,"mtime":1655358397568,"results":"46","hashOfConfig":"31"},{"size":854,"mtime":1655358552230,"results":"47","hashOfConfig":"31"},{"size":1126,"mtime":1655358631165,"results":"48","hashOfConfig":"31"},{"size":729,"mtime":1655358536351,"results":"49","hashOfConfig":"31"},{"size":3359,"mtime":1655798508644,"results":"50","hashOfConfig":"31"},{"size":2809,"mtime":1655789369149,"results":"51","hashOfConfig":"31"},{"size":2869,"mtime":1655792449648,"results":"52","hashOfConfig":"31"},{"size":3632,"mtime":1655859932254,"results":"53","hashOfConfig":"31"},{"size":1008,"mtime":1654736372870,"results":"54","hashOfConfig":"31"},{"size":2705,"mtime":1655875202495,"results":"55","hashOfConfig":"31"},{"size":1831,"mtime":1655358580181,"results":"56","hashOfConfig":"31"},{"size":3780,"mtime":1655358336768,"results":"57","hashOfConfig":"31"},{"size":837,"mtime":1655274671520,"results":"58","hashOfConfig":"31"},{"size":1159,"mtime":1655274671522,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"yx3ph1",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/CCCPaint.tsx",["125","126","127","128"],"import React, { Ref, useEffect, useImperativeHandle } from \"react\";\nimport Canvas from \"./canvas\";\nimport {\n  ToolTypeContext,\n  ShapeTypeContext,\n  ShapeOutlineContext,\n  LineWidthContext,\n  ColorContext,\n  FillContext,\n  TextContext,\n  SizeContext,\n  DispatcherContext,\n} from \"./context\";\nimport \"./style.less\";\nimport { useState } from \"react\";\nimport {\n  ColorType,\n  LineWidthType,\n  ShapeOutlineType,\n  ShapeToolType,\n  ToolType,\n} from \"./util/toolType\";\nimport ToolPanel from \"./left-tool\";\nimport Dispatcher from \"./util/dispatcher\";\nimport Right from \"./right\";\nimport Edit from \"./edit\";\nimport { getImageSize } from \"./utils\";\n\ninterface PaintProps {\n  imgSrc?: string;\n  width?: number;\n  height?: number;\n  background?: string;\n  id?: string;\n  cRef?: any;\n}\n\nfunction Paint(props: PaintProps): JSX.Element {\n  const {\n    id = \"test\",\n    imgSrc = \"https://bafybeib43atlw6hxffw7xysnhtznpiey2cqln2akufhixfsequpnfjf5dq.ipfs.dweb.link/orign.png\",\n    width = 500,\n    height = 500,\n    background,\n    cRef,\n  } = props;\n\n  const [toolType, setToolType] = useState<ToolType>(ToolType.PEN);\n  const [shapeType, setShapeType] = useState<ShapeToolType>(ShapeToolType.LINE);\n  const [shapeOutlineType, setShapeOutlineType] = useState<ShapeOutlineType>(\n    ShapeOutlineType.SOLID\n  );\n  const [lineWidthType, setLineWidthType] = useState<LineWidthType>(\n    LineWidthType.LINESIZE\n  );\n  const [lineSize, setLineFontSize] = useState<number>(5);\n  const [fillColor, setFillColor] = useState<string>(\"\");\n  const [activeColorType, setActiveColorType] = useState<ColorType>(\n    ColorType.MAIN\n  );\n  const [fontStyle, setFontStyle] = useState({});\n  const [mainColor, setMainColor] = useState<string>(\"black\");\n  const [subColor, setSubColor] = useState<string>(\"white\");\n  const [dispatcher] = useState(new Dispatcher());\n\n  const setColor = (value: string) => {\n    if (activeColorType === ColorType.MAIN) {\n      setMainColor(value);\n    } else {\n      setSubColor(value);\n    }\n  };\n\n  useImperativeHandle(cRef, () => ({\n    getCurrentImageData: () => {\n      const canvasElem: any = document.getElementById(`ccc-paint-canvas ${id}`);\n      const imageData = canvasElem.toDataURL(\"image/png\");\n      return imageData;\n    },\n  }));\n\n  return (\n    <ToolTypeContext.Provider\n      value={{\n        type: toolType,\n        setType: (value) => {\n          setToolType(value);\n          setLineFontSize(5);\n        },\n      }}\n    >\n      <ShapeTypeContext.Provider\n        value={{\n          type: shapeType,\n          setType: (type: ShapeToolType) => {\n            setShapeType(type);\n          },\n        }}\n      >\n        <ShapeOutlineContext.Provider\n          value={{ type: shapeOutlineType, setType: setShapeOutlineType }}\n        >\n          <LineWidthContext.Provider\n            value={{\n              type: lineWidthType,\n              lineSize: lineSize,\n              setType: setLineWidthType,\n              setLineSize: setLineFontSize,\n            }}\n          >\n            <DispatcherContext.Provider value={{ dispatcher }}>\n              <ColorContext.Provider\n                value={{\n                  mainColor,\n                  subColor,\n                  activeColor: activeColorType,\n                  setColor,\n                  setActiveColor: setActiveColorType,\n                }}\n              >\n                <FillContext.Provider\n                  value={{\n                    fillColor,\n                    setFillColor,\n                  }}\n                >\n                  <TextContext.Provider\n                    value={{\n                      fontStyle,\n                      setFont: setFontStyle,\n                    }}\n                  >\n                    <div className=\"ccc\">\n                      <div className=\"ccc-edit\">\n                        <Edit />\n                      </div>\n                      <div className=\"ccc-content\">\n                        <div className=\"ToolPanel\">\n                          <ToolPanel\n                            className=\"toolbar-item\"\n                            fillColor={fillColor}\n                          />\n                        </div>\n                        <div className=\"show-Canvas\">\n                          <Canvas\n                            id={id}\n                            CanvasSize={{ width, height }}\n                            imgSrc={imgSrc}\n                            background={background}\n                            fillColor={fillColor}\n                            toolType={toolType}\n                            fontStyle={fontStyle}\n                            shapeType={shapeType}\n                            shapeOutlineType={shapeOutlineType}\n                            mainColor={mainColor}\n                            subColor={subColor}\n                            lineSize={lineSize}\n                            lineWidthType={lineWidthType}\n                            setColor={setColor}\n                          />\n                        </div>\n                        <div className=\"show-type\">\n                          <Right toolType={toolType} lineSize={lineSize} />\n                        </div>\n                      </div>\n                    </div>\n                  </TextContext.Provider>\n                </FillContext.Provider>\n              </ColorContext.Provider>\n            </DispatcherContext.Provider>\n          </LineWidthContext.Provider>\n        </ShapeOutlineContext.Provider>\n      </ShapeTypeContext.Provider>\n    </ToolTypeContext.Provider>\n  );\n}\n\nexport default Paint;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/toolType.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/context/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/canvas/index.tsx",["129","130","131","132","133","134","135","136","137","138","139","140"],"/Users/jinmingliu/work/ccc-react-paint/src/left-tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/edit/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/dispatcher/event.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/shape.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/left-tool/util.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/tool.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/snapshot/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/showShape/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/pen/index.tsx",["141"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport ColorPanel from \"../components/colorPanel\";\nimport \"./index.less\";\n\ninterface PenType {\n  lineSize: number;\n}\n\nconst ShowPen = (props: PenType) => {\n  const lineWidthContext = useContext(LineWidthContext);\n\n  const { lineSize } = props;\n\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Brush Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n      <ColorPanel type=\"pen\" className=\"toolbar-item\" title=\"Color Panel\" />\n    </div>\n  );\n};\n\nexport default ShowPen;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/formatColor/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/earser/index.tsx",["142"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport \"./index.less\";\n\ninterface earserType {\n  lineSize: number;\n}\n\nconst Eraser = (props: earserType) => {\n  const { lineSize } = props;\n  const lineWidthContext = useContext(LineWidthContext);\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Eraser Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/text/index.tsx",["143"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { TextContext, ColorContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Select } from \"antd\";\nimport IntegerStep from \"../components/slider\";\nimport { useMemo } from \"react\";\n\nconst { Option } = Select;\n\ninterface FormatColor {\n  className?: string;\n}\n\nconst textFamily = [\n  \"Barlow-ExtraBold\",\n  \"DIN-AlternateBold\",\n  \"Trebuchet-MSBold\",\n  \"Trebuchet-MS\",\n  \"Poppins-Bold\",\n  \"Poppins-Light\",\n  \"Poppins-Medium\",\n  \"Poppins-Regular\",\n  \"Poppins-SemiBold\",\n];\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const TextToolContext = useContext(TextContext);\n  const colorContext = useContext(ColorContext);\n\n  const fontStyle = useMemo(() => {\n    return TextToolContext.fontStyle;\n  }, [TextToolContext.fontStyle]);\n\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div\n      className={\n        className ? ` ccc-text formatColor ${className}` : \"ccc-text colorpanel\"\n      }\n    >\n      <div className=\"content\">\n        <div className=\"font\">\n          <h3>Font</h3>\n          <Select\n            className=\"ccc-text-family\"\n            onChange={(value: string) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontFamily: value,\n              });\n            }}\n          >\n            {textFamily.map((va) => {\n              return (\n                <Option key={va} value={va}>\n                  {va}\n                </Option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"font\">\n          <h3>Letter Spacing</h3>\n          <IntegerStep\n            min={1}\n            max={8}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                letterSpacing: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Font Size</h3>\n          <IntegerStep\n            min={12}\n            max={72}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontSize: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Line Height</h3>\n          <IntegerStep\n            min={24}\n            max={56}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                lineHeight: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n              TextToolContext.setFont({\n                ...fontStyle,\n                color: \"#\" + color.hex,\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/pen.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/eraser.ts",["144"],"import { ColorType } from \"../toolType\";\nimport Tool, { Point, getMousePos, getPixelColorOnCanvas, getTouchPos, hexToRgb, updateImageData } from \"./tool\";\nclass Eraser extends Tool {\n  protected lineWidthBase = 1;\n  private mouseDown = false;\n  private color = \"transparent\";\n  private saveImageData?: ImageData;\n  private previousPos: Point = {\n    x: 0,\n    y: 0\n  };\n  public constructor(lineSize:number) {\n    super();\n    this.lineWidthBase = lineSize;\n    this.color = \"transparent\";\n  }\n  private operateStart(pos: Point) {\n    if (!Tool.ctx) return;\n    this.saveImageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n    this.mouseDown = true;\n    this.color = getPixelColorOnCanvas(Tool.ctx, pos.x - 2, pos.y - 2);\n    Tool.ctx.lineWidth = 3 * this.lineWidthBase;\n    Tool.ctx.strokeStyle = this.color;\n    Tool.ctx.lineJoin = \"round\";\n    Tool.ctx.lineCap = \"round\";\n    Tool.ctx.beginPath();\n    this.previousPos = pos;\n  }\n  private operateMove(pos: Point) {\n    if (this.mouseDown) {\n      Tool.ctx.moveTo(this.previousPos.x, this.previousPos.y);\n      const c = 0.5 * (this.previousPos.x + pos.x);\n      const d = 0.5 * (this.previousPos.y + pos.y);\n      Tool.ctx.quadraticCurveTo(c, d, pos.x, pos.y);\n      Tool.ctx.stroke();\n      this.previousPos = pos;\n    }\n  }\n  private operateEnd() {\n    if (this.mouseDown) {\n      Tool.ctx.closePath();\n      this.mouseDown = false;\n      let imageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n      const colorRgb = hexToRgb(this.color);\n      if (colorRgb && this.saveImageData) {\n        imageData = updateImageData(this.saveImageData, imageData, [colorRgb.r, colorRgb.g, colorRgb.b, colorRgb.a]);\n\n        Tool.ctx.putImageData(imageData, 0, 0);\n      }\n    }\n  }\n  public onMouseDown(event: MouseEvent): void {\n    event.preventDefault();\n\n    const mousePos = getMousePos(Tool.ctx.canvas, event,'eraser');\n\n    this.operateStart(mousePos);\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    event.preventDefault();\n    this.operateEnd();\n  }\n\n  public onMouseMove(event: MouseEvent): void {\n    event.preventDefault();\n    const mousePos = getMousePos(Tool.ctx.canvas, event);\n    this.operateMove(mousePos);\n  }\n\n  public onTouchStart(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n    this.operateStart(touchPos);\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n    this.operateMove(touchPos);\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    this.operateEnd();\n  }\n}\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorFill.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/colorExtract.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/util/tool/Text.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/components/colorPanel/index.tsx",["145","146","147","148"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { ColorContext } from \"@/context\";\nimport { ColorType } from \"../../../util/toolType\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getRandomColor } from \"../../../utils\";\n\ninterface ColorPanelProps {\n  className?: string;\n  title?: string;\n  type?: string;\n}\n\nconst activeColorTypeCls = \"active-color-type\";\n\nconst ColorPanel: React.FC<ColorPanelProps> = (props) => {\n  const { className, title, type } = props;\n\n  const [pickerColor, setPickerColor] = useState(\n    createColor(type && type === \"pen\" ? getRandomColor() : \"#000000FF\")\n  );\n  const colorContext = useContext(ColorContext);\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div className={className ? `colorpanel ${className}` : \"colorpanel\"}>\n      <div className=\"content\">\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n            }}\n          />\n        </div>\n        {/* {title && (\n          <div className=\"color-result\">\n            <div\n              onClick={() => colorContext.setActiveColor(ColorType.MAIN)}\n              className={activeColorType === ColorType.MAIN ? `main-color ${activeColorTypeCls}` : \"main-color\"}\n            >\n              <div className=\"color-box1\" style={{ backgroundColor: colorContext.mainColor }} />\n              <div>{title}</div>\n            </div>\n          </div>\n        )} */}\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPanel;\n","/Users/jinmingliu/work/ccc-react-paint/src/right/components/shape/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/right/components/slider/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/utils.tsx",[],{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":20},{"ruleId":"149","severity":1,"message":"153","line":1,"column":22,"nodeType":"151","messageId":"152","endLine":1,"endColumn":31},{"ruleId":"149","severity":1,"message":"154","line":11,"column":3,"nodeType":"151","messageId":"152","endLine":11,"endColumn":14},{"ruleId":"149","severity":1,"message":"155","line":27,"column":10,"nodeType":"151","messageId":"152","endLine":27,"endColumn":22},{"ruleId":"149","severity":1,"message":"156","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"149","severity":1,"message":"157","line":73,"column":10,"nodeType":"151","messageId":"152","endLine":73,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":73,"column":17,"nodeType":"151","messageId":"152","endLine":73,"endColumn":25},{"ruleId":"149","severity":1,"message":"159","line":74,"column":10,"nodeType":"151","messageId":"152","endLine":74,"endColumn":16},{"ruleId":"149","severity":1,"message":"160","line":74,"column":18,"nodeType":"151","messageId":"152","endLine":74,"endColumn":27},{"ruleId":"161","severity":1,"message":"162","line":213,"column":23,"nodeType":"163","messageId":"164","endLine":213,"endColumn":36,"suggestions":"165"},{"ruleId":"149","severity":1,"message":"166","line":219,"column":13,"nodeType":"151","messageId":"152","endLine":219,"endColumn":24},{"ruleId":"161","severity":1,"message":"162","line":235,"column":23,"nodeType":"163","messageId":"164","endLine":235,"endColumn":36,"suggestions":"167"},{"ruleId":"161","severity":1,"message":"162","line":239,"column":21,"nodeType":"163","messageId":"164","endLine":239,"endColumn":31,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"162","line":241,"column":22,"nodeType":"163","messageId":"164","endLine":241,"endColumn":32,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"170","line":254,"column":11,"nodeType":"151","messageId":"152","endLine":254,"endColumn":18},{"ruleId":"149","severity":1,"message":"159","line":327,"column":11,"nodeType":"151","messageId":"152","endLine":327,"endColumn":17},{"ruleId":"149","severity":1,"message":"171","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"171","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"172","line":40,"column":9,"nodeType":"151","messageId":"152","endLine":40,"endColumn":24},{"ruleId":"149","severity":1,"message":"173","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":19},{"ruleId":"149","severity":1,"message":"173","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"149","severity":1,"message":"174","line":17,"column":7,"nodeType":"151","messageId":"152","endLine":17,"endColumn":25},{"ruleId":"149","severity":1,"message":"175","line":20,"column":22,"nodeType":"151","messageId":"152","endLine":20,"endColumn":27},{"ruleId":"149","severity":1,"message":"172","line":26,"column":9,"nodeType":"151","messageId":"152","endLine":26,"endColumn":24},"@typescript-eslint/no-unused-vars","'Ref' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'SizeContext' is defined but never used.","'getImageSize' is defined but never used.","'useMemo' is defined but never used.","'scale' is assigned a value but never used.","'setScale' is assigned a value but never used.","'offset' is assigned a value but never used.","'setOffset' is assigned a value but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["176"],"'styleCanvas' is assigned a value but never used.",["177"],["178"],["179"],"'imgSize' is assigned a value but never used.","'FC' is defined but never used.","'activeColorType' is assigned a value but never used.","'ColorType' is defined but never used.","'activeColorTypeCls' is assigned a value but never used.","'title' is assigned a value but never used.",{"messageId":"180","fix":"181","desc":"182"},{"messageId":"180","fix":"183","desc":"182"},{"messageId":"180","fix":"184","desc":"182"},{"messageId":"180","fix":"185","desc":"182"},"suggestOptionalChain",{"range":"186","text":"187"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"188","text":"187"},{"range":"189","text":"187"},{"range":"190","text":"187"},[5560,5561],"?",[6327,6328],[6453,6454],[6523,6524]]