[{"/Users/ming/code-work/ccc-react-paint/src/index.tsx":"1","/Users/ming/code-work/ccc-react-paint/src/CCCPaint.tsx":"2","/Users/ming/code-work/ccc-react-paint/src/util/toolType.ts":"3","/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/index.ts":"4","/Users/ming/code-work/ccc-react-paint/src/context/index.ts":"5","/Users/ming/code-work/ccc-react-paint/src/util/tool/shape.ts":"6","/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/event.ts":"7","/Users/ming/code-work/ccc-react-paint/src/util/tool/tool.ts":"8","/Users/ming/code-work/ccc-react-paint/src/util/tool/index.ts":"9","/Users/ming/code-work/ccc-react-paint/src/util/snapshot/index.ts":"10","/Users/ming/code-work/ccc-react-paint/src/util/tool/pen.ts":"11","/Users/ming/code-work/ccc-react-paint/src/util/tool/colorExtract.ts":"12","/Users/ming/code-work/ccc-react-paint/src/util/tool/eraser.ts":"13","/Users/ming/code-work/ccc-react-paint/src/util/tool/Text.ts":"14","/Users/ming/code-work/ccc-react-paint/src/util/tool/colorFill.ts":"15","/Users/ming/code-work/ccc-react-paint/src/utils.tsx":"16","/Users/ming/code-work/ccc-react-paint/src/right/index.tsx":"17","/Users/ming/code-work/ccc-react-paint/src/left-tool/index.tsx":"18","/Users/ming/code-work/ccc-react-paint/src/canvas/index.tsx":"19","/Users/ming/code-work/ccc-react-paint/src/edit/index.tsx":"20","/Users/ming/code-work/ccc-react-paint/src/edit/Resize.tsx":"21","/Users/ming/code-work/ccc-react-paint/src/right/showShape/index.tsx":"22","/Users/ming/code-work/ccc-react-paint/src/right/pen/index.tsx":"23","/Users/ming/code-work/ccc-react-paint/src/right/text/index.tsx":"24","/Users/ming/code-work/ccc-react-paint/src/right/formatColor/index.tsx":"25","/Users/ming/code-work/ccc-react-paint/src/right/components/colorPanel/index.tsx":"26","/Users/ming/code-work/ccc-react-paint/src/right/components/shape/index.tsx":"27","/Users/ming/code-work/ccc-react-paint/src/right/components/slider/index.tsx":"28","/Users/ming/code-work/ccc-react-paint/src/right/earser/index.tsx":"29","/Users/ming/code-work/ccc-react-paint/src/ToolTypeIcon.tsx":"30"},{"size":161,"mtime":1655202573949,"results":"31","hashOfConfig":"32"},{"size":6096,"mtime":1655992471450,"results":"33","hashOfConfig":"32"},{"size":918,"mtime":1655099997921,"results":"34","hashOfConfig":"32"},{"size":2010,"mtime":1654835133986,"results":"35","hashOfConfig":"32"},{"size":1490,"mtime":1655984366486,"results":"36","hashOfConfig":"32"},{"size":8213,"mtime":1655984366497,"results":"37","hashOfConfig":"32"},{"size":136,"mtime":1655092109303,"results":"38","hashOfConfig":"32"},{"size":5453,"mtime":1655984366498,"results":"39","hashOfConfig":"32"},{"size":247,"mtime":1654835133987,"results":"40","hashOfConfig":"32"},{"size":988,"mtime":1655984366488,"results":"41","hashOfConfig":"32"},{"size":2932,"mtime":1655988821841,"results":"42","hashOfConfig":"32"},{"size":1045,"mtime":1655984366489,"results":"43","hashOfConfig":"32"},{"size":2869,"mtime":1655984366490,"results":"44","hashOfConfig":"32"},{"size":2782,"mtime":1656025977142,"results":"45","hashOfConfig":"32"},{"size":3678,"mtime":1655984366490,"results":"46","hashOfConfig":"32"},{"size":1159,"mtime":1655269643266,"results":"47","hashOfConfig":"32"},{"size":1113,"mtime":1655271906587,"results":"48","hashOfConfig":"32"},{"size":3164,"mtime":1655984366487,"results":"49","hashOfConfig":"32"},{"size":16224,"mtime":1656026596292,"results":"50","hashOfConfig":"32"},{"size":1629,"mtime":1655984366487,"results":"51","hashOfConfig":"32"},{"size":2397,"mtime":1655816342911,"results":"52","hashOfConfig":"32"},{"size":512,"mtime":1655816342917,"results":"53","hashOfConfig":"32"},{"size":874,"mtime":1655984366487,"results":"54","hashOfConfig":"32"},{"size":3328,"mtime":1655984366487,"results":"55","hashOfConfig":"32"},{"size":1078,"mtime":1655984366487,"results":"56","hashOfConfig":"32"},{"size":2662,"mtime":1655984366487,"results":"57","hashOfConfig":"32"},{"size":3780,"mtime":1655816342915,"results":"58","hashOfConfig":"32"},{"size":837,"mtime":1655271643312,"results":"59","hashOfConfig":"32"},{"size":729,"mtime":1655816342915,"results":"60","hashOfConfig":"32"},{"size":13540,"mtime":1655984366485,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1tiwiaa",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/ming/code-work/ccc-react-paint/src/index.tsx",[],[],"/Users/ming/code-work/ccc-react-paint/src/CCCPaint.tsx",["130","131"],"/Users/ming/code-work/ccc-react-paint/src/util/toolType.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/context/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/shape.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/event.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/tool.ts",["132"],"/* eslint-disable @typescript-eslint/no-unused-vars */\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n\n// 吸色功能\nexport const setStraw = (pos?: Point) => {\n  if (Tool.strawFlag && pos) {\n    // 吸色\n    const color = getPixelColorOnCanvas(Tool.ctx, pos.x, pos!.y);\n    Tool.strawColor = color;\n    Tool.strawFlag = false;\n  } \n \n};\n\n\nexport const getMousePos = (canvas: HTMLCanvasElement, event: MouseEvent, type?: string): Point => {\n  const rect = canvas.getBoundingClientRect();\n  const scale = Tool.currentScale || 1\n//  if (type) { \n//       return {\n//           x: (event.clientX - rect.left),\n//           y: (event.clientY - rect.top)\n//         };\n//   }\n  return {\n    x: (event.clientX - rect.left)/scale,\n    y: (event.clientY - rect.top)/scale\n  };\n};\n\nexport const getTouchPos = (canvas: HTMLCanvasElement, event: TouchEvent): Point => {\n  return {\n    x: event.touches[0].pageX - canvas.offsetLeft,\n    y: event.touches[0].pageY - canvas.offsetTop\n  };\n};\n\nexport const rgbToHex = (r: number, g: number, b: number, a?: number) => {\n  const componentToHex = (c: number) => {\n    const hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  };\n\n  const res = \"#\" + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\n  return a ? res + componentToHex(a) : res;\n};\n\nexport const hexToRgb = (hex: string) => {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n        a: parseInt(result[4], 16)\n      }\n    : null;\n};\n\nexport const getPixelColorOnCanvas = (ctx: CanvasRenderingContext2D, x: number, y: number): string => {\n  const p = ctx.getImageData(x, y, 1, 1).data;\n\n  return rgbToHex(p[0], p[1], p[2], p[3]);\n};\n\nexport const updateImageData = (origin: ImageData, data: ImageData, fillData: [number, number, number, number]) => {\n  for (let row = 0; row < data.height; row++) {\n    for (let col = 0; col < data.width; col++) {\n      const index = row * data.width * 4 + col * 4;\n      const r1 = data.data[index];\n      const g1 = data.data[index + 1];\n      const b1 = data.data[index + 2];\n      const a1 = data.data[index + 3];\n\n      const r2 = origin.data[index];\n      const g2 = origin.data[index + 1];\n      const b2 = origin.data[index + 2];\n      const a2 = origin.data[index + 3];\n\n      const equalOrigin = r1 === r2 && g1 === g2 && b1 === b2 && a1 === a2;\n      const equalFilling = r1 === fillData[0] && g1 === fillData[1] && b1 === fillData[2] && a1 === fillData[3];\n      if (!(equalOrigin || equalFilling)) {\n        data.data[index] = fillData[0];\n        data.data[index + 1] = fillData[1];\n        data.data[index + 2] = fillData[2];\n        data.data[index + 3] = fillData[3];\n      }\n    }\n  }\n\n  return data;\n};\n\nexport default class Tool {\n  /**\n   * 线宽\n   */\n  public static lineWidthFactor = 1;\n  /**\n   * 主色\n   */\n  public static fillColormainColor = \"black\";\n  /**\n   * 副色\n   */\n  public static subColor = \"white\";\n\n  // 吸色\n  public static strawColor ='';\n\n  // 背景色\n  public static fillColor = \"#2d2d2d\";\n\n  public static zoom = {\n    scaleX:1,\n    scaleY:1\n  }\n  public currentScale = 1\n\n  public strawFlag = false\n\n  public static ctx: CanvasRenderingContext2D;\n\n  static currentScale: number;\n  static show_offset: any;\n  static strawFlag: boolean;\n  static mainColor: string;\n\n  public onMouseDown(event: MouseEvent): void {\n    //\n  }\n\n  public onMouseMove(event: MouseEvent): void {\n    //\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    //\n  }\n\n  public onTouchStart(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    //\n  }\n  // public onMouseWheel(event: any): void {\n  //   const { wheelDelta } = event\n  //   console.log('event--deltaMode-4', event, event.wheelDelta)\n  //   if (wheelDelta > 0) {  // 放大\n  //     if (Tool.currentScale < 20) {  // 缩放值小于设定的最大值，则可以继续放大\n  //       Tool.currentScale += 1;  // 累加后 this.scale 为放大后的缩放值\n  //       if (Tool.currentScale > 20) {  // 越界处理\n  //         Tool.currentScale = 20;\n  //       }\n  //       Tool.ctx.scale(Tool.currentScale,Tool.currentScale);  // 进行缩放\n  //       // 要根据鼠标位置缩放，则要在缩放后再次移动，将缩放点的位置移动到鼠标位置\n  //       const x = event.offsetX;\n  //       const y = event.offsetY;\n  //       Tool.show_offset.x = (x -Tool.show_offset.x) * Tool.currentScale / (Tool.currentScale - 1) - (x - Tool.show_offset.x);\n  //       Tool.show_offset.y = (y - Tool.show_offset.y) * Tool.currentScale / (Tool.currentScale - 1) - (y - Tool.show_offset.y);\n  //       console.log('==4', Tool.show_offset.x)\n  //       console.log('==4', Tool.show_offset.y)\n\n  //       // move(-Tool.show_offset.x, -Tool.show_offset.y);\n  //     }\n\n  //   }\n  // }\n      //  public move = (e) => {\n      //       const x = e.offsetX - Tool.show_offset.x;  // 鼠标位置换算到相对原点的坐标\n      //       const y = e.offsetY - Tool.show_offset.y;\n      //       const offsetX = x * (this.scale - preScale) / preScale;  // x * 绝对缩放率 得到位移\n      //       const offsetY = y * (this.scale - preScale) / preScale;\n      //       this.move(-offsetX, -offsetY);\n      //   };\n\n \n}\n","/Users/ming/code-work/ccc-react-paint/src/util/tool/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/snapshot/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/pen.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/colorExtract.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/eraser.ts",["133"],"import { ColorType } from \"../toolType\";\nimport Tool, { Point, getMousePos, getPixelColorOnCanvas, getTouchPos, hexToRgb, updateImageData } from \"./tool\";\nclass Eraser extends Tool {\n  protected lineWidthBase = 1;\n  private mouseDown = false;\n  private color = \"transparent\";\n  private saveImageData?: ImageData;\n  private previousPos: Point = {\n    x: 0,\n    y: 0\n  };\n  public constructor(lineSize:number) {\n    super();\n    this.lineWidthBase = lineSize;\n    this.color = \"transparent\";\n  }\n  private operateStart(pos: Point) {\n    if (!Tool.ctx) return;\n    this.saveImageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n    this.mouseDown = true;\n    this.color = getPixelColorOnCanvas(Tool.ctx, pos.x - 2, pos.y - 2);\n    Tool.ctx.lineWidth = 3 * this.lineWidthBase;\n    Tool.ctx.strokeStyle = this.color;\n    Tool.ctx.lineJoin = \"round\";\n    Tool.ctx.lineCap = \"round\";\n    Tool.ctx.beginPath();\n    this.previousPos = pos;\n  }\n  private operateMove(pos: Point) {\n    if (this.mouseDown) {\n      Tool.ctx.moveTo(this.previousPos.x, this.previousPos.y);\n      const c = 0.5 * (this.previousPos.x + pos.x);\n      const d = 0.5 * (this.previousPos.y + pos.y);\n      Tool.ctx.quadraticCurveTo(c, d, pos.x, pos.y);\n      Tool.ctx.stroke();\n      this.previousPos = pos;\n    }\n  }\n  private operateEnd() {\n    if (this.mouseDown) {\n      Tool.ctx.closePath();\n      this.mouseDown = false;\n      let imageData = Tool.ctx.getImageData(0, 0, Tool.ctx.canvas.width, Tool.ctx.canvas.height);\n      const colorRgb = hexToRgb(this.color);\n      if (colorRgb && this.saveImageData) {\n        imageData = updateImageData(this.saveImageData, imageData, [colorRgb.r, colorRgb.g, colorRgb.b, colorRgb.a]);\n\n        Tool.ctx.putImageData(imageData, 0, 0);\n      }\n    }\n  }\n  public onMouseDown(event: MouseEvent): void {\n    event.preventDefault();\n\n    const mousePos = getMousePos(Tool.ctx.canvas, event,'eraser');\n\n    this.operateStart(mousePos);\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    event.preventDefault();\n    this.operateEnd();\n  }\n\n  public onMouseMove(event: MouseEvent): void {\n    event.preventDefault();\n    const mousePos = getMousePos(Tool.ctx.canvas, event);\n    this.operateMove(mousePos);\n  }\n\n  public onTouchStart(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n    this.operateStart(touchPos);\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    const touchPos = getTouchPos(event.target as HTMLCanvasElement, event);\n    this.operateMove(touchPos);\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n    this.operateEnd();\n  }\n}\n\nexport default Eraser;\n","/Users/ming/code-work/ccc-react-paint/src/util/tool/Text.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/colorFill.ts",[],"/Users/ming/code-work/ccc-react-paint/src/utils.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/right/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/left-tool/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/canvas/index.tsx",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"/Users/ming/code-work/ccc-react-paint/src/edit/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/edit/Resize.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/right/showShape/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/right/pen/index.tsx",["159","160"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport ColorPanel from \"../components/colorPanel\";\nimport \"./index.less\";\nimport { Tool } from \"../../util/tool\";\n\ninterface PenType {\n  lineSize: number;\n}\n\nconst ShowPen = (props: PenType) => {\n  const lineWidthContext = useContext(LineWidthContext);\n\n  const { lineSize } = props;\n\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Brush Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n      <ColorPanel type=\"pen\" className=\"toolbar-item\" />\n    </div>\n  );\n};\n\nexport default ShowPen;\n","/Users/ming/code-work/ccc-react-paint/src/right/text/index.tsx",["161","162","163"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { TextContext, ColorContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Select } from \"antd\";\nimport IntegerStep from \"../components/slider\";\nimport ColorPanel from \"../components/colorPanel\";\nimport { useMemo } from \"react\";\n\nconst { Option } = Select;\n\ninterface FormatColor {\n  className?: string;\n}\n\nconst textFamily = [\n  \"Barlow-ExtraBold\",\n  \"DIN-AlternateBold\",\n  \"Trebuchet-MSBold\",\n  \"Trebuchet-MS\",\n  \"Poppins-Bold\",\n  \"Poppins-Light\",\n  \"Poppins-Medium\",\n  \"Poppins-Regular\",\n  \"Poppins-SemiBold\",\n];\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const TextToolContext = useContext(TextContext);\n  const colorContext = useContext(ColorContext);\n\n  const fontStyle = useMemo(() => {\n    return TextToolContext.fontStyle;\n  }, [TextToolContext.fontStyle]);\n\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div\n      className={\n        className ? `ccc-text formatColor ${className}` : \"ccc-text colorpanel\"\n      }\n    >\n      <div className=\"content\">\n        <div>\n          <h3>Font</h3>\n          <Select\n            className=\"ccc-text-family\"\n            onChange={(value: string) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontFamily: value,\n              });\n            }}\n          >\n            {textFamily.map((va) => {\n              return (\n                <Option key={va} value={va}>\n                  {va}\n                </Option>\n              );\n            })}\n          </Select>\n        </div>\n        <div className=\"font\">\n          <h3>Letter Spacing</h3>\n          <IntegerStep\n            min={1}\n            max={8}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                letterSpacing: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Font Size</h3>\n          <IntegerStep\n            min={12}\n            max={72}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontSize: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Line Height</h3>\n          <IntegerStep\n            min={24}\n            max={56}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                lineHeight: value + \"px\",\n              });\n            }}\n          />\n        </div>\n        <div className=\"material-color-box\">\n          <ColorPanel\n            type=\"text\"\n            className=\"toolbar-item\"\n            onChange={(color: string) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                color: color,\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/ming/code-work/ccc-react-paint/src/right/formatColor/index.tsx",["164","165"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { FillContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport ColorPanel from \"../components/colorPanel\";\ninterface FormatColor {\n  className?: string;\n}\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const FillColorContext = useContext(FillContext);\n  //   const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    FillColorContext.setFillColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div className={className ? `formatColor ${className}` : \"colorpanel\"}>\n      <div className=\"content\">\n        <ColorPanel\n          className=\"toolbar-item\"\n          onChange={(color: string) => {\n            FillColorContext.setFillColor(color);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/ming/code-work/ccc-react-paint/src/right/components/colorPanel/index.tsx",["166","167","168","169","170","171"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { ColorContext, ToolTypeContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport {\n  Pen,\n  Tool,\n  Eraser,\n  ColorExtract,\n  ColorFill,\n  Text,\n} from \"../../../util/tool\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { getRandomColor } from \"../../../utils\";\nimport { strawIcon } from \"../../../ToolTypeIcon\";\n\ninterface ColorPanelProps {\n  className?: string;\n  testTool?: Tool;\n  type?: string;\n  onChange?: (color: string) => void;\n}\n\nconst activeColorTypeCls = \"active-color-type\";\n\nconst ColorPanel: React.FC<ColorPanelProps> = (props) => {\n  const { className, type, onChange, testTool } = props;\n  const [pickerColor, setPickerColor] = useState(\n    createColor(type && type === \"pen\" ? getRandomColor() : \"#000000FF\")\n  );\n  const colorContext = useContext(ColorContext);\n  const ToolContext = useContext(ToolTypeContext);\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor, testTool]);\n\n  const getStrawColor = () => {\n    const startTime = new Date().getTime();\n    const intervalId = setInterval(function () {\n      const endTime = new Date().getTime();\n      if (Math.abs(endTime - startTime) >= 10 * 60 * 1000) {\n        clearInterval(intervalId); //清除定时器 ,超过10分钟没有吸色功能 清楚定时器\n        ToolContext.setStrawType(false);\n      }\n      if (Tool.strawColor) {\n        setPickerColor(createColor(Tool.strawColor));\n        ToolContext.setStrawType(false);\n        clearInterval(intervalId); //清除定时器\n      }\n    }, 200);\n  };\n\n  return (\n    <div className={className ? `colorpanel ${className}` : \"colorpanel\"}>\n      <div className=\"content\">\n        <h3>Color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n              Tool.strawColor = \"\";\n              if (onChange) {\n                onChange(`#${color.hex}`);\n              }\n            }}\n          />\n          {type !== \"text\" && (\n            <span\n              className={`straw-color ${Tool.strawFlag ? \"select-item\" : \"\"}`}\n              onClick={() => {\n                Tool.strawFlag = true;\n                Tool.strawColor = \"\";\n                ToolContext.setStrawType(true);\n                getStrawColor();\n              }}\n            >\n              {strawIcon}\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColorPanel;\n","/Users/ming/code-work/ccc-react-paint/src/right/components/shape/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/right/components/slider/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/right/earser/index.tsx",["172"],"import React, { FC } from \"react\";\nimport { useContext } from \"react\";\nimport { LineWidthContext } from \"@/context\";\nimport IntegerStep from \"../components/slider\";\nimport \"./index.less\";\n\ninterface earserType {\n  lineSize: number;\n}\n\nconst Eraser = (props: earserType) => {\n  const { lineSize } = props;\n  const lineWidthContext = useContext(LineWidthContext);\n  return (\n    <div className=\"ccc-pen\">\n      <div className=\"ccc-slider-item\">\n        <h3>Eraser Thickness</h3>\n        <IntegerStep\n          min={1}\n          max={20}\n          value={lineSize}\n          onPropsChange={(value) => {\n            lineWidthContext.setLineSize(value);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Eraser;\n","/Users/ming/code-work/ccc-react-paint/src/ToolTypeIcon.tsx",[],{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":20},{"ruleId":"173","severity":1,"message":"177","line":11,"column":3,"nodeType":"175","messageId":"176","endLine":11,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":12,"column":58,"nodeType":"180","messageId":"181","endLine":12,"endColumn":62,"suggestions":"182"},{"ruleId":"173","severity":1,"message":"183","line":1,"column":10,"nodeType":"175","messageId":"176","endLine":1,"endColumn":19},{"ruleId":"173","severity":1,"message":"184","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"185","line":8,"column":29,"nodeType":"175","messageId":"176","endLine":8,"endColumn":41},{"ruleId":"173","severity":1,"message":"186","line":18,"column":13,"nodeType":"175","messageId":"176","endLine":18,"endColumn":21},{"ruleId":"173","severity":1,"message":"187","line":49,"column":7,"nodeType":"175","messageId":"176","endLine":49,"endColumn":24},{"ruleId":"173","severity":1,"message":"188","line":66,"column":5,"nodeType":"175","messageId":"176","endLine":66,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":243,"column":23,"nodeType":"180","messageId":"181","endLine":243,"endColumn":36,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"179","line":257,"column":23,"nodeType":"180","messageId":"181","endLine":257,"endColumn":36,"suggestions":"190"},{"ruleId":"178","severity":1,"message":"179","line":285,"column":23,"nodeType":"180","messageId":"181","endLine":285,"endColumn":36,"suggestions":"191"},{"ruleId":"178","severity":1,"message":"179","line":291,"column":22,"nodeType":"180","messageId":"181","endLine":291,"endColumn":32,"suggestions":"192"},{"ruleId":"178","severity":1,"message":"179","line":292,"column":21,"nodeType":"180","messageId":"181","endLine":292,"endColumn":31,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"179","line":349,"column":23,"nodeType":"180","messageId":"181","endLine":349,"endColumn":36,"suggestions":"194"},{"ruleId":"173","severity":1,"message":"195","line":350,"column":25,"nodeType":"175","messageId":"176","endLine":350,"endColumn":32},{"ruleId":"173","severity":1,"message":"196","line":350,"column":34,"nodeType":"175","messageId":"176","endLine":350,"endColumn":41},{"ruleId":"173","severity":1,"message":"197","line":350,"column":43,"nodeType":"175","messageId":"176","endLine":350,"endColumn":49},{"ruleId":"173","severity":1,"message":"198","line":351,"column":13,"nodeType":"175","messageId":"176","endLine":351,"endColumn":18},{"ruleId":"173","severity":1,"message":"199","line":351,"column":20,"nodeType":"175","messageId":"176","endLine":351,"endColumn":26},{"ruleId":"178","severity":1,"message":"179","line":351,"column":31,"nodeType":"180","messageId":"181","endLine":351,"endColumn":38,"suggestions":"200"},{"ruleId":"178","severity":1,"message":"179","line":392,"column":35,"nodeType":"180","messageId":"181","endLine":392,"endColumn":42,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":393,"column":15,"nodeType":"175","messageId":"176","endLine":393,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":394,"column":11,"nodeType":"180","messageId":"181","endLine":394,"endColumn":21,"suggestions":"203"},{"ruleId":"178","severity":1,"message":"179","line":394,"column":63,"nodeType":"180","messageId":"181","endLine":394,"endColumn":73,"suggestions":"204"},{"ruleId":"173","severity":1,"message":"205","line":395,"column":15,"nodeType":"175","messageId":"176","endLine":395,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":396,"column":11,"nodeType":"180","messageId":"181","endLine":396,"endColumn":21,"suggestions":"206"},{"ruleId":"178","severity":1,"message":"179","line":397,"column":16,"nodeType":"180","messageId":"181","endLine":397,"endColumn":26,"suggestions":"207"},{"ruleId":"178","severity":1,"message":"179","line":403,"column":11,"nodeType":"180","messageId":"181","endLine":403,"endColumn":18,"suggestions":"208"},{"ruleId":"173","severity":1,"message":"209","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":19},{"ruleId":"173","severity":1,"message":"210","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":14},{"ruleId":"173","severity":1,"message":"211","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":18},{"ruleId":"173","severity":1,"message":"212","line":33,"column":23,"nodeType":"175","messageId":"176","endLine":33,"endColumn":37},{"ruleId":"173","severity":1,"message":"213","line":41,"column":9,"nodeType":"175","messageId":"176","endLine":41,"endColumn":24},{"ruleId":"173","severity":1,"message":"211","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":18},{"ruleId":"173","severity":1,"message":"212","line":15,"column":23,"nodeType":"175","messageId":"176","endLine":15,"endColumn":37},{"ruleId":"173","severity":1,"message":"214","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":6},{"ruleId":"173","severity":1,"message":"215","line":8,"column":3,"nodeType":"175","messageId":"176","endLine":8,"endColumn":9},{"ruleId":"173","severity":1,"message":"185","line":9,"column":3,"nodeType":"175","messageId":"176","endLine":9,"endColumn":15},{"ruleId":"173","severity":1,"message":"216","line":10,"column":3,"nodeType":"175","messageId":"176","endLine":10,"endColumn":12},{"ruleId":"173","severity":1,"message":"217","line":11,"column":3,"nodeType":"175","messageId":"176","endLine":11,"endColumn":7},{"ruleId":"173","severity":1,"message":"218","line":26,"column":7,"nodeType":"175","messageId":"176","endLine":26,"endColumn":25},{"ruleId":"173","severity":1,"message":"209","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":19},"@typescript-eslint/no-unused-vars","'Ref' is defined but never used.","Identifier","unusedVar","'SizeContext' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["219"],"'ColorType' is defined but never used.","'useMemo' is defined but never used.","'ColorExtract' is defined but never used.","'glMatrix' is defined but never used.","'defaultTransition' is assigned a value but never used.","'setColor' is assigned a value but never used.",["220"],["221"],["222"],["223"],["224"],["225"],"'clientX' is assigned a value but never used.","'clientY' is assigned a value but never used.","'deltaY' is assigned a value but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.",["226"],["227"],"'leftX' is assigned a value but never used.",["228"],["229"],"'leftY' is assigned a value but never used.",["230"],["231"],["232"],"'FC' is defined but never used.","'Tool' is defined but never used.","'ColorBox' is defined but never used.","'setPickerColor' is assigned a value but never used.","'activeColorType' is assigned a value but never used.","'Pen' is defined but never used.","'Eraser' is defined but never used.","'ColorFill' is defined but never used.","'Text' is defined but never used.","'activeColorTypeCls' is assigned a value but never used.",{"messageId":"233","fix":"234","desc":"235"},{"messageId":"233","fix":"236","desc":"235"},{"messageId":"233","fix":"237","desc":"235"},{"messageId":"233","fix":"238","desc":"235"},{"messageId":"233","fix":"239","desc":"235"},{"messageId":"233","fix":"240","desc":"235"},{"messageId":"233","fix":"241","desc":"235"},{"messageId":"233","fix":"242","desc":"235"},{"messageId":"233","fix":"243","desc":"235"},{"messageId":"233","fix":"244","desc":"235"},{"messageId":"233","fix":"245","desc":"235"},{"messageId":"233","fix":"246","desc":"235"},{"messageId":"233","fix":"247","desc":"235"},{"messageId":"233","fix":"248","desc":"235"},"suggestOptionalChain",{"range":"249","text":"250"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"251","text":"250"},{"range":"252","text":"250"},{"range":"253","text":"250"},{"range":"254","text":"250"},{"range":"255","text":"250"},{"range":"256","text":"250"},{"range":"257","text":"250"},{"range":"258","text":"250"},{"range":"259","text":"250"},{"range":"260","text":"250"},{"range":"261","text":"250"},{"range":"262","text":"250"},{"range":"263","text":"250"},[262,263],"?",[6382,6383],[6853,6854],[7933,7934],[8103,8104],[8148,8149],[9641,9642],[9766,9767],[11226,11227],[11294,11295],[11346,11347],[11437,11438],[11503,11504],[11689,11690]]