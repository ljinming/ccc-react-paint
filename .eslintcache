[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx":"3","/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx":"4","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx":"5","/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx":"6","/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx":"10","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx":"11","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx":"12","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx":"13","/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx":"14","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts":"15","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx":"16","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts":"17","/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx":"18","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx":"21","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx":"22","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx":"23","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx":"24","/Users/jinmingliu/work/ccc-react-paint/src/Action.tsx":"25"},{"size":170,"mtime":1657603653315,"results":"26","hashOfConfig":"27"},{"size":1360,"mtime":1657606017515,"results":"28","hashOfConfig":"27"},{"size":234,"mtime":1657541738793,"results":"29","hashOfConfig":"27"},{"size":1343,"mtime":1657541738787,"results":"30","hashOfConfig":"27"},{"size":3117,"mtime":1657613952331,"results":"31","hashOfConfig":"27"},{"size":6726,"mtime":1657695916504,"results":"32","hashOfConfig":"27"},{"size":1572,"mtime":1657612054204,"results":"33","hashOfConfig":"27"},{"size":9109,"mtime":1657695916503,"results":"34","hashOfConfig":"27"},{"size":2291,"mtime":1657700162368,"results":"35","hashOfConfig":"27"},{"size":11983,"mtime":1657707453279,"results":"36","hashOfConfig":"27"},{"size":1519,"mtime":1657707607246,"results":"37","hashOfConfig":"27"},{"size":641,"mtime":1657594501723,"results":"38","hashOfConfig":"27"},{"size":13684,"mtime":1657613746820,"results":"39","hashOfConfig":"27"},{"size":1288,"mtime":1657695916501,"results":"40","hashOfConfig":"27"},{"size":3956,"mtime":1657541738792,"results":"41","hashOfConfig":"27"},{"size":11506,"mtime":1657707796976,"results":"42","hashOfConfig":"27"},{"size":379,"mtime":1657594974814,"results":"43","hashOfConfig":"27"},{"size":1806,"mtime":1657615861992,"results":"44","hashOfConfig":"27"},{"size":3931,"mtime":1657541738786,"results":"45","hashOfConfig":"27"},{"size":695,"mtime":1657541738781,"results":"46","hashOfConfig":"27"},{"size":367,"mtime":1657594560497,"results":"47","hashOfConfig":"27"},{"size":3533,"mtime":1657614526722,"results":"48","hashOfConfig":"27"},{"size":654,"mtime":1657541738783,"results":"49","hashOfConfig":"27"},{"size":1619,"mtime":1657606505693,"results":"50","hashOfConfig":"27"},{"size":478,"mtime":1657594501718,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1sw6yjp",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx",["111","112","113","114"],"import Header from \"./header\";\nimport Content from \"./content\";\nimport \"./index.less\";\nimport \"./font.css\";\nimport { useState, useEffect, useImperativeHandle } from \"react\";\nimport { Tool } from \"../tool\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../Action\";\ninterface HomeProps {\n  backgroundColor?: string;\n  width?: number;\n  height?: number;\n  imgSrc?: string;\n  cRef?: any;\n  id: string;\n  showArea?: Array<[number, number]> | undefined;\n  ThumbSrc?: string;\n}\n\nexport default (props: HomeProps) => {\n  const pre = `core-paint`;\n  const {\n    imgSrc = \"https://bafybeicgvg3vwtv5c633cjexbykjp75yjt755qhma4o7vgusa4ldvocz44.ipfs.dweb.link/orign.png\",\n    width = 500,\n    height = 500,\n    cRef,\n    id,\n    showArea,\n    ThumbSrc,\n  } = props;\n\n  useImperativeHandle(cRef, () => ({\n    getCurrentImageData: () => {\n      // const canvasElem: any = document.getElementById(`ccc-paint-canvas ${id}`);\n      // const imageData = canvasElem.toDataURL(\"image/png\");\n      return Tool.canvas.toDataURL();\n    },\n  }));\n\n  return (\n    <Provider store={store}>\n      <div className={pre}>\n        <Header pre={pre} />\n        <Content\n          id={id}\n          pre={pre}\n          imgSrc={imgSrc}\n          showArea={showArea}\n          ThumbSrc={ThumbSrc}\n          backgroundColor={\"#fff\"}\n        />\n      </div>\n    </Provider>\n  );\n};\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx",["115","116","117","118","119","120","121","122","123","124","125"],"import { store } from \"../Action\";\nimport { fabric } from \"fabric\";\n//import Action from \"@/action\";\nimport { rgbToHex } from \"./colorChange\";\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface Pencil {\n  lineWidth: number;\n  strokeColor: string;\n}\n\n// 随机color\nexport const getRandomColor = () => {\n  return (\n    \"#\" + (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).substr(-6)\n  );\n};\n\n//clacArea\n\nexport const clacArea = (points: Point) => {\n  return Tool.showArea\n    ? Tool.showArea.find((item) => item[0] === points.x && item[1] === points.y)\n    : true;\n};\n// strawColor\n\nexport const setStrawColor = (pos: Point) => {\n  const ctx = Tool.canvas.getContext();\n  const color = getPixelColorOnCanvas(pos, ctx);\n  Tool.strawColor = color;\n  Tool.strawFlag = false;\n  store.dispatch({\n    type: \"paint.straw\",\n    payload: { strawColor: color, strawFlag: false },\n  });\n\n  // Action.emit(\"paint.straw\", { strawColor: color, strawFlag: false });\n};\n//鼠标点颜色\nexport const getPixelColorOnCanvas = (\n  pos: Point,\n  ctx: CanvasRenderingContext2D\n) => {\n  const p = ctx.getImageData(pos.x, pos.y, 1, 1).data;\n  return rgbToHex(p[0], p[1], p[2], p[3]);\n};\n\nexport const addContext = (showCtx?: CanvasRenderingContext2D) => {\n  const ctx = showCtx || Tool.canvas.getContext();\n  const imageData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n  if (Tool.ToolStoreList.length < 10) {\n    Tool.ToolStoreList.push(imageData);\n  } else {\n    Tool.ToolStoreList.shift();\n    Tool.ToolStoreList.push(imageData);\n  }\n};\n\nexport default class Tool {\n  //选择的工具\n  public toolType: string = \"PEN\";\n\n  // canvas\n  public static canvas: fabric.Canvas;\n  static toolType: string;\n  static img: fabric.Image;\n  static strawColor: string;\n  static strawFlag: boolean;\n  static canvasObj: any[] = [];\n\n  static recordTimer: any;\n  static stateArr: any[] = [];\n  static stateIdx: any = 0;\n  static transform: string;\n  static currentScale: number;\n  static ToolStoreList: any[] = [];\n  static imgSrc: string;\n  static nextCanvas: any = [];\n  static currentSelected: any;\n  static showArea: Array<[number, number]> | undefined;\n  static ThumbSrc: string | undefined;\n\n  static afterRender() {\n    if (this.recordTimer) {\n      clearTimeout(this.recordTimer);\n      this.recordTimer = null;\n    }\n    this.recordTimer = setTimeout(() => {\n      this.stateArr.push(JSON.stringify(Tool.canvas));\n      this.stateIdx++;\n    }, 1000);\n  }\n\n  // 撤销 或 还原\n  static tapHistoryBtn(flag: number) {\n    const removeList = this.canvas.getObjects().filter((c) => c.width) || [];\n    if (removeList.length > 0) {\n      if (flag < 0 && this.canvasObj.length < 10) {\n        const tagCanvas = removeList[removeList.length - 1];\n        if (tagCanvas) {\n          this.canvasObj.push(tagCanvas);\n          this.canvas.remove(tagCanvas);\n          const popCanvas = this.ToolStoreList.pop();\n          Tool.nextCanvas.push(popCanvas);\n        }\n      } else if (flag > 0 && this.canvasObj.length > 0) {\n        //回到撤回前一步\n        const current = this.canvasObj.pop();\n        if (current) {\n          const shiftCanvas = Tool.nextCanvas.pop();\n          this.ToolStoreList.push(shiftCanvas);\n          this.canvas.add(current);\n        }\n      }\n    } else {\n      Tool.calcPic(flag);\n    }\n\n    // let stateIdx = this.stateIdx + flag;\n    // // 判断是否已经到了第一步操作\n    // if (stateIdx < 0) return;\n    // // 判断是否已经到了最后一步操作\n    // if (stateIdx >= this.stateArr.length) return;\n    // if (this.stateArr[stateIdx]) {\n    //   this.canvas.loadFromJSON(\n    //     this.stateArr[stateIdx],\n    //     this.canvas.renderAll.bind(this.canvas)\n    //   );\n    //   if (this.canvas.getObjects().length > 0) {\n    //     this.canvas.getObjects().forEach((item) => {\n    //       item.set(\"selectable\", false);\n    //     });\n    //   }\n    //   this.stateIdx = stateIdx;\n    // }\n  }\n\n  //撤销图片\n\n  static calcPic = (flag: number) => {\n    let current;\n    if (Tool.canvas) {\n      if (flag < 0 && Tool.ToolStoreList.length > 0) {\n        const tagCanvas = Tool.ToolStoreList.pop();\n        if (tagCanvas && Tool.canvas) {\n          Tool.nextCanvas.push(tagCanvas);\n          current = tagCanvas;\n        }\n      } else if (flag > 0 && Tool.nextCanvas.length > 0) {\n        //回到撤回前一步\n        const canvasData = Tool.nextCanvas.pop();\n        if (canvasData) {\n          current = canvasData;\n        }\n      }\n      if (current && Tool.canvas) {\n        let canvasTool: HTMLCanvasElement | undefined =\n          document.createElement(\"canvas\");\n        canvasTool.width = current.width;\n        canvasTool.height = current.height;\n        canvasTool?.getContext(\"2d\")?.putImageData(current, 0, 0);\n        const url = canvasTool.toDataURL();\n        Tool.canvas.setBackgroundImage(\n          url,\n          (img: any) => {\n            img.selectable = false;\n            img.evented = false;\n            Tool.canvas.renderAll();\n          },\n          { crossOrigin: \"anonymous\", scaleX: 0.5, scaleY: 0.5 }\n        );\n        canvasTool = undefined;\n        Tool.canvas.requestRenderAll();\n      } else {\n        Tool.canvas.setBackgroundImage(\n          Tool.imgSrc,\n          (img: any) => {\n            img.selectable = false;\n            img.evented = false;\n            Tool.canvas.renderAll();\n          },\n          { crossOrigin: \"anonymous\" }\n        );\n      }\n    }\n  };\n\n  //清空画布\n  static clearAll() {\n    // 获取画布中的所有对象\n    if (this.canvas) {\n      let children = this.canvas.getObjects();\n      if (children.length > 0) {\n        // 移除所有对象\n        this.canvas.remove(...children);\n      }\n      if (this.ToolStoreList.length > 0) {\n        this.ToolStoreList = [];\n        this.canvas.setBackgroundImage(\n          Tool.imgSrc,\n          (img: any) => {\n            img.selectable = false;\n            img.evented = false;\n            Tool.canvas.renderAll();\n          },\n          { crossOrigin: \"anonymous\" }\n        );\n      }\n    }\n  }\n\n  public onMouseDown(options: any): void {\n    //\n  }\n  public onMouseMove(event: MouseEvent): void {\n    //\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    //\n  }\n\n  public onSelected(event: MouseEvent): void {}\n\n  public onCancelSelected(event: MouseEvent): void {}\n\n  //双击\n  public onDbClick(event: MouseEvent): void {}\n\n  public onTouchStart(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    //\n  }\n\n  public onKeyDown(event: KeyboardEvent): void {\n    //\n  }\n\n  public afterRender(event: any): void {}\n}\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx",["126","127"],"import Tool, {\n  addContext,\n  clacArea,\n  getPixelColorOnCanvas,\n  Point,\n} from \"./tool\";\n//import \"libs/eraser_brush.mixin.js\"; // 本地地址进行引用即可\n\nclass Eraser extends Tool {\n  color: string | undefined;\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = false;\n\n    Tool.canvas.freeDrawingBrush.color = \"transparent\";\n    // Tool.canvas.freeDrawingBrush = new fabric.EraserBrush(Tool.canvas); // 使用橡皮擦画笔\n    Tool.canvas.isDrawingMode = true;\n    Tool.canvas.freeDrawingBrush.width = 20; // 设置画笔粗细为 20\n  }\n\n  //改变画笔的粗细\n  static setEraserStyle(value: number) {\n    this.canvas!.freeDrawingBrush.width = value;\n  }\n\n  private operateStart = (pointer: Point): void => {\n    const ctx = Tool.canvas.getContext();\n    const color = getPixelColorOnCanvas(pointer, ctx);\n    Tool.canvas.freeDrawingBrush.color = color;\n  };\n\n  public onMouseDown(options: any) {\n    if (Tool.toolType !== \"ERASER\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n    if (!clacArea(absolutePointer)) {\n      Tool.canvas.isDrawingMode = false;\n      return;\n    }\n    e.preventDefault();\n    Tool.canvas.freeDrawingBrush.color = \"transparent\";\n    const show = {\n      x: absolutePointer.x * 2,\n      y: absolutePointer.y * 2,\n    };\n    this.operateStart(show);\n  }\n  public onMouseUp(options: any) {\n    if (Tool.toolType !== \"ERASER\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n    e.preventDefault();\n    addContext();\n  }\n}\n\nexport default Eraser;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx",["128","129"],"import Tool, { addContext, clacArea, setStrawColor } from \"./tool\";\nimport { fabric } from \"fabric\";\nimport { Point } from \"./tool\";\n\nclass Shape extends Tool {\n  private shapeCurrent: any;\n  downPoints: Point;\n  upPoints: Point | undefined;\n  static shapeObject: Record<string, string> = {\n    shapeType: \"LINE\",\n    border: \"FILL\",\n    color: \"#000\",\n  };\n  static selected: boolean = false;\n  static selectedList: any[];\n  constructor() {\n    super();\n    this.shapeCurrent = undefined;\n    this.downPoints = {\n      x: 0,\n      y: 0,\n    };\n    this.upPoints = {\n      x: 0,\n      y: 0,\n    };\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = true;\n    Tool.canvas.isDrawingMode = false;\n  }\n\n  static changeShapeType(type: string, value: string) {\n    this.shapeObject[type] = value;\n    const { border } = Shape.shapeObject;\n\n    if (this.selected && this.selectedList.length > 0) {\n      this.selectedList.forEach((va) => {\n        if (type === \"color\") {\n          if (border === \"FILL\") {\n            if (va.fill) {\n              va.set(\"fill\", value);\n            }\n            va.set(\"stroke\", value);\n          } else {\n            va.set(\"stroke\", value);\n          }\n        } else if (type === \"border\") {\n          va.set(\"strokeDashArray\", value === \"DOTTED\" ? [3, 3] : [0, 0]);\n          if (value !== \"FILL\") {\n            va.set(\"fill\", \"transparent\");\n          }\n        }\n      });\n      Tool.canvas.requestRenderAll();\n    }\n  }\n\n  createShape = (pointer: Point) => {\n    const { shapeType, border, color } = Shape.shapeObject;\n    const options: Record<string, string | number | number[]> = {\n      strokeDashArray: border === \"DOTTED\" ? [3, 3] : [0, 0],\n      stroke: Tool.strawColor || color, // 笔触颜色\n    };\n    if (border === \"FILL\") {\n      options.fill = Tool.strawColor || color;\n    }\n    switch (shapeType) {\n      case \"LINE\":\n        this.shapeCurrent = new fabric.Line(\n          [\n            pointer.x,\n            pointer.y, // 起始点坐标\n            pointer.x,\n            pointer.y, // 结束点坐标\n          ],\n          options\n        );\n        break;\n      case \"RECT\":\n        // 创建矩形\n        // 矩形参数计算\n        let top = Math.min(pointer.y, pointer.y);\n        let left = Math.min(pointer.x, pointer.x);\n        let width = Math.abs(pointer.x - pointer.x);\n        let height = Math.abs(pointer.y - pointer.y);\n        // 矩形对象\n        this.shapeCurrent = new fabric.Rect({\n          top,\n          left,\n          width,\n          height,\n          fill: \"transparent\",\n          strokeWidth: 1,\n          ...options,\n        });\n        break;\n      case \"CIRCLE\":\n        this.shapeCurrent = new fabric.Circle({\n          top: pointer.y,\n          left: pointer.x,\n          radius: 0,\n          fill: \"transparent\",\n          ...options,\n        });\n        break;\n      case \"TRIANGLE\":\n        this.shapeCurrent = new fabric.Triangle({\n          top: pointer.y,\n          left: pointer.x,\n          width: 0,\n          height: 0,\n          fill: \"transparent\",\n          ...options,\n        });\n        break;\n      case \"RHOMBUS\": //多边形\n        this.shapeCurrent = new fabric.Polygon(\n          [\n            { x: pointer.x, y: pointer.y },\n            { x: pointer.x, y: pointer.y },\n          ],\n          {\n            fill: \"transparent\",\n            objectCaching: false,\n            ...options,\n          }\n        );\n        break;\n    }\n\n    Tool.canvas.add(this.shapeCurrent);\n  };\n\n  changeShape = (pointer: Point) => {\n    const { shapeType } = Shape.shapeObject;\n    switch (shapeType) {\n      case \"LINE\":\n        if (this.shapeCurrent) {\n          this.shapeCurrent.set(\"x2\", pointer.x);\n          this.shapeCurrent.set(\"y2\", pointer.y);\n        }\n        break;\n      case \"RECT\":\n        if (this.shapeCurrent) {\n          this.shapeCurrent.set(\n            \"width\",\n            Math.abs(this.downPoints.x - pointer.x)\n          );\n          this.shapeCurrent.set(\n            \"height\",\n            Math.abs(this.downPoints.y - pointer.y)\n          );\n        }\n        break;\n      case \"CIRCLE\":\n        {\n          const radius =\n            Math.min(\n              Math.abs(this.downPoints.x - pointer.x),\n              Math.abs(this.downPoints.y - pointer.y)\n            ) / 2;\n          const top =\n            pointer.y > this.downPoints.y\n              ? this.downPoints.y\n              : this.downPoints.y - radius * 2;\n          const left =\n            pointer.x > this.downPoints.x\n              ? this.downPoints.x\n              : this.downPoints.x - radius * 2;\n\n          this.shapeCurrent.set(\"radius\", radius);\n          this.shapeCurrent.set(\"top\", top);\n          this.shapeCurrent.set(\"left\", left);\n        }\n        break;\n      case \"TRIANGLE\":\n        {\n          const width = Math.abs(this.downPoints.x - pointer.x);\n          const height = Math.abs(this.downPoints.y - pointer.y);\n          const top = Math.min(this.downPoints.y, pointer.y);\n          const left = Math.min(this.downPoints.x, pointer.x);\n          this.shapeCurrent.set(\"width\", width);\n          this.shapeCurrent.set(\"height\", height);\n          this.shapeCurrent.set(\"top\", top);\n          this.shapeCurrent.set(\"left\", left);\n        }\n        break;\n      case \"RHOMBUS\": //多边形\n        let points = this.shapeCurrent.points;\n        points.push({\n          x: pointer.x,\n          y: pointer.y,\n        });\n        break;\n    }\n    Tool.canvas.requestRenderAll();\n  };\n\n  // 多边形橡皮带\n  changePolygonBelt(pointer: Point) {\n    let points = this.shapeCurrent.points;\n    points[points.length - 1].x = pointer.x;\n    points[points.length - 1].y = pointer.y;\n    Tool.canvas.requestRenderAll();\n  }\n  // 完成多边形绘制\n  finishPolygon(pointer: Point) {\n    const { shapeType, border, color } = Shape.shapeObject;\n    const options: Record<string, string | number | number[]> = {\n      strokeDashArray: border === \"DOTTED\" ? [3, 3] : [0, 0],\n      stroke: Tool.strawColor || color, // 笔触颜色\n    };\n    if (border === \"FILL\") {\n      options.fill = Tool.strawColor || color;\n    }\n\n    let points = this.shapeCurrent.points;\n    if (points[points.length - 1]) {\n      points[points.length - 1].x = pointer.x;\n      points[points.length - 1].y = pointer.y;\n    }\n\n    points.pop();\n    points.pop();\n    Tool.canvas.remove(this.shapeCurrent);\n    if (points.length > 1) {\n      let polygon = new fabric.Polygon(points, {\n        fill: \"transparent\",\n        ...options,\n      });\n\n      Tool.canvas.add(polygon);\n    }\n\n    this.shapeCurrent = null;\n    Tool.canvas.requestRenderAll();\n  }\n\n  onMouseDown(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n\n    const { e, absolutePointer } = options;\n    if (!clacArea(absolutePointer)) {\n      return;\n    }\n    this.downPoints = absolutePointer; //鼠标按下的位置\n    if (Tool.strawFlag) {\n      const show = {\n        x: absolutePointer.x * 2,\n        y: absolutePointer.y * 2,\n      };\n      setStrawColor(show);\n      return;\n    }\n    const { shapeType } = Shape.shapeObject;\n    e.preventDefault();\n    if (!Shape.selected) {\n      if (shapeType === \"RHOMBUS\") {\n        if (!this.shapeCurrent) {\n          this.createShape(absolutePointer);\n        } else {\n          this.changeShape(absolutePointer);\n        }\n      } else if (!this.shapeCurrent) {\n        this.createShape(absolutePointer);\n      }\n    }\n  }\n\n  public onMouseMove(options: any): void {\n    if (Tool.toolType === \"SHAPE\") {\n      const { e, absolutePointer } = options;\n      e.preventDefault();\n      const { shapeType } = Shape.shapeObject;\n      e.preventDefault();\n      if (this.shapeCurrent) {\n        if (shapeType === \"RHOMBUS\") {\n          this.changePolygonBelt(absolutePointer);\n        } else {\n          this.changeShape(absolutePointer);\n        }\n      }\n    }\n  }\n\n  public onMouseUp(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    const { e, absolutePointer } = options;\n    const { shapeType } = Shape.shapeObject;\n    e.preventDefault();\n    if (shapeType !== \"RHOMBUS\") {\n      this.upPoints = absolutePointer;\n      if (JSON.stringify(this.downPoints) === JSON.stringify(this.upPoints)) {\n        Tool.canvas.remove(this.shapeCurrent);\n      } else {\n        addContext();\n      }\n      this.shapeCurrent = undefined;\n    }\n  }\n\n  public onDbClick(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    const { shapeType } = Shape.shapeObject;\n    const { e, absolutePointer } = options;\n    e.preventDefault();\n    if (shapeType === \"RHOMBUS\" && this.shapeCurrent) {\n      this.finishPolygon(absolutePointer);\n      addContext();\n    }\n  }\n\n  public onSelected(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    Shape.selected = true;\n    Shape.selectedList = options.selected;\n  }\n  public onCancelSelected(options: any): void {\n    if (Tool.toolType !== \"SHAPE\") {\n      return;\n    }\n    Shape.selected = false;\n    Shape.selectedList = [];\n  }\n}\n\nexport default Shape;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx",["130","131"],"import { fabric } from \"fabric\";\nimport Tool, { addContext, clacArea, Point, setStrawColor } from \"./tool\";\n\nclass CanvasText extends Tool {\n  textObject: any;\n  static textStyle: any;\n  selected: boolean = false;\n  static selectedList: any;\n  static selected: boolean;\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    Tool.canvas.interactive = true;\n  }\n\n  static changeTextStyle(type: any, value: any) {\n    CanvasText.textStyle = { ...CanvasText.textStyle, [type]: value };\n    if (this.selected && this.selectedList.length > 0) {\n      this.selectedList.forEach((va: any) => {\n        va.set(String([type]), value);\n      });\n      Tool.canvas.requestRenderAll();\n    }\n  }\n\n  initText(points: Point) {\n    const newObj = {\n      fontFamily: \"System Font\",\n      ...CanvasText.textStyle,\n    };\n    if (Tool.strawColor) {\n      newObj.fill = Tool.strawColor;\n    }\n    this.textObject = new fabric.Textbox(\"\", {\n      left: points.x,\n      top: points.y,\n      width: 150,\n      fontSize: 72,\n      ...newObj,\n      moveCursor: \"pointer\",\n    });\n    Tool.canvas.add(this.textObject);\n    this.textObject.enterEditing();\n  }\n\n  onMouseDown = (options: any) => {\n    if (Tool.toolType !== \"TEXT\") {\n      return;\n    }\n    const { e, pointer, absolutePointer } = options;\n    if (!clacArea(absolutePointer)) {\n      return;\n    }\n    e.preventDefault();\n    if (Tool.strawFlag) {\n      const show = {\n        x: pointer.x * 2,\n        y: pointer.y * 2,\n      };\n      setStrawColor(show);\n      return;\n    }\n    if (!CanvasText.selected) {\n      if (!this.textObject) {\n        this.initText(absolutePointer);\n      } else {\n        addContext();\n        this.textObject.exitEditing();\n        this.textObject = null;\n      }\n    }\n  };\n\n  public onMouseMove(options: any): void {\n    if (Tool.toolType !== \"TEXT\") {\n      this.textObject?.exitEditing();\n      return;\n    }\n  }\n\n  public onSelected(options: any): void {\n    if (Tool.toolType !== \"TEXT\") {\n      return;\n    }\n    CanvasText.selected = true;\n    CanvasText.selectedList = options.selected;\n  }\n\n  public onCancelSelected(options: any): void {\n    if (Tool.toolType !== \"TEXT\") {\n      return;\n    }\n    CanvasText.selected = false;\n    CanvasText.selectedList = [];\n  }\n}\n\nexport default CanvasText;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx",["132","133","134","135","136"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx",["137"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx",["138"],"import Sider from \"../../components/sliderCard\";\nimport ColorPicker from \"../../components/colorPicker\";\nimport { Pen, Tool } from \"@/tool\";\n\nconst Pencil = () => {\n  const handleChange = (type: string, value: number | string) => {\n    Pen.setPenStyle(type, value);\n  };\n\n  return (\n    <>\n      <Sider\n        title=\"Brush thickness\"\n        options={{ max: 200, min: 1 }}\n        defaultValue={20}\n        onChange={(value: number) => handleChange(\"lineWidth\", value)}\n      />\n      <ColorPicker\n        color={Pen.color}\n        onChange={(color: string) => handleChange(\"color\", color)}\n      />\n    </>\n  );\n};\n\nexport default Pencil;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx",["139"],"import Tool, { clacArea, getRandomColor, setStrawColor } from \"./tool\";\n\nclass Pen extends Tool {\n  static color: string = getRandomColor();\n  static lineWidth: number = 20;\n  //改变画笔的状态\n  constructor() {\n    super();\n    this.init();\n  }\n\n  init() {\n    if (!Tool.canvas.isDrawingMode) {\n      Tool.canvas.isDrawingMode = true;\n    }\n    //Tool.canvas.interactive = false;\n    Tool.canvas.freeDrawingBrush.color = Tool.strawColor || Pen.color;\n    Tool.canvas.freeDrawingBrush.width = Pen.lineWidth;\n    //Tool.canvas.selectable = false;\n  }\n\n  static setPenStyle(type: string, value: any) {\n    Pen[type] = value;\n    if (type === \"lineWidth\") {\n      Tool.canvas.freeDrawingBrush.width = value;\n    } else {\n      Tool.canvas.freeDrawingBrush.color = value;\n    }\n  }\n\n  public onMouseDown = (options: any) => {\n    const { e, pointer, absolutePointer } = options;\n    e.preventDefault();\n    if (Tool.toolType === \"PEN\") {\n      if (!clacArea(absolutePointer)) {\n        Tool.canvas.isDrawingMode = false;\n        return;\n      }\n      if (Tool.strawFlag) {\n        const show = {\n          x: absolutePointer.x * 2,\n          y: absolutePointer.y * 2,\n        };\n        setStrawColor(show);\n      } else {\n        this.init();\n      }\n    }\n  };\n}\n\nexport default Pen;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx",["140","141","142","143","144","145","146"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx",["147","148","149"],"import { useState, useEffect } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { toHexString } from \"../../tool/colorChange\";\nimport \"./index.less\";\nimport { getToolIcon } from \"../../pages/utils/tool\";\n//import Action from \"@/action\";\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\nimport { RootState, StrawState } from \"../../type\";\nimport { Tool } from \"@/tool\";\nimport { store } from \"../../Action\";\n\ninterface ColorProps {\n  color: string;\n  onChange: (color: string) => void;\n  //straw: StrawState;\n}\n\nconst ColorPicker = (props: ColorProps) => {\n  const { color, onChange } = props;\n  const [showColor, setColor] = useState(color);\n\n  const { straw } = useSelector((state: RootState) => {\n    return {\n      straw: state[\"paint.straw\"],\n    };\n  }, shallowEqual);\n\n  const handleChange = (color: any, event: any) => {\n    if (Tool.strawColor !== \"\") {\n      Tool.strawColor = \"\";\n    }\n    const hexColor: string = toHexString(color.rgb);\n    setColor(hexColor);\n    onChange(hexColor);\n  };\n\n  useEffect(() => {\n    setColor(straw.strawColor);\n  }, [straw.strawColor]);\n\n  useEffect(() => {\n    setColor(color);\n  }, [color]);\n\n  return (\n    <div className=\"colorBox\">\n      <h3>Color</h3>\n      <SketchPicker\n        className=\"colorBox-picker\"\n        width=\"100%\"\n        disableAlpha={false}\n        color={showColor}\n        onChange={handleChange}\n      />\n      <span\n        className={`straw-color ${straw.strawFlag ? \"selected-straw\" : \"\"}`}\n        onClick={() => {\n          Tool.strawFlag = true;\n          store.dispatch({\n            type: \"paint.straw\",\n            payload: { strawColor: color, strawFlag: true },\n          });\n        }}\n      >\n        {getToolIcon(\"strawIcon\")}\n      </span>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/Action.tsx",[],{"ruleId":"150","severity":1,"message":"151","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":18},{"ruleId":"150","severity":1,"message":"154","line":5,"column":20,"nodeType":"152","messageId":"153","endLine":5,"endColumn":29},{"ruleId":"150","severity":1,"message":"155","line":24,"column":5,"nodeType":"152","messageId":"153","endLine":24,"endColumn":10},{"ruleId":"150","severity":1,"message":"156","line":25,"column":5,"nodeType":"152","messageId":"153","endLine":25,"endColumn":11},{"ruleId":"150","severity":1,"message":"157","line":217,"column":22,"nodeType":"152","messageId":"153","endLine":217,"endColumn":34},{"ruleId":"150","severity":1,"message":"158","line":220,"column":22,"nodeType":"152","messageId":"153","endLine":220,"endColumn":39},{"ruleId":"150","severity":1,"message":"158","line":224,"column":20,"nodeType":"152","messageId":"153","endLine":224,"endColumn":37},{"ruleId":"150","severity":1,"message":"158","line":228,"column":21,"nodeType":"152","messageId":"153","endLine":228,"endColumn":38},{"ruleId":"150","severity":1,"message":"158","line":230,"column":27,"nodeType":"152","messageId":"153","endLine":230,"endColumn":44},{"ruleId":"150","severity":1,"message":"158","line":233,"column":20,"nodeType":"152","messageId":"153","endLine":233,"endColumn":37},{"ruleId":"150","severity":1,"message":"158","line":235,"column":23,"nodeType":"152","messageId":"153","endLine":235,"endColumn":40},{"ruleId":"150","severity":1,"message":"158","line":239,"column":22,"nodeType":"152","messageId":"153","endLine":239,"endColumn":39},{"ruleId":"150","severity":1,"message":"158","line":243,"column":21,"nodeType":"152","messageId":"153","endLine":243,"endColumn":38},{"ruleId":"150","severity":1,"message":"158","line":247,"column":20,"nodeType":"152","messageId":"153","endLine":247,"endColumn":40},{"ruleId":"150","severity":1,"message":"158","line":251,"column":22,"nodeType":"152","messageId":"153","endLine":251,"endColumn":32},{"ruleId":"159","severity":1,"message":"160","line":27,"column":5,"nodeType":"161","messageId":"162","endLine":27,"endColumn":17,"suggestions":"163"},{"ruleId":"150","severity":1,"message":"164","line":57,"column":16,"nodeType":"152","messageId":"153","endLine":57,"endColumn":31},{"ruleId":"150","severity":1,"message":"165","line":211,"column":13,"nodeType":"152","messageId":"153","endLine":211,"endColumn":22},{"ruleId":"150","severity":1,"message":"157","line":329,"column":27,"nodeType":"152","messageId":"153","endLine":329,"endColumn":39},{"ruleId":"150","severity":1,"message":"157","line":77,"column":22,"nodeType":"152","messageId":"153","endLine":77,"endColumn":34},{"ruleId":"150","severity":1,"message":"157","line":92,"column":27,"nodeType":"152","messageId":"153","endLine":92,"endColumn":39},{"ruleId":"150","severity":1,"message":"166","line":4,"column":3,"nodeType":"152","messageId":"153","endLine":4,"endColumn":24},{"ruleId":"150","severity":1,"message":"167","line":209,"column":3,"nodeType":"152","messageId":"153","endLine":209,"endColumn":38},{"ruleId":"150","severity":1,"message":"168","line":392,"column":11,"nodeType":"152","messageId":"153","endLine":392,"endColumn":13},{"ruleId":"150","severity":1,"message":"169","line":430,"column":16,"nodeType":"152","messageId":"153","endLine":430,"endColumn":23},{"ruleId":"150","severity":1,"message":"157","line":458,"column":27,"nodeType":"152","messageId":"153","endLine":458,"endColumn":39},{"ruleId":"150","severity":1,"message":"170","line":16,"column":27,"nodeType":"152","messageId":"153","endLine":16,"endColumn":32},{"ruleId":"150","severity":1,"message":"171","line":3,"column":15,"nodeType":"152","messageId":"153","endLine":3,"endColumn":19},{"ruleId":"150","severity":1,"message":"169","line":32,"column":16,"nodeType":"152","messageId":"153","endLine":32,"endColumn":23},{"ruleId":"150","severity":1,"message":"172","line":9,"column":10,"nodeType":"152","messageId":"153","endLine":9,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":79,"column":33,"nodeType":"161","messageId":"162","endLine":79,"endColumn":43,"suggestions":"173"},{"ruleId":"159","severity":1,"message":"160","line":262,"column":23,"nodeType":"161","messageId":"162","endLine":262,"endColumn":36,"suggestions":"174"},{"ruleId":"150","severity":1,"message":"175","line":263,"column":31,"nodeType":"152","messageId":"153","endLine":263,"endColumn":37},{"ruleId":"159","severity":1,"message":"160","line":264,"column":37,"nodeType":"161","messageId":"162","endLine":264,"endColumn":47,"suggestions":"176"},{"ruleId":"159","severity":1,"message":"160","line":331,"column":7,"nodeType":"161","messageId":"162","endLine":331,"endColumn":14,"suggestions":"177"},{"ruleId":"150","severity":1,"message":"157","line":371,"column":40,"nodeType":"152","messageId":"153","endLine":371,"endColumn":47},{"ruleId":"150","severity":1,"message":"178","line":7,"column":10,"nodeType":"152","messageId":"153","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"179","line":8,"column":21,"nodeType":"152","messageId":"153","endLine":8,"endColumn":31},{"ruleId":"150","severity":1,"message":"158","line":28,"column":37,"nodeType":"152","messageId":"153","endLine":28,"endColumn":47},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'width' is assigned a value but never used.","'height' is assigned a value but never used.","'options' is defined but never used.","'event' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["180"],"'absolutePointer' is assigned a value but never used.","'shapeType' is assigned a value but never used.","'getPixelColorOnCanvas' is defined but never used.","'fillColor' is defined but never used.","'fe' is assigned a value but never used.","'pointer' is assigned a value but never used.","'color' is assigned a value but never used.","'Tool' is defined but never used.","'efficentFloodFill' is defined but never used.",["181"],["182"],"'deltaX' is assigned a value but never used.",["183"],["184"],"'connect' is defined but never used.","'StrawState' is defined but never used.",{"messageId":"185","fix":"186","desc":"187"},{"messageId":"185","fix":"188","desc":"187"},{"messageId":"185","fix":"189","desc":"187"},{"messageId":"185","fix":"190","desc":"187"},{"messageId":"185","fix":"191","desc":"187"},"suggestOptionalChain",{"range":"192","text":"193"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"194","text":"193"},{"range":"195","text":"193"},{"range":"196","text":"193"},{"range":"197","text":"193"},[617,618],"?",[2470,2471],[7599,7600],[7720,7721],[9553,9554]]