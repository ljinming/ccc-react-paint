[{"/Users/ming/code-work/ccc-react-paint/src/index.tsx":"1","/Users/ming/code-work/ccc-react-paint/src/CCCPaint.tsx":"2","/Users/ming/code-work/ccc-react-paint/src/util/toolType.ts":"3","/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/index.ts":"4","/Users/ming/code-work/ccc-react-paint/src/context/index.ts":"5","/Users/ming/code-work/ccc-react-paint/src/components/edit/index.tsx":"6","/Users/ming/code-work/ccc-react-paint/src/components/canvas/index.tsx":"7","/Users/ming/code-work/ccc-react-paint/src/util/tool/shape.ts":"8","/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/event.ts":"9","/Users/ming/code-work/ccc-react-paint/src/components/canvas/TextBox.tsx":"10","/Users/ming/code-work/ccc-react-paint/src/util/tool/tool.ts":"11","/Users/ming/code-work/ccc-react-paint/src/util/tool/index.ts":"12","/Users/ming/code-work/ccc-react-paint/src/util/snapshot/index.ts":"13","/Users/ming/code-work/ccc-react-paint/src/util/tool/pen.ts":"14","/Users/ming/code-work/ccc-react-paint/src/util/tool/colorExtract.ts":"15","/Users/ming/code-work/ccc-react-paint/src/util/tool/eraser.ts":"16","/Users/ming/code-work/ccc-react-paint/src/util/tool/Text.ts":"17","/Users/ming/code-work/ccc-react-paint/src/util/tool/colorFill.ts":"18","/Users/ming/code-work/ccc-react-paint/src/components/edit/other/index.tsx":"19","/Users/ming/code-work/ccc-react-paint/src/components/edit/other/Resize.tsx":"20","/Users/ming/code-work/ccc-react-paint/src/components/right/index.tsx":"21","/Users/ming/code-work/ccc-react-paint/src/components/tool/index.tsx":"22","/Users/ming/code-work/ccc-react-paint/src/components/right/pen/index.tsx":"23","/Users/ming/code-work/ccc-react-paint/src/components/right/formatColor/index.tsx":"24","/Users/ming/code-work/ccc-react-paint/src/components/right/showShape/index.tsx":"25","/Users/ming/code-work/ccc-react-paint/src/components/right/text/index.tsx":"26","/Users/ming/code-work/ccc-react-paint/src/components/right/components/colorPanel/index.tsx":"27","/Users/ming/code-work/ccc-react-paint/src/components/right/components/slider/index.tsx":"28","/Users/ming/code-work/ccc-react-paint/src/components/right/components/shape/index.tsx":"29","/Users/ming/code-work/ccc-react-paint/src/components/canvas/utils.tsx":"30"},{"size":161,"mtime":1655098830734,"results":"31","hashOfConfig":"32"},{"size":5627,"mtime":1655116007710,"results":"33","hashOfConfig":"32"},{"size":918,"mtime":1655099997921,"results":"34","hashOfConfig":"32"},{"size":2010,"mtime":1654835133986,"results":"35","hashOfConfig":"32"},{"size":1418,"mtime":1655092109302,"results":"36","hashOfConfig":"32"},{"size":239,"mtime":1655100299245,"results":"37","hashOfConfig":"32"},{"size":9797,"mtime":1655118718155,"results":"38","hashOfConfig":"32"},{"size":8172,"mtime":1654835133987,"results":"39","hashOfConfig":"32"},{"size":136,"mtime":1655092109303,"results":"40","hashOfConfig":"32"},{"size":481,"mtime":1655111812584,"results":"41","hashOfConfig":"32"},{"size":3074,"mtime":1654835133987,"results":"42","hashOfConfig":"32"},{"size":247,"mtime":1654835133987,"results":"43","hashOfConfig":"32"},{"size":948,"mtime":1654835133986,"results":"44","hashOfConfig":"32"},{"size":3074,"mtime":1654835133987,"results":"45","hashOfConfig":"32"},{"size":1008,"mtime":1654835133987,"results":"46","hashOfConfig":"32"},{"size":194,"mtime":1655115988550,"results":"47","hashOfConfig":"32"},{"size":3847,"mtime":1655116037380,"results":"48","hashOfConfig":"32"},{"size":3621,"mtime":1655092109303,"results":"49","hashOfConfig":"32"},{"size":1341,"mtime":1655100375380,"results":"50","hashOfConfig":"32"},{"size":2330,"mtime":1655120030901,"results":"51","hashOfConfig":"32"},{"size":1141,"mtime":1655100137505,"results":"52","hashOfConfig":"32"},{"size":3243,"mtime":1655100523306,"results":"53","hashOfConfig":"32"},{"size":731,"mtime":1655114459818,"results":"54","hashOfConfig":"32"},{"size":1126,"mtime":1655100256887,"results":"55","hashOfConfig":"32"},{"size":535,"mtime":1655099829259,"results":"56","hashOfConfig":"32"},{"size":3525,"mtime":1655100234090,"results":"57","hashOfConfig":"32"},{"size":1716,"mtime":1655100482691,"results":"58","hashOfConfig":"32"},{"size":1030,"mtime":1655099829254,"results":"59","hashOfConfig":"32"},{"size":3996,"mtime":1655100198195,"results":"60","hashOfConfig":"32"},{"size":628,"mtime":1655115662327,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1tiwiaa",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/ming/code-work/ccc-react-paint/src/index.tsx",[],[],"/Users/ming/code-work/ccc-react-paint/src/CCCPaint.tsx",["128"],"import React, { Ref, useImperativeHandle } from \"react\";\nimport Canvas from \"./components/canvas\";\nimport {\n  ToolTypeContext,\n  ShapeTypeContext,\n  ShapeOutlineContext,\n  LineWidthContext,\n  ColorContext,\n  FillContext,\n  TextContext,\n  SizeContext,\n  DispatcherContext\n} from \"./context\";\nimport \"./style.less\";\nimport { useState } from \"react\";\nimport { ColorType, LineWidthType, ShapeOutlineType, ShapeToolType, ToolType } from \"./util/toolType\";\nimport ToolPanel from \"./components/tool\";\nimport Dispatcher from \"./util/dispatcher\";\nimport Right from \"./components/right\";\nimport Edit from \"./components/edit\";\nimport \"@/assets/font.css\";\n\ninterface PaintProps {\n  imgSrc?: string;\n  width?: number;\n  height?: number;\n  background?: string;\n  id?: string;\n  cRef?: any;\n  onClick?: (type: any) => void;\n}\n\nfunction Paint(props: PaintProps): JSX.Element {\n  const { id = \"test\", imgSrc, width, height, background, onClick, cRef } = props;\n  const [toolType, setToolType] = useState<ToolType>(ToolType.PEN);\n  const [shapeType, setShapeType] = useState<ShapeToolType>(ShapeToolType.LINE);\n  const [shapeOutlineType, setShapeOutlineType] = useState<ShapeOutlineType>(ShapeOutlineType.SOLID);\n  const [lineWidthType, setLineWidthType] = useState<LineWidthType>(LineWidthType.LINESIZE);\n  const [lineSize, setLineFontSize] = useState<number>(1);\n  const [fillColor, setFillColor] = useState<string>(\"\");\n  const [size, setSize] = useState({ width, height });\n  const [activeColorType, setActiveColorType] = useState<ColorType>(ColorType.MAIN);\n  const [fontStyle, setFontStyle] = useState({});\n  const [mainColor, setMainColor] = useState<string>(\"black\");\n  const [subColor, setSubColor] = useState<string>(\"white\");\n  const [dispatcher] = useState(new Dispatcher());\n\n  const setColor = (value: string) => {\n    if (activeColorType === ColorType.MAIN) {\n      setMainColor(value);\n    } else {\n      setSubColor(value);\n    }\n  };\n\n  useImperativeHandle(cRef, () => ({\n    getCurrentImageData: () => {\n      const canvasElem: any = document.getElementById(`ccc-paint-canvas ${id}`);\n      const imageData = canvasElem.toDataURL(\"image/png\");\n      return imageData;\n    }\n  }));\n\n  return (\n    <ToolTypeContext.Provider value={{ type: toolType, setType: setToolType }}>\n      <ShapeTypeContext.Provider\n        value={{\n          type: shapeType,\n          setType: (type: ShapeToolType) => {\n            setToolType(ToolType.SHAPE);\n            setShapeType(type);\n          }\n        }}\n      >\n        <ShapeOutlineContext.Provider value={{ type: shapeOutlineType, setType: setShapeOutlineType }}>\n          <LineWidthContext.Provider\n            value={{\n              type: lineWidthType,\n              lineSize: lineSize,\n              setType: setLineWidthType,\n              setLineSize: setLineFontSize\n            }}\n          >\n            <DispatcherContext.Provider value={{ dispatcher }}>\n              <ColorContext.Provider\n                value={{\n                  mainColor,\n                  subColor,\n                  activeColor: activeColorType,\n                  setColor,\n                  setActiveColor: setActiveColorType\n                }}\n              >\n                <SizeContext.Provider value={{ size, onSize: setSize }}>\n                  <FillContext.Provider\n                    value={{\n                      fillColor,\n                      setFillColor\n                    }}\n                  >\n                    <TextContext.Provider\n                      value={{\n                        fontStyle,\n                        setFont: setFontStyle\n                      }}\n                    >\n                      <div className=\"ccc\">\n                        <div className=\"ccc-edit\">\n                          <Edit />\n                        </div>\n                        <div className=\"ccc-content\">\n                          <div className=\"ToolPanel\">\n                            <ToolPanel className=\"toolbar-item\" />\n                          </div>\n                          <div className=\"show-Canvas\">\n                            <Canvas\n                              id={id}\n                              CanvasSize={size}\n                              imgSrc={imgSrc}\n                              background={background}\n                              onClick={onClick}\n                              CanvasWidth={width}\n                              CanvasHeight={height}\n                              fillColor={fillColor}\n                              toolType={toolType}\n                              fontStyle={fontStyle}\n                              shapeType={shapeType}\n                              shapeOutlineType={shapeOutlineType}\n                              mainColor={mainColor}\n                              subColor={subColor}\n                              lineSize={lineSize}\n                              lineWidthType={lineWidthType}\n                              setColor={setColor}\n                            />\n                          </div>\n                          <div className=\"show-type\">\n                            <Right toolType={toolType} />\n                          </div>\n                        </div>\n                      </div>\n                    </TextContext.Provider>\n                  </FillContext.Provider>\n                </SizeContext.Provider>\n              </ColorContext.Provider>\n            </DispatcherContext.Provider>\n          </LineWidthContext.Provider>\n        </ShapeOutlineContext.Provider>\n      </ShapeTypeContext.Provider>\n    </ToolTypeContext.Provider>\n  );\n}\n\nexport default Paint;\n","/Users/ming/code-work/ccc-react-paint/src/util/toolType.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/context/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/components/edit/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/canvas/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/shape.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/dispatcher/event.ts",[],"/Users/ming/code-work/ccc-react-paint/src/components/canvas/TextBox.tsx",["129"],"import React, { FC } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst TextBox: FC = () => {\n  return (\n    // <TextField\n    //   className=\"text-box\"\n    //   id=\"textBox\"\n    //   label=\"Multiline\"\n    //   multiline\n    //   rows={4}\n    //   // defaultValue=\"Default Value\"\n    // />\n    <textarea\n      id=\"textBox\"\n      name=\"story\"\n      autoFocus={true}\n      className=\"text-box\"\n      //rows={2}\n    ></textarea>\n  );\n};\nexport default TextBox;\n","/Users/ming/code-work/ccc-react-paint/src/util/tool/tool.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/snapshot/index.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/pen.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/colorExtract.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/eraser.ts",[],"/Users/ming/code-work/ccc-react-paint/src/util/tool/Text.ts",["130","131","132","133","134","135","136","137","138"],"import zIndex from \"@material-ui/core/styles/zIndex\";\nimport { ShapeToolType } from \"../toolType\";\nimport Tool, { Point, getMousePos, getTouchPos, hexToRgb, updateImageData } from \"./tool\";\n\n// interface propsInput = {\n//             x?: number,\n//             y?: Number,\n//             maxWidth?:Number\n// }\n\nclass Text extends Tool {\n  private isMouseDown = false;\n  private saveImageData?: ImageData;\n  private _x: number;\n  private _y: number;\n  private textContent: string;\n  private textBox: any;\n  private fontStyle: any;\n  private canvas: any;\n  private canvasText: any;\n  public constructor(fontType: any) {\n    super();\n    this._x = NaN;\n    this._y = NaN;\n    this.textBox = document.getElementById(\"textBox\");\n    this.canvas = document.getElementById(\"ccc-paint-canvas\");\n    this.canvasText = document.getElementById(\"canvas-text\");\n\n    this.textContent = \"\";\n    this.fontStyle = fontType;\n  }\n\n  private drawing(x: number, y: number) {\n    const context = Tool.ctx;\n    if (!context) {\n      return;\n    } else {\n      // 设置画笔的颜色和大小\n\n      context.fillStyle = \"#000\"; // 填充颜色为红色\n      // context.strokeStyle = \"blue\"; // 画笔的颜色\n      context.lineWidth = 5; // 指定描边线的宽度\n      context.font = \"10px\";\n\n      if (this.canvas && this.fontStyle) {\n        const { fontSize = 12, fontFamily, letterSpacing } = this.fontStyle;\n        context.fillStyle = this.textBox.color || \"#000\";\n        context.font = `${fontSize} ${fontFamily}`; // 指定描边线的宽度\n        this.canvas.style.letterSpacing = letterSpacing;\n      }\n\n      context.save();\n      context.beginPath();\n\n      // 写字\n      //   const width = this.canvas.offsetWidth;\n      //   console.log(\"----546\", this.canvas);\n      //   const height = this.canvas.offsetHeight;\n      //   const tempImg = new Image();\n      //   tempImg.width = width;\n      //   tempImg.height = height;\n      //   tempImg.onload = function () {\n      //     // 把img绘制在canvas画布上\n      //     context.drawImage(tempImg, 0, 0, width, height);\n      //   };\n      //   (tempImg.src =\n      //     'data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\"><foreignObject width=\"' +\n      //     width +\n      //     '\" height=\"' +\n      //     height +\n      //     '\"><body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;font:' +\n      //     context.font +\n      //     ';\">' +\n      //     this.textContent),\n      //     +\"</body></foreignObject></svg>\";\n      context.fillText(this.textContent, parseInt(this.textBox.style.left), parseInt(this.textBox.style.top));\n      // this.wrapText(this.textContent, parseInt(this.textBox.style.left), parseInt(this.textBox.style.top));\n      context.restore();\n      context.closePath();\n    }\n  }\n\n  public onMouseDown(event: MouseEvent): void {\n    // 鼠标按下位置保存\n\n    event.preventDefault();\n    if (this.isMouseDown) {\n      this.textContent = this.textBox.value;\n      this.isMouseDown = false;\n      this.textBox.style[\"z-index\"] = 1;\n      //  this.canvasText.style[\"z-index\"] = 1;\n      this.textBox.style.visibility = \"hidden\";\n      this.drawing(this._x, this._y);\n      this.textBox.value = \"\";\n    } else if (!this.isMouseDown) {\n      this._x = event.offsetX; // 鼠标按下时保存当前位置，为起始位置\n      this._y = event.offsetY;\n      this.isMouseDown = true;\n      if (typeof this.fontStyle === \"object\") {\n        Object.keys(this.fontStyle).forEach((va) => {\n          this.textBox.style[va] = this.fontStyle[va];\n        });\n      }\n      //  this.canvasText.style[\"z-index\"] = 5;\n      this.textBox.style[\"z-index\"] = 6;\n      this.textBox.style.visibility = \"visible\";\n      this.textBox.style.left = this._x + \"px\";\n      this.textBox.style.top = this._y + \"px\";\n    }\n  }\n}\n\nexport default Text;\n","/Users/ming/code-work/ccc-react-paint/src/util/tool/colorFill.ts",[],"/Users/ming/code-work/ccc-react-paint/src/components/edit/other/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/edit/other/Resize.tsx",["139"],"/Users/ming/code-work/ccc-react-paint/src/components/right/index.tsx",["140"],"import React, { useEffect } from \"react\";\nimport \"./index.less\";\nimport { ToolType } from \"../../util/toolType\";\nimport { FC } from \"react\";\nimport ShowPen from \"./pen\";\nimport ShowShape from \"./showShape\";\nimport FormatColor from \"./formatColor\";\nimport Text from \"./text\";\ninterface ToolbarProps {\n  toolType: ToolType;\n}\n\nconst ToolRightBar: FC<ToolbarProps> = (props) => {\n  const { toolType } = props;\n\n  const renderChild = (): any => {\n    let content = null;\n    switch (toolType) {\n      case ToolType.PEN:\n        content = <ShowPen />;\n        break;\n      case ToolType.SHAPE:\n        content = <ShowShape />;\n        break;\n      case ToolType.ERASER:\n        // setTool(new Eraser());\n        break;\n      case ToolType.TEXT:\n        content = <Text />;\n        break;\n      case ToolType.COLOR_FILL:\n        content = <FormatColor />;\n        break;\n      default:\n        break;\n    }\n    return content;\n  };\n\n  return <div className=\"ccc-showTool\">{renderChild()}</div>;\n};\n\nexport default React.memo(ToolRightBar, (preProps: ToolbarProps, nextProps: ToolbarProps) => {\n  return nextProps.toolType === ToolType.ERASER;\n});\n","/Users/ming/code-work/ccc-react-paint/src/components/tool/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/right/pen/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/right/formatColor/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/right/showShape/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/right/text/index.tsx",["141"],"import React from \"react\";\nimport { useContext } from \"react\";\nimport { TextContext, ColorContext } from \"@/context\";\nimport { ColorBox, createColor } from \"material-ui-color\";\nimport \"./index.less\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\nimport IntegerStep from \"../components/slider\";\nimport { useMemo } from \"react\";\n\ninterface FormatColor {\n  className?: string;\n}\n\nconst textFamily = [\n  \"Barlow-ExtraBold\",\n  \"DIN-AlternateBold\",\n  \"Trebuchet-MSBold\",\n  \"Trebuchet-MS\",\n  \"Poppins-Bold\",\n  \"Poppins-Light\",\n  \"Poppins-Medium\",\n  \"Poppins-Regular\",\n  \"Poppins-SemiBold\"\n];\n\nconst FormatColor: React.FC<FormatColor> = (props) => {\n  const { className } = props;\n  const [pickerColor, setPickerColor] = useState(createColor(\"#000000FF\"));\n  const TextToolContext = useContext(TextContext);\n  const colorContext = useContext(ColorContext);\n\n  const fontStyle = useMemo(() => {\n    return TextToolContext.fontStyle;\n  }, [TextToolContext.fontStyle]);\n\n  const activeColorType = colorContext.activeColor;\n\n  useEffect(() => {\n    colorContext.setColor(`#${pickerColor.hex}`);\n  }, [pickerColor]);\n\n  return (\n    <div className={className ? ` ccc-text formatColor ${className}` : \"ccc-text colorpanel\"}>\n      <div className=\"content\">\n        <div className=\"font\">\n          <h3>Font</h3>\n          <FormControl fullWidth>\n            <Select\n              autoWidth\n              className=\"ccc-text-family\"\n              onChange={(event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n                TextToolContext.setFont({\n                  ...fontStyle,\n                  fontFamily: event.target.value as string\n                });\n              }}\n            >\n              {textFamily.map((va) => {\n                return (\n                  <MenuItem key={va} value={va}>\n                    {va}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"font\">\n          <h3>Letter Spacing</h3>\n          <IntegerStep\n            min={1}\n            max={8}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                letterSpacing: value + \"px\"\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>Font Size</h3>\n          <IntegerStep\n            min={12}\n            max={72}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                fontSize: value + \"px\"\n              });\n            }}\n          />\n        </div>\n        <div className=\"font\">\n          <h3>FLine Height</h3>\n          <IntegerStep\n            min={24}\n            max={56}\n            onPropsChange={(value) => {\n              TextToolContext.setFont({\n                ...fontStyle,\n                lineHeight: value + \"px\"\n              });\n            }}\n          />\n        </div>\n        <h3>color</h3>\n        <div className=\"material-color-box\">\n          <ColorBox\n            value={pickerColor}\n            disableAlpha={false}\n            onChange={(color) => {\n              setPickerColor(color);\n              TextToolContext.setFont({\n                ...fontStyle,\n                color: \"#\" + color.hex\n              });\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormatColor;\n","/Users/ming/code-work/ccc-react-paint/src/components/right/components/colorPanel/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/right/components/slider/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/right/components/shape/index.tsx",[],"/Users/ming/code-work/ccc-react-paint/src/components/canvas/utils.tsx",[],{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":20},{"ruleId":"142","severity":1,"message":"146","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":17},{"ruleId":"142","severity":1,"message":"147","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":23},{"ruleId":"142","severity":1,"message":"149","line":3,"column":16,"nodeType":"144","messageId":"145","endLine":3,"endColumn":21},{"ruleId":"142","severity":1,"message":"150","line":3,"column":23,"nodeType":"144","messageId":"145","endLine":3,"endColumn":34},{"ruleId":"142","severity":1,"message":"151","line":3,"column":36,"nodeType":"144","messageId":"145","endLine":3,"endColumn":47},{"ruleId":"142","severity":1,"message":"152","line":3,"column":49,"nodeType":"144","messageId":"145","endLine":3,"endColumn":57},{"ruleId":"142","severity":1,"message":"153","line":3,"column":59,"nodeType":"144","messageId":"145","endLine":3,"endColumn":74},{"ruleId":"142","severity":1,"message":"154","line":33,"column":19,"nodeType":"144","messageId":"145","endLine":33,"endColumn":28},{"ruleId":"142","severity":1,"message":"155","line":33,"column":30,"nodeType":"144","messageId":"145","endLine":33,"endColumn":39},{"ruleId":"142","severity":1,"message":"156","line":25,"column":9,"nodeType":"144","messageId":"145","endLine":25,"endColumn":20},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"158","line":38,"column":9,"nodeType":"144","messageId":"145","endLine":38,"endColumn":24},"@typescript-eslint/no-unused-vars","'Ref' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'zIndex' is defined but never used.","'ShapeToolType' is defined but never used.","'Point' is defined but never used.","'getMousePos' is defined but never used.","'getTouchPos' is defined but never used.","'hexToRgb' is defined but never used.","'updateImageData' is defined but never used.","'x' is defined but never used.","'y' is defined but never used.","'handleClick' is assigned a value but never used.","'useEffect' is defined but never used.","'activeColorType' is assigned a value but never used."]