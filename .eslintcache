[{"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx":"1","/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx":"2","/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx":"3","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx":"4","/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx":"5","/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx":"6","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx":"7","/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx":"8","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx":"9","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx":"10","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx":"11","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx":"12","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx":"13","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx":"14","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx":"15","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx":"16","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx":"17","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts":"18","/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx":"19","/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx":"20","/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx":"21","/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx":"22","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts":"23","/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx":"24"},{"size":170,"mtime":1657536415726,"results":"25","hashOfConfig":"26"},{"size":234,"mtime":1657541438713,"results":"27","hashOfConfig":"26"},{"size":1343,"mtime":1657540717648,"results":"28","hashOfConfig":"26"},{"size":2221,"mtime":1657541363731,"results":"29","hashOfConfig":"26"},{"size":1259,"mtime":1657541413198,"results":"30","hashOfConfig":"26"},{"size":4218,"mtime":1657540907519,"results":"31","hashOfConfig":"26"},{"size":8713,"mtime":1657541408507,"results":"32","hashOfConfig":"26"},{"size":5737,"mtime":1657541419449,"results":"33","hashOfConfig":"26"},{"size":641,"mtime":1657538912855,"results":"34","hashOfConfig":"26"},{"size":1567,"mtime":1657541403776,"results":"35","hashOfConfig":"26"},{"size":3545,"mtime":1657540666030,"results":"36","hashOfConfig":"26"},{"size":1565,"mtime":1657540709121,"results":"37","hashOfConfig":"26"},{"size":654,"mtime":1657540636600,"results":"38","hashOfConfig":"26"},{"size":367,"mtime":1657540651047,"results":"39","hashOfConfig":"26"},{"size":1184,"mtime":1657539042948,"results":"40","hashOfConfig":"26"},{"size":13685,"mtime":1657075208507,"results":"41","hashOfConfig":"26"},{"size":10436,"mtime":1657540617679,"results":"42","hashOfConfig":"26"},{"size":3956,"mtime":1657004207761,"results":"43","hashOfConfig":"26"},{"size":3931,"mtime":1657183112096,"results":"44","hashOfConfig":"26"},{"size":2002,"mtime":1657541158218,"results":"45","hashOfConfig":"26"},{"size":695,"mtime":1657085025965,"results":"46","hashOfConfig":"26"},{"size":2020,"mtime":1657536906010,"results":"47","hashOfConfig":"26"},{"size":379,"mtime":1655803604529,"results":"48","hashOfConfig":"26"},{"size":1177,"mtime":1657541444896,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1sw6yjp",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jinmingliu/work/ccc-react-paint/src/index.tsx",[],[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/header/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/index.tsx",["105","106","107","108","109","110","111","112","113"],"/Users/jinmingliu/work/ccc-react-paint/src/tool/eraser.tsx",["114"],"/Users/jinmingliu/work/ccc-react-paint/src/tool/tool.tsx",["115","116","117","118","119","120","121","122","123","124"],"import { fabric } from \"fabric\";\n//import Action from \"@/action\";\nimport { rgbToHex } from \"./colorChange\";\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface Pencil {\n  lineWidth: number;\n  strokeColor: string;\n}\n\n// 随机color\nexport const getRandomColor = () => {\n  return (\n    \"#\" + (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).substr(-6)\n  );\n};\n\n// strawColor\n\nexport const setStrawColor = (pos: Point) => {\n  const ctx = Tool.canvas.getContext();\n  const color = getPixelColorOnCanvas(pos, ctx);\n  Tool.strawColor = color;\n  Tool.strawFlag = false;\n  // Action.emit(\"paint.straw\", { strawColor: color, strawFlag: false });\n};\n//鼠标点颜色\nexport const getPixelColorOnCanvas = (\n  pos: Point,\n  ctx: CanvasRenderingContext2D\n) => {\n  const p = ctx.getImageData(pos.x, pos.y, 1, 1).data;\n  return rgbToHex(p[0], p[1], p[2], p[3]);\n};\n\nexport default class Tool {\n  //选择的工具\n  public toolType: string = \"PEN\";\n\n  // canvas\n  public static canvas: fabric.Canvas;\n  static toolType: string;\n  static img: fabric.Image;\n  static strawColor: string;\n  static strawFlag: boolean;\n  static canvasObj = [];\n\n  static recordTimer: any;\n  static stateArr: any[] = [];\n  static stateIdx: any = 0;\n  static transform: string;\n  static currentScale: number;\n  static ToolStoreList: any[] = [];\n  static imgSrc: string;\n  static nextCanvas: any = [];\n\n  // 撤销 或 还原\n  static tapHistoryBtn(flag: number) {\n    let current;\n    if (this.canvas) {\n      if (flag < 0 && this.ToolStoreList.length < 10) {\n        const tagCanvas = this.ToolStoreList.pop();\n        if (tagCanvas && this.canvas) {\n          this.nextCanvas.push(tagCanvas);\n          current = tagCanvas;\n        }\n      } else if (flag > 0 && this.nextCanvas.length > 0) {\n        //回到撤回前一步\n        const canvasData = this.nextCanvas.pop();\n        if (canvasData) {\n          current = canvasData;\n        }\n      }\n      if (current && this.canvas) {\n        let canvasTool: HTMLCanvasElement | undefined =\n          document.createElement(\"canvas\");\n        canvasTool.width = current.width;\n        canvasTool.height = current.height;\n        canvasTool?.getContext(\"2d\")?.putImageData(current, 0, 0);\n        const url = canvasTool.toDataURL();\n        this.canvas.clear();\n        this.canvas.setBackgroundImage(\n          url,\n          (img: any) => {\n            img.selectable = false;\n            img.evented = false;\n            this.canvas.renderAll();\n          },\n          { crossOrigin: \"anonymous\", scaleX: 0.5, scaleY: 0.5 }\n        );\n        canvasTool = undefined;\n      }\n    }\n\n    // if (this.canvas) {\n    //   if (flag < 0 && this.canvasObj.length < 10) {\n    //     const removeList =\n    //       this.canvas.getObjects().filter((c) => c.width) || [];\n    //     const tagCanvas = removeList[removeList.length - 1];\n    //     this.canvasObj.push(tagCanvas);\n    //     this.canvas.remove(tagCanvas);\n    //   } else if (flag > 0 && this.canvasObj.length > 0) {\n    //     //回到撤回前一步\n    //     const current = this.canvasObj.pop();\n    //     if (current) {\n    //       this.canvas.add(current);\n    //     }\n    //   }\n    // }\n  }\n\n  //清空画布\n  static clearAll() {\n    // 获取画布中的所有对象\n    if (this.canvas) {\n      if (this.ToolStoreList.length > 0) {\n        this.ToolStoreList = [];\n        this.nextCanvas = [];\n        this.canvas.clear();\n        this.canvas.setBackgroundImage(Tool.imgSrc, (img: any) => {\n          img.selectable = false;\n          img.evented = false;\n          this.canvas.renderAll();\n        });\n      }\n    }\n  }\n\n  public onMouseDown(options: any): void {\n    //\n  }\n  public onMouseMove(event: MouseEvent): void {\n    //\n  }\n\n  public onMouseUp(event: MouseEvent): void {\n    //\n  }\n\n  public onSelected(event: MouseEvent): void {}\n\n  public onCancelSelected(event: MouseEvent): void {}\n\n  //双击\n  public onDbClick(event: MouseEvent): void {}\n\n  public onTouchStart(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchMove(event: TouchEvent): void {\n    //\n  }\n\n  public onTouchEnd(event: TouchEvent): void {\n    //\n  }\n\n  public onKeyDown(event: KeyboardEvent): void {\n    //\n  }\n}\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/shape.tsx",["125","126"],"/Users/jinmingliu/work/ccc-react-paint/src/tool/bucket.tsx",["127","128"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Pencil.tsx",["129"],"import Sider from \"../../components/sliderCard\";\nimport ColorPicker from \"../../components/colorPicker\";\nimport { Pen, Tool } from \"@/tool\";\n\nconst Pencil = () => {\n  const handleChange = (type: string, value: number | string) => {\n    Pen.setPenStyle(type, value);\n  };\n\n  return (\n    <>\n      <Sider\n        title=\"Brush thickness\"\n        options={{ max: 200, min: 1 }}\n        defaultValue={20}\n        onChange={(value: number) => handleChange(\"lineWidth\", value)}\n      />\n      <ColorPicker\n        color={Pen.color}\n        onChange={(color: string) => handleChange(\"color\", color)}\n      />\n    </>\n  );\n};\n\nexport default Pencil;\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/Text.tsx",["130","131"],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Shape.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Text.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/Eraser.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/FillColor.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/ToolType.tsx",["132"],"import { ToolTypeList } from \"../utils\";\nimport { getToolIcon } from \"../utils/tool\";\nimport { toolItem } from \"../utils/tsType\";\n//import Action from \"@/action\";\n\ninterface ToolProps {\n  prefix: string;\n  select?: string;\n  color?: string;\n}\n\nconst ToolType = (props: ToolProps) => {\n  const { prefix, select, color } = props;\n\n  return (\n    <ul className={`${prefix}-tool`}>\n      {ToolTypeList.map((va: toolItem) => {\n        return (\n          <li\n            title={va.title}\n            className={`${\n              select === va.key ? \"tool-item select\" : \"tool-item\"\n            }`}\n            key={va.key}\n            onClick={() => {\n              // Action.emit(\"paint.tool\", {\n              //   select: va.key,\n              // });\n            }}\n          >\n            <span style={{ position: \"relative\", display: \"inline-block\" }}>\n              {getToolIcon(va.icon)}\n              {va.key === \"BUCKET\" && (\n                <span\n                  className=\"bucket-icon\"\n                  //style={{ backgroundColor: color }}\n                />\n              )}\n            </span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ToolType;\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/tool.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/index.tsx",["133","134","135","136","137","138"],"import { fabric } from \"fabric\";\nimport { Tool, Pen, Shape, Eraser, Bucket, CanvasText } from \"@/tool\";\nimport { useEffect, useRef, useState } from \"react\";\nimport cursorPen from \"@/assets/icon/cursorPen.jpg\";\nimport cursorErase from \"@/assets/icon/cursorErase.jpg\";\nimport straw_jpg from \"@/assets/icon/straw.jpg\";\nimport bucket from \"@/assets/icon/bucket.jpg\";\n\nimport { efficentFloodFill, getTrans } from \"./utils\";\nimport \"./index.less\";\nimport ToolType from \"../ToolType\";\n\nlet translatex = 0;\nlet translatey = 0;\nlet show_scale = 1;\nconst scaleStep = 0.01;\nconst maxScale = 6;\nconst minScale = 0.1;\n\n/*设置为2d模块 如不设置 默认webgl 为true*/\nconst canvas2dBackend = new fabric.Canvas2dFilterBackend();\nfabric.filterBackend = canvas2dBackend;\n\n/*filter*/\nfabric.Image.filters[\"ChangeColorFilter\"] = fabric.util.createClass(\n  fabric.Image.filters.BaseFilter,\n  {\n    type: \"ChangeColorFilter\",\n    applyTo: function (options: any) {\n      let imageData = options.imageData;\n      // const context = options.canvasEl.getContext(\"2d\");\n      // const newimageData = context.getImageData(\n      //   0,\n      //   0,\n      //   options.canvasEl.width,\n      //   options.canvasEl.height\n      // );\n      // const ctx = options.ctx;\n      if (this.fillColor && this.pos) {\n        imageData = efficentFloodFill(\n          imageData,\n          this.pos.x,\n          this.pos.y,\n          this.fillColor\n        );\n      }\n      options.ctx.putImageData(this.ctx || imageData, 0, 0);\n    },\n  }\n);\n\nfabric.Image.filters[\"ChangeColorFilter\"].fromObject = function (object: any) {\n  return new fabric.Image.filters[\"ChangeColorFilter\"](object);\n};\n\ninterface CanvasProps {\n  backgroundColor?: string;\n  canvasSize: {\n    width: number;\n    height: number;\n  };\n  imgSrc?: string;\n  tool: string;\n  id?: string;\n  straw: {\n    strawFlag: boolean;\n    strawColor: string;\n  };\n}\nexport default (props: CanvasProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const canvasBoxRef = useRef<HTMLDivElement>(null);\n  const [manager, setManage] = useState<Tool>();\n  const [fabricCanvas, setCanvas] = useState<fabric.Canvas>();\n  const { canvasSize, imgSrc, backgroundColor, tool, id, straw } = props;\n  useEffect(() => {\n    const canvasBox = canvasBoxRef.current;\n    const canvasCurrent = canvasRef.current;\n    if (canvasBox && canvasCurrent) {\n      const { width, height } = canvasBox!.getBoundingClientRect();\n      if (canvasSize && canvasCurrent) {\n        const showScale =\n          Math.min(width, height) /\n            Math.max(canvasSize.height, canvasSize.width) || 1;\n        translatex = (width - canvasSize.width * showScale) / 2;\n        translatey = (height - canvasSize.height * showScale) / 2;\n        canvasCurrent.style.transform = `scale(${showScale}) translate(${translatex}px,${translatey}px)`;\n        show_scale = showScale;\n        //初始化画布\n        const canvas = new fabric.Canvas(canvasCurrent, {\n          width: canvasSize.width, // 画布宽度\n          height: canvasSize.height, // 画布高度\n          backgroundColor: backgroundColor || \"#2d2d2d\", // 画布背景色\n        });\n\n        Tool.canvas = canvas;\n        Tool.transform = `scale(${showScale}) translate(${translatex}px,${translatey}px)`;\n        Tool.currentScale = showScale;\n        canvas.freeDrawingCursor = `url(${cursorPen}) 12 16,auto`;\n        setManage(new Pen());\n        if (imgSrc) {\n          Tool.imgSrc = imgSrc;\n          fabric.Image.fromURL(\n            imgSrc,\n            (img) => {\n              img.selectable = false;\n              img.evented = false;\n              img.width = canvasSize.width;\n              img.filters?.push(\n                new fabric.Image.filters[\"ChangeColorFilter\"]()\n              );\n              img.applyFilters();\n              Tool.img = img;\n              canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n            },\n            { crossOrigin: \"anonymous\" }\n          );\n        }\n        setCanvas(canvas);\n      }\n    }\n  }, [canvasSize]);\n\n  useEffect(() => {\n    Tool.toolType = tool;\n    if (fabricCanvas) {\n      switch (tool) {\n        case \"PEN\":\n          // 开启绘画功能\n          setManage(new Pen());\n          break;\n        case \"SHAPE\":\n          //关闭绘画功能\n          setManage(new Shape());\n          break;\n        case \"ERASER\":\n          setManage(new Eraser());\n          break;\n        case \"BUCKET\":\n          setManage(new Bucket());\n          break;\n        case \"TEXT\":\n          Tool.canvas.isDrawingMode = false;\n          setManage(new CanvasText());\n          break;\n      }\n    }\n  }, [tool]);\n\n  useEffect(() => {\n    if (fabricCanvas) {\n      if (straw.strawFlag) {\n        fabricCanvas.freeDrawingCursor = `url(${straw_jpg}) 6 20,auto`;\n      } else {\n        switch (tool) {\n          case \"PEN\":\n            // 开启绘画功能\n            fabricCanvas.freeDrawingCursor = `url(${cursorPen}) 12 16,auto`;\n            break;\n          case \"ERASER\":\n            fabricCanvas.freeDrawingCursor = `url(${cursorErase}) 12 16,auto`;\n            break;\n          case \"BUCKET\":\n            fabricCanvas.defaultCursor = `url(${bucket}) 12 16,auto`;\n            break;\n          default:\n            fabricCanvas.defaultCursor = \"default\";\n        }\n      }\n    }\n  }, [tool, straw.strawFlag]);\n\n  const clacCanvasTransform = (\n    scale: number,\n    translatex: number,\n    translatey: number\n  ) => {\n    const upEleCanvasList =\n      document.getElementsByClassName(\"upper-canvas\") || [];\n    let upEleCanvas;\n\n    for (let i = 0; i < upEleCanvasList.length; i++) {\n      if (upEleCanvasList[i]?.clientWidth === canvasSize.width) {\n        upEleCanvas = upEleCanvasList[i];\n        break;\n      }\n    }\n    //\n    const new_translatex = Number((translatex / scale).toFixed(3));\n    const new_translatey = Number((translatey / scale).toFixed(3));\n\n    if (upEleCanvas) {\n      upEleCanvas[\n        \"style\"\n      ].transform = `scale(${scale}) translate(${new_translatex}px,${new_translatey}px)`;\n    }\n  };\n\n  const onMouseDown = (options: any) => {\n    if (manager) {\n      manager.onMouseDown(options);\n    }\n  };\n  const onMouseMove = (options: any) => {\n    if (manager && tool === \"SHAPE\") {\n      manager.onMouseMove(options);\n    }\n  };\n\n  const onMouseUp = (options: any) => {\n    if (manager) {\n      const ctx = Tool.canvas.getContext();\n      const imageData = ctx.getImageData(\n        0,\n        0,\n        ctx.canvas.width,\n        ctx.canvas.height\n      );\n      if (Tool.ToolStoreList.length < 10) {\n        Tool.ToolStoreList.push(imageData);\n      } else {\n        Tool.ToolStoreList.shift();\n        Tool.ToolStoreList.push(imageData);\n      }\n      manager.onMouseUp(options);\n    }\n  };\n\n  const onSelected = (options: any) => {\n    if (manager && tool === \"SHAPE\") {\n      manager.onSelected(options);\n    }\n  };\n\n  const onCancelSelected = (options: any) => {\n    if (manager) {\n      manager.onCancelSelected(options);\n    }\n  };\n\n  const onDbClick = (options: any) => {\n    if (manager) {\n      manager.onDbClick(options);\n    }\n  };\n\n  const onWheel = (options: any) => {\n    const { e: event } = options;\n    event.preventDefault();\n    const canvas = canvasRef.current;\n    const container = canvasBoxRef!.current;\n    const { clientX, clientY, deltaX, deltaY, ctrlKey } = event;\n    const { width, height, x, y } = container!.getBoundingClientRect();\n    let newScale;\n    if (canvas) {\n      if (ctrlKey) {\n        //双指放大缩小\n        if (deltaY < 0) {\n          newScale = show_scale + scaleStep;\n          newScale = Math.min(newScale, maxScale);\n        } else {\n          newScale = show_scale - scaleStep;\n          newScale = Math.max(newScale, minScale);\n        }\n        const transX = getTrans(\n          clientX,\n          newScale,\n          \"width\",\n          canvasSize,\n          {\n            width,\n            height,\n            x,\n            y,\n          },\n          show_scale,\n          translatex,\n          translatey\n        );\n        const transY = getTrans(\n          clientY,\n          newScale,\n          \"height\",\n          canvasSize,\n          {\n            width,\n            height,\n            x,\n            y,\n          },\n          show_scale,\n          translatex,\n          translatey\n        );\n        translatex = translatex - transX;\n        translatey = translatey - transY;\n        show_scale = newScale;\n        canvas.style.transform = `translate(${translatex}px, ${translatey}px) scale(${show_scale})`;\n        clacCanvasTransform(newScale, translatex, translatey);\n      }\n    }\n  };\n\n  const onCanvasBoxWheel = (event: WheelEvent) => {\n    event.preventDefault();\n    const { deltaX, deltaY, ctrlKey } = event;\n    const canvas = canvasRef.current;\n    if (!ctrlKey) {\n      if (!!deltaX && !deltaY) {\n        // if (translatex > 0 && translatex < width) {\n        // 左右移动 向右 -deltaX < 0  向左   >0\n        translatex = Number((translatex - deltaX).toFixed(3));\n        // }\n      } else if (!!deltaY && !deltaX) {\n        // if (translatey > 0 && translatex < height) {\n        // 左右移动 向右 -deltaX < 0  向左   >0\n        translatey = Number((translatey - deltaY).toFixed(3));\n        // }\n      }\n      canvas!.style.transform = `translate(${translatex}px, ${translatey}px) scale(${show_scale})`;\n      clacCanvasTransform(show_scale, translatex, translatey);\n    }\n  };\n\n  useEffect(() => {\n    const canvasBox = canvasBoxRef.current;\n    if (fabricCanvas && canvasBox) {\n      fabricCanvas.on(\"mouse:down\", onMouseDown);\n      fabricCanvas.on(\"mouse:move\", onMouseMove);\n      fabricCanvas.on(\"mouse:up\", onMouseUp);\n      //双击\n      fabricCanvas.on(\"mouse:dblclick\", onDbClick);\n\n      //缩放\n      fabricCanvas.on(\"mouse:wheel\", onWheel);\n      canvasBox.addEventListener(\"wheel\", onCanvasBoxWheel, {\n        passive: false,\n      });\n\n      // 监听绘画选中/取消⌚️\n      fabricCanvas.on(\"selection:created\", onSelected);\n      fabricCanvas.on(\"selection:cleared\", onCancelSelected);\n    }\n  }, [\n    fabricCanvas,\n    onMouseDown,\n    onMouseMove,\n    onMouseUp,\n    onDbClick,\n    onSelected,\n    onCancelSelected,\n  ]);\n\n  return (\n    <div className=\"ccc-canvas-box\" ref={canvasBoxRef}>\n      <canvas\n        ref={canvasRef}\n        className=\"ccc-paint-canvas\"\n        id={`ccc-paint-canvas ${id}`}\n      ></canvas>\n    </div>\n  );\n};\n","/Users/jinmingliu/work/ccc-react-paint/src/tool/colorChange.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/content/canvas/utils.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/components/colorPicker/index.tsx",["139","140","141","142","143"],"import { useState, useEffect } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { toHexString } from \"../../tool/colorChange\";\nimport \"./index.less\";\nimport { getToolIcon } from \"../../pages/utils/tool\";\n//import Action from \"@/action\";\nimport { connect, useSelector, shallowEqual } from \"react-redux\";\nimport { RootState, StrawState } from \"../../type\";\nimport { Tool } from \"@/tool\";\n\ninterface ColorProps {\n  color: string;\n  onChange: (color: string) => void;\n  //straw: StrawState;\n}\n\nconst ColorPicker = (props: ColorProps) => {\n  const { color, onChange } = props;\n  const [showColor, setColor] = useState(color);\n  const straw: StrawState = {\n    strawFlag: false,\n    strawColor: \"\",\n  };\n  // const { straw } = useSelector((state: RootState) => {\n  //   console.log(\"select---\", state);\n  //   return {\n  //     straw: state.paint.straw,\n  //   };\n  // }, shallowEqual);\n\n  const handleChange = (color: any, event: any) => {\n    if (Tool.strawColor !== \"\") {\n      Tool.strawColor = \"\";\n    }\n    const hexColor: string = toHexString(color.rgb);\n    setColor(hexColor);\n    onChange(hexColor);\n  };\n\n  useEffect(() => {\n    setColor(straw.strawColor);\n  }, [straw.strawColor]);\n\n  useEffect(() => {\n    setColor(color);\n  }, [color]);\n\n  return (\n    <div className=\"colorBox\">\n      <h3>Color</h3>\n      <SketchPicker\n        className=\"colorBox-picker\"\n        width=\"100%\"\n        disableAlpha={false}\n        color={showColor}\n        onChange={handleChange}\n      />\n      <span\n        className={`straw-color ${straw.strawFlag ? \"selected-straw\" : \"\"}`}\n        onClick={() => {\n          Tool.strawFlag = true;\n          // Action.emit(\"paint.straw\", {\n          //   strawFlag: true,\n          // });\n        }}\n      >\n        {getToolIcon(\"strawIcon\")}\n      </span>\n    </div>\n  );\n};\nfunction mapStateToProps(state: RootState) {\n  return {\n    straw: state.paint.straw,\n  };\n}\n\n//export default connect(mapStateToProps)(ColorPicker);\n\nexport default ColorPicker;\n","/Users/jinmingliu/work/ccc-react-paint/src/components/sliderCard/index.tsx",[],"/Users/jinmingliu/work/ccc-react-paint/src/pages/index.tsx",["144"],"import Header from \"./header\";\nimport Content from \"./content\";\nimport \"./index.less\";\nimport \"./font.css\";\nimport { useState, useEffect, useImperativeHandle } from \"react\";\nimport { Tool } from \"../tool\";\ninterface HomeProps {\n  backgroundColor?: string;\n  width?: number;\n  height?: number;\n  imgSrc?: string;\n  cRef?: any;\n  id: string;\n}\n\nfunction getImageSize(url: string): Promise<{\n  width: number;\n  height: number;\n}> {\n  return new Promise(function (resolve, reject) {\n    const image = new Image();\n    image.onload = function () {\n      resolve({\n        width: image.width,\n        height: image.height,\n      });\n    };\n    image.onerror = function () {\n      reject(new Error(\"error\"));\n    };\n    image.src = url;\n  });\n}\n\n//https://bafybeie3y4v25vj3owiqc5jxdhpcqld5klixy32fhcfytyfyve7k5ssyv4.ipfs.dweb.link/orign.png\n//\"https://bafybeicgvg3vwtv5c633cjexbykjp75yjt755qhma4o7vgusa4ldvocz44.ipfs.dweb.link/orign.png\",\nexport default (props: HomeProps) => {\n  const pre = `core-paint`;\n  const {\n    imgSrc = \"https://bafybeicgvg3vwtv5c633cjexbykjp75yjt755qhma4o7vgusa4ldvocz44.ipfs.dweb.link/orign.png\",\n    width = 500,\n    height = 500,\n    cRef,\n    id,\n  } = props;\n  const [size, setSize] = useState({ width, height });\n\n  const loadImgSize = async (src: string) => {\n    const size = await getImageSize(src);\n    setSize(size);\n  };\n\n  useImperativeHandle(cRef, () => ({\n    getCurrentImageData: () => {\n      // const canvasElem: any = document.getElementById(`ccc-paint-canvas ${id}`);\n      // const imageData = canvasElem.toDataURL(\"image/png\");\n      return Tool.canvas.toDataURL();\n    },\n  }));\n\n  useEffect(() => {\n    if (imgSrc) {\n      loadImgSize(imgSrc);\n    } else {\n      if (width && height) {\n        setSize({ width, height });\n      }\n    }\n  }, [width, height, imgSrc]);\n\n  return (\n    <div className={pre}>\n      <Header pre={pre} />\n      <Content\n        pre={pre}\n        canvasSize={size}\n        imgSrc={imgSrc}\n        backgroundColor={\"#fff\"}\n      />\n    </div>\n  );\n};\n","/Users/jinmingliu/work/ccc-react-paint/src/pages/utils/index.ts",[],"/Users/jinmingliu/work/ccc-react-paint/src/tool/pen.tsx",["145"],{"ruleId":"146","severity":1,"message":"147","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":17},{"ruleId":"146","severity":1,"message":"150","line":1,"column":19,"nodeType":"148","messageId":"149","endLine":1,"endColumn":30},{"ruleId":"146","severity":1,"message":"151","line":1,"column":32,"nodeType":"148","messageId":"149","endLine":1,"endColumn":44},{"ruleId":"146","severity":1,"message":"152","line":5,"column":10,"nodeType":"148","messageId":"149","endLine":5,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":7,"column":8,"nodeType":"148","messageId":"149","endLine":7,"endColumn":13},{"ruleId":"146","severity":1,"message":"154","line":8,"column":8,"nodeType":"148","messageId":"149","endLine":8,"endColumn":14},{"ruleId":"146","severity":1,"message":"155","line":9,"column":8,"nodeType":"148","messageId":"149","endLine":9,"endColumn":12},{"ruleId":"146","severity":1,"message":"156","line":10,"column":8,"nodeType":"148","messageId":"149","endLine":10,"endColumn":17},{"ruleId":"146","severity":1,"message":"157","line":11,"column":10,"nodeType":"148","messageId":"149","endLine":11,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":22,"column":5,"nodeType":"160","messageId":"161","endLine":22,"endColumn":17,"suggestions":"162"},{"ruleId":"146","severity":1,"message":"163","line":133,"column":22,"nodeType":"148","messageId":"149","endLine":133,"endColumn":34},{"ruleId":"146","severity":1,"message":"164","line":136,"column":22,"nodeType":"148","messageId":"149","endLine":136,"endColumn":39},{"ruleId":"146","severity":1,"message":"164","line":140,"column":20,"nodeType":"148","messageId":"149","endLine":140,"endColumn":37},{"ruleId":"146","severity":1,"message":"164","line":144,"column":21,"nodeType":"148","messageId":"149","endLine":144,"endColumn":38},{"ruleId":"146","severity":1,"message":"164","line":146,"column":27,"nodeType":"148","messageId":"149","endLine":146,"endColumn":44},{"ruleId":"146","severity":1,"message":"164","line":149,"column":20,"nodeType":"148","messageId":"149","endLine":149,"endColumn":37},{"ruleId":"146","severity":1,"message":"164","line":151,"column":23,"nodeType":"148","messageId":"149","endLine":151,"endColumn":40},{"ruleId":"146","severity":1,"message":"164","line":155,"column":22,"nodeType":"148","messageId":"149","endLine":155,"endColumn":39},{"ruleId":"146","severity":1,"message":"164","line":159,"column":21,"nodeType":"148","messageId":"149","endLine":159,"endColumn":38},{"ruleId":"146","severity":1,"message":"164","line":163,"column":20,"nodeType":"148","messageId":"149","endLine":163,"endColumn":40},{"ruleId":"146","severity":1,"message":"165","line":206,"column":13,"nodeType":"148","messageId":"149","endLine":206,"endColumn":22},{"ruleId":"146","severity":1,"message":"163","line":314,"column":27,"nodeType":"148","messageId":"149","endLine":314,"endColumn":39},{"ruleId":"146","severity":1,"message":"166","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":16},{"ruleId":"146","severity":1,"message":"167","line":183,"column":16,"nodeType":"148","messageId":"149","endLine":183,"endColumn":23},{"ruleId":"146","severity":1,"message":"168","line":3,"column":15,"nodeType":"148","messageId":"149","endLine":3,"endColumn":19},{"ruleId":"146","severity":1,"message":"163","line":65,"column":21,"nodeType":"148","messageId":"149","endLine":65,"endColumn":33},{"ruleId":"146","severity":1,"message":"163","line":68,"column":27,"nodeType":"148","messageId":"149","endLine":68,"endColumn":39},{"ruleId":"146","severity":1,"message":"169","line":13,"column":27,"nodeType":"148","messageId":"149","endLine":13,"endColumn":32},{"ruleId":"146","severity":1,"message":"170","line":11,"column":8,"nodeType":"148","messageId":"149","endLine":11,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":80,"column":33,"nodeType":"160","messageId":"161","endLine":80,"endColumn":43,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"159","line":251,"column":23,"nodeType":"160","messageId":"161","endLine":251,"endColumn":36,"suggestions":"172"},{"ruleId":"146","severity":1,"message":"173","line":252,"column":31,"nodeType":"148","messageId":"149","endLine":252,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":253,"column":37,"nodeType":"160","messageId":"161","endLine":253,"endColumn":47,"suggestions":"174"},{"ruleId":"158","severity":1,"message":"159","line":320,"column":7,"nodeType":"160","messageId":"161","endLine":320,"endColumn":14,"suggestions":"175"},{"ruleId":"146","severity":1,"message":"147","line":7,"column":10,"nodeType":"148","messageId":"149","endLine":7,"endColumn":17},{"ruleId":"146","severity":1,"message":"150","line":7,"column":19,"nodeType":"148","messageId":"149","endLine":7,"endColumn":30},{"ruleId":"146","severity":1,"message":"151","line":7,"column":32,"nodeType":"148","messageId":"149","endLine":7,"endColumn":44},{"ruleId":"146","severity":1,"message":"164","line":31,"column":37,"nodeType":"148","messageId":"149","endLine":31,"endColumn":47},{"ruleId":"146","severity":1,"message":"176","line":72,"column":10,"nodeType":"148","messageId":"149","endLine":72,"endColumn":25},{"ruleId":"146","severity":1,"message":"177","line":44,"column":5,"nodeType":"148","messageId":"149","endLine":44,"endColumn":7},{"ruleId":"146","severity":1,"message":"167","line":32,"column":16,"nodeType":"148","messageId":"149","endLine":32,"endColumn":23},"@typescript-eslint/no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'shallowEqual' is defined but never used.","'RootState' is defined but never used.","'Shape' is defined but never used.","'Eraser' is defined but never used.","'Text' is defined but never used.","'FillColor' is defined but never used.","'useState' is defined but never used.","@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["178"],"'options' is defined but never used.","'event' is defined but never used.","'shapeType' is assigned a value but never used.","'fabric' is defined but never used.","'pointer' is assigned a value but never used.","'Tool' is defined but never used.","'color' is assigned a value but never used.","'ToolType' is defined but never used.",["179"],["180"],"'deltaX' is assigned a value but never used.",["181"],["182"],"'mapStateToProps' is defined but never used.","'id' is assigned a value but never used.",{"messageId":"183","fix":"184","desc":"185"},{"messageId":"183","fix":"186","desc":"185"},{"messageId":"183","fix":"187","desc":"185"},{"messageId":"183","fix":"188","desc":"185"},{"messageId":"183","fix":"189","desc":"185"},"suggestOptionalChain",{"range":"190","text":"191"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"192","text":"191"},{"range":"193","text":"191"},{"range":"194","text":"191"},{"range":"195","text":"191"},[586,587],"?",[2385,2386],[7190,7191],[7311,7312],[9144,9145]]